{"./":{"url":"./","title":"0 Вступ","keywords":"","body":"Чому цифрова трансформація потрібна компанії? Якщо наша компанія замислюється про цифрову трансформацію, то саме сьогодні час ризикнути. За даними минулорічного дослідження EY з питань готовності до підривних інновацій, більше двох третин інвесторів хочуть, щоб компанії бралися за реалізацію іноваційних проектів, навіть якщо вони ризиковані і не обіцяють миттєвої вигоди. Головний посил тут очевидний: краще робити хоч щось, ніж не робити нічого. За даними компанії IDC, близько третини найбільших компаній світу направляють не менше 10 відсотків своєї виручки на розробку та реалізацію цифрових стратегій. Саме по собі поняття \"Цифрова трансформація\" передбачає наявність світла в кінці тунелю, до якого можна дістатися при умови виділення на \"подорож\" достатнього обсягу часу, грошових і людських ресурсів. Але Цифрова трансформація – це не переїзд з пункту A в пункт B. Ті організації, які дійсно гідні називатися цифровими, еволюціонують щодня. Для них Цифрова трансформація - це спосіб вирішення і реалізації самих різних проблем і можливостей, які обумовлені не тільки новими технологіями, а й корпоративною культурою, стилем керівництва, ризиками та інвестиціями. Вони дозволяють своїм співробітникам експериментувати, зміцнюють культуру інновацій та інвестують у майбутнє, враховуючи в тому числі і свої приховані резерви при побудові нових бізнес-моделей. Можна найняти кращих розробників і встановити новітнє обладнання, але якщо ми не здатні проявляти гнучкість і новаторствувати щодня, то не вдасться встигати за шаленим темпом змін. Не можна просто \"жити в цифровому світі\", секрет в тому, щоб «створювати цифровий світ». В цьому контексті проект \"ТребаТак\" підходить як найкраще, так як передбачає використання методик краудсорсингу, S-BBM має інструменти управління знаннями та колективної роботи, дає можливість працювати над «створенням цифрового світу» без обмежень в часі, просторі. Обʼєднуючи зацікавлених працівників компаніі з будьяких куточків світу. Чому саме мій проект? Традиційно бізнес-консультанти закликали компанії спочатку зрозуміти «що» (стратегія) і \"чому\" (ринок, умови діяльності, можливості) і тільки потім зосередитися на \" як \" (культура, інструменти, технології та кадри, необхідні для реалізації задуманий). Однак в нашому динамічному і радикально мінливому світі вже недостатньо просто визначити стратегію і слідувати їй, оскільки майбутнє непередбачуване. Коли Христофор Колумб відправився в новий світ, він не знав ні куди він прямує, ні що його там чекає. Але він знав, що йому потрібен хороший корабель, провіанти і команда. Ми можемо не знати, \"Що\" і \"Чому\", але можемо взятися за \"Як\". І це допоможе нам рухатися швидше і при необхідності змінювати напрямок. Саме такий \"корабель я пропоную\", \"Америкою\" проекту \"ТребаТак\" є інтелектуальна мультиагеннтна інфориаційна система, посуті мережа агентів та сервісів, що автоматизують повторювані дії, раніше виконувані людьми, але з застосуванням математичних алгоритмів оптимізації, що дозволить виконати роботу значно краще та щвидше. Говорячи про мережу, зразу уявляємо сітку звʼзків між її агентами. Здавна відомо, якщо бажаєш як найзручніше для людей побудувати мережу доріг, треба спочатеу дати можливість їм натоптати стежки. Відстежуючи спілкування працівників, застосувавши методики S-BPM робимо теж саме що із стежками, змінюємо їх, кладемо \"асфальт\" та пускаємо \"машини\" розбудовуючи інформаційну систему. Тому в її основі є сервіс обміну повідомленнями. Проаналізувавши проблеми, небажані явища в роботі, що будуть встановлені в процесі розбудови системи завдяки сервісам, що дозволять використовувати краудсорсинг для їх пошуку, розробляємо логіку агентів та сервіси, що вони надають, так щоб усувати всі виявлені фактори негативного впливу на виробничий процес. Отже збільшуємо пропускну здатність виробничої системи в цілому, маємо кращу якіть продукції - перемагаємо в конкурентній боротьбі. Моя \"Santa Maria\" не малюнок на піску, зараз проект \"ТребаТак\" прцюючий програмно-апаратний комплекс, з інтерфейсом користувача, сервісами з відкритим програмним кодом в контейнерах Docker розміщених на мікросерверах з ARM архітектурою процесора. Прошу Вас витримати 23 хвилини моєї поганої англійської, під відео є текст на англійській мові, який я намагався озвучити. To view this video please enable JavaScript, and consider upgrading to a web browser that supports HTML5 video %accordion%Text of the presentation%accordion% Hi everybody. In this video, I will show the capabilities and hardware component of a client workstation using like example the reparatur workplace of the cutting and pre-production department. Let's start. Using Kroschu Explorer, the user gets access to services that allow them to perform production tasks faster thanks to the use of digital technologies. For example, an employee can send and receive production tasks, send orders for necessary tools and materials , and contact the support department, quality department, or IT department for help using the appropriate kroschu Explorer services. You can also quickly get help in each direction from the appropriate manager, and all this both using the kroschu Explorer interface and from a mobile terminal. For krimping the contact, reparatur must quickly and correctly get the necessary contact by its ID. For several years, the production has been using a paper catalog of contact developed by me. His is its electronic version with the ability to quickly search by id. This function is also performed by matrix-bot, which, at the request of the ident, provides similar information about the location of the contact, the number of the tool for crimping and visualizing in three projections, but can be used in the mobile client or in the kroschu Explorer communicator service. Such bots are the main structural element of the TrebaTak project information system. Each matrix-bot supports some kind of service, provides support for the workplace or process. But the main thing is a bot that works with on the Google Dialogfow platform. Dialogflow is a service that allows to create chatbots for different platforms and languages on different devices. It has its own built-in AI that recognizes voice commands. This bot performs a Help function and works as a dispatcher handling interruptions that occur during work process. If the user has the necessary rights and needs, you can make a voice or video call. For example, a manager can call a subordinate directly at the workplace. The call is duplicated to the mobile terminal. There is no longer any need for the master or his assistant to spend time to pass orders to the employee personally. A collection of bots forms an Intelligent Network that functions as an autonomous entity, automatically regulating functions and interactions with related agents, i.e. other bots, and available application services, such as control systems for wire cutting complexes, industrial transport robots. The necessary tools for this are already available in the project. Each agent, automating processes, controlling workstations, will collect statistical information for further analysis. Intelligent Network agents use the logic described by the project developers based on knowledge, the management system of which is also provided and already implemented in the project, to specify their roles, settings and relationships in relation to any other services. This is the previously shown electronic documentation service. Structural relationships between the elements of which can be described using the concept map creation tool, of which I am one of the developers. The electronic library for common use. You can create and edit records in electronic documentation using the same Kroschu Explorer with the status of a developer and access to the documentation directories Using the services and techniques described in the project documentation, employees can participate in the improvement process anonymously or as a member of the project. They can send problem description or description of Undesirable Effects in production process. Implemented electronic-participation service \"platform for analysis of arguments\" , allows use crowdsourcing for finding solutions to production problems, allowing project participants to offer solutions for every problem or Undesirable Effects. When I started working on the project, I believed in the company's principles described in The Purple Guideline. I had hoped to achieve success by bringing benefits to the company using intelligence and knowledge, but for me this is not possible. I try to answer the question “why” in the next section of the documentation. Unfortunately, none of the above is unnecessary for the plant management and I will be fired in a few days. Therefore, I did not have time to make an alpha version of the information system of the production department where I worked, and I present the project as it is at the moment. Perhaps my project will interest the management of another division of the company and I will have a job. %/accordion% "},"_README.html":{"url":"_README.html","title":"1 Зовнішні умови та вимоги до проекту ","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Те, що ти шуаєш, теж шукає тебе. -- Джелаладдін Румі Коронавірус торкнувся бізнесу компанії, після завершення жорсткого карантину попит катастрофічно впав, підприємства, зокрема наше, впроваджують низку заходів, щоб знизити вплив кризи на свою діяльність. Перш за все - скорочуються витрати. Але можна досягти того ж результату підвищенням швидкості товарного потоку завдяки оптимізації бізнес-процесів. За теорією обмежень, зараз, обмеженням системи для абсолютної більшості компаній, в тому числі нашої, є ринок. Своїми потужностями - виробничими, логістичними, персоналом, можемо задовільнити набагато більше попиту, ніж той, який до нас приходить зараз і який, можливо, буде приходити потім. Тому я пропоную, разом з зменшенням витрат, працювати над підвищенням швидкості товарного потоку, завдяки оптимізації бізнес-процесів, усунути всі пробки в цьому потоці. Оптимізація та автоматизація бізнес-процесів зробить можливим зменшити собівартість продукції та час виконання замовлень, що підвищить конкурентоспроможність продукції. Тобто можна буде орієнтуватися не на скорочення витрат, або не тільки, а на збільшення швидкості товарного потоку завдяки збільшенню кількості замовлень. Метою проекту є пропозиція ефективного в сучасних умовах програмно-апаратного комплексу, фреймворку для оптимізації бізнес-процесів в умовах кризи викликаної пандемією та небезпечної для підприемства загальноекономічної тенденції решорингу. Після декількох років вивчення теми оптимізації та автоматизацї виробничих процесів, презентацій, обговорень в яких приймав участь, склався ряд вимог як до такої інформаційної системи так і до базової методології, що визначатиме робочий цикл та структуру системи. Перш за все, користувачі процесів, стейкхолдери, повинні мати можливість самостійно створювати і адаптувати моделі процесів. Не повинно бути необхідності у фахівцях з моделювання процесів або фахівцях з впровадження процесів. Тільки учасники процесу по-справжньому розуміють складність процесів, в які вони залучені і часто особисто зацікавлені в їх оптимізації. По-друге, моделі процесів повинні легко формалізуватись, щоб звести до мінімуму програмування, оскільки користувачі процесів зазвичай не володіють необхідними для цього знаннями. По-третє, інтеграція з існуючою інформаційною системою практично не можлива, максимум виккористання web браузера для доступу до інтерфейсів розроблюваного фреймворку. Традиційні системи управління бізнес-процесами - BPM-системи (Business Process Management Suite, BPMS) мають стандартний набір графічних символів, в основному заснований на нотації BPMN (Business Process Model and Notation). Джим Сінур, провідний аналітик Gartner в області BPM, розшифрував BPMN як «Business People May Not Undestand», тобто «люди бізнесу можуть не розуміти» цю нотацію. Дійсно в BPMN-моделі при описі процесу необхідно виділити всі можливі сценарії і послідовності ланцюжків дій, що призводить до надзвичайного «розростання» і ускладнення моделі. Моделі стають дуже громіздкими і складними для сприйняття та аналізу. BPMN нотація сама по собі складна: вона містить більше ста різних символів, специфікація яких займає понад 500 сторінок, а перетворення BPMN-моделі у виконуваний додаток часто не дає належного ефекту, оскільки бізнес-експерти не здатні працювати з такими моделями без спеціальної підготовки. Бар'єр між бізнесом та ІТ як і раніше знаходиться на своєму місці. Зокрема тому в моєму проекті використовується альтернативна відкрита нотація, розроблена, Радянськими інженерами при створенні космічного корабля «Буран» та активно використовувана і нині - візуальна алгоритмічна мова програмування і моделювання ДРАКОН та інструменти з відкритим кодом, що її підтримують. Методологія S-BPM, обрана як основа робочого процесу розроблюваного фреймворку, передбачає суб'єктно-орієнтований підхід до управління бізнес-процесами основу складають акти (події) відносин між суб'єктами, до яких редукується функціонування підприємства, або, точніше сказати, на рівень яких проектується його діяльність. Рухаючись далі в цьому напрямку, суб'єктно-подієвий підхід в якості змістовного елемента системи пропонує розглядати будь-який акт суб'єкта, всі його відносини як з суб'єктами, так і з об'єктами. Такий підхід дає змогу, ще на етапі побудови моделі бізнес-процесів знаходити події, явища, що мають негативний вплив та усувати їх застосовуючи методики Теорії обмежень Голдрата, а на рівні архітектури фреймворку використовувати мікросервіси з акторною моделю взаємодії між ними. Кожному субëєкту За рахунок граничної простоти нотації опису бізнес-процесів ДРАКОН-схем та можливості екпорту безпосередньо в програмний код, і погляду на процес очима його учасників, а не бізнес-аналітиків, про відсутність яких на заводі я дізнався після останньої презентації, планую досягти високої якості моделей бізнес-процесів на етапі проектування автоматизованого процесу і швидкої програмної реалізації. Таким чином, вирішується ключова проблема - ламається горезвісний бар'єр між бізнесом та ІТ. Крім того, згодом, має бути істотний ефект при управлінні змінами автоматизованих процесів, оскільки такий підхід дозволяє мінімізувати залучення ІТ-фахівців в цій активності. У більшості випадків, людині не потрібні додаткові складні програми для планування і управління різними процесами також звичайно комерційні рішення не є дешевими, а в маштабах корпорації тягнуть взагалі значі витрати, тому в своєму проекті я використовую застосунки з відкритим кодом, тобто безкоштовні. Всix їх об‘єднує те, що це web-застосунки, отже забезпечують доступ до своїх інтерфейсів через браузери та мережу інтернет. Це дає змогу об‘єднати зуселя різних спеціалістів компанії віддалено, з будьякого куточку світу, і в будьякий час, застосовуючи краудсорсинг для виявлення проблем та пошуку рiшень. На виробництві ми використовуємо інформаційну систему розроблену ще в 2005 році, звичайно вона морально застаріла, на сучасному етапі розвитку прикладного ПО який характеризується переходом від «інтелектуальних пристроїв» до «інтелектуального простору», це не може влаштовувати. Витрачати робочий час на тривалий процес заповнення різноманітних статистичних форм виконаних в застарілому, схожому на Microsoft Access інтерфейсі, не є продуктивним. Встановити таку взаємодію працівника з інтелектуальними інформаційною системою коли її робота стає непомітною для останнього, не акцентує на собі увагу в процесі виробництва є на меті мого проекту. "},"trebatak.html":{"url":"trebatak.html","title":"2 Сучасний стан та опис проекту","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Сучасний стан та опис проекту «Ті компанії, які не усвідомлюють, що знання є засобом виробництва більш важливим, ніж земля, праця або капітал, поступово загинуть і ніколи не зрозуміють, що їх загубило» Ларі Прусак (1) Пропрацювавши на заводі Kromberg&Schubert Lu 10 років, я чітко усвідомлюю наскільки важко просувати нові ідеї. Звичайно на мій проект немає часу, просто з причини загальної перевантаженості, неможливості зібрати необхідних спеціалістів заводу в одному місці. Коли ж таки вдавалось провести презентації, мені досить складно було переконувати колег в необхідності впровадження моїх ідей, по причині їх технічної складності, а отже значноного об'єму інформації, що треба викласти в короткий проміжок часу. Часто життя разом з проблемою пропонує її рішення. В моєму випадку, проект ТребаТак розробляється як комплекс web-застосунків, тому його легко зробити дступним через всесвітню інформаційну мережу. Це дасє змогу ознайомиться з ними у будьякий час, якнайширше висвітлити технічні, теоретичні моменти, забезпечити зворотній зв'язок. Всі ресурси, що я використовую в проекті ТребаТак фізично розміщено на моїх власних серверах, захищено SSH сертифікатами. Для зацікавлених працівників компанії я швидко ваідповім на будьякі питання, треба просто мені зателефонувати після реєстрації на matrix-сервері проекту перейдіть до кімнати MESSAGE TO ADMINISTRATOR та виконати виклик, або з будьякої сторінки проекту де є кнопка як на малюнку. Тисныть на неї і надсилайте Ваше повідомлення, відповім зразу. Нажаль, після кількох років зусиль я не зміг виконати навіть нульвий крок програми проекту. Остання відповідь на питання, - \"Чому б не усунути проблеми описані в пілотному проекті з оптимізації бізнес процесів відділу порізки та попереднього виробництва?\", отримав відповідь - \"Не на часі\". Одну і ту ж, що від керівника відділу, коли вона усувала мене від роботи, щовід фінансового директора, коли просив його поновити мене на роботі. Я не можу зрозуміти чому ці проблеми залишаються на протязі всього часу, що я працюю на заводі і мають залишатися далі. Деякі зних є досить важливі. Наприклад: Поперечний переріз крімпа має бути виконано для кожного інструменту котрим виконано 30 000 напресувань. Часто, в ситуації коли до 30000 по інструменту залишається мало доступних накрімпувань, оператор замість фактичної кількості вносить в паперовий інструмент-папір не вірні данні. Накрімпування виконують в повному об'ємі а в документацію вносять значно меншу цифру, чи взагалі 0. Це є порушнням технічного процесу, вимог ISO 9000. Регулярно, що місяця, в металічний брухт відправляється значна кількість \"надлишкових\", проводів на виробництво яких витрачено значні ресурси підриємства. В ящикакх сотні кілограм проводів, це не шрот, ймовірно результат не точностей при розрахуну інтеграції, або управління завданнями на порізку. Автоматизація цих процесів усунула б проблему. Ще близько 30 проблем описано в пілотному проекті з оптимізації бізнес процесів відділу порізки та попереднього виробництва, але нікому не потрібно їх усувати, сотні перевірок, ревізій, їх не бачать. Непрямим поясненн, може бути доступне в мережі, інтервью менеджерів заводу. стенограма аудіоряду. Саме ще одну таку подругу мене і замінили. Тепер репаратуром зміни де я працював є близька подруга майстра зміни, останньої учасниці відео. Такий \"особливий\" підхід до кожного працівник, про який майстер говорить в інтерьв'ю, добре ілюструється відповіддю Олександра Шаварського, що довгий час працював фынансовим директором заводу, - \"дівчата тебе не хочуть\". Окрім емоцій, нічого не має значення, жоден фактор, ні відсутність будьяких притензій до моєї роботи за десять рокі, ні оптимізація власного робочого місця, що збвльшила пропускну здатніть на 20%, ні наявність лише в одного мене, на той момент, кваліфікаційного заліку по робочому місцю, ні моя вища технічна освіта, нічого не має значення коли ти не є подругою майстра зміни. Відсутність технічної освіти у менеджерів та прбудова керівної вертикалі на принципі виключної особистої відданості, не заважали виконанню виробничих завдань в докризисних умовах, хоча могло бути в ряді причин поганої репутації підприємства. Зараз це може стати серйозною прблемою так як для отримання конкурентної переваги в умовах кризи потрібні зміни спрямовані на покращення виробничих процесів, що в свою чергу вимагає досить широких технічних знань в різних областях навідь у керівників, що раніше могли без них обходитись. Тепер мені зрозуміле фомулювання по останній презентації скрінкаст котрої можна переглянути тут: \"Ми не маємо спеціалістів, що могли б цим займатися\". Що зараз собою являє проект ТребаТак ? По суті це ВРМ-проект автоматизацї управління, побудований з компонентів, які є web-застосунками, отже можуть бути розміщені як в глобальній мережі, так і в інтранеті компанії, що забезпечить повну конфіденційність інформаційних потоків. Апаратна база вже розгорнутих елементів, це два мікросервера на ARM архітектурі, загальною вартістю в 70$, та один сервер X86 архітектури на енергозберігаючому процесорі С-60, це ще 100 доларів. Загальна споживана потужність - менше 80 Вт, отже витрати на розгортання та енергозабезпечення подібної системи на підприємсві - не значні і не потребує ресурсів існуючих серверів. Система працюватиме абсолютно ізольвано від останніх. Всі компоненти доступні за посиланням: https://prc.treba.ml Китайське прокляття, на рахунок життя в часи змін, мабуть має сенс, але, як я вже згадував, житя разом з проблемами, надає можливості для їх вирішення. Працюючи зараз під час пандемії COVID-19, ми ще і маємо \"надворі\" четверту промислову революцію, отже можемо використовувати можливості, що вона дає. В світі її ще називають \"Індустрія чотири нуль \". Термін \"Індустрія чотири нуль\" зявився в Європі ще в 2011 році. На одній із промислових виставок у Ганновері. Уряд Німеччини заговорив про необхідність більш широкого застосування інформаційних технологій у виробництві. Спеціально створена для цього група офіційних осіб та професіоналів розробила стратегію перетворення виробничих підприємств країни на \"розумні\". Цей приклад наслідували й інші країни, які активно опановують нові технології. Тоді цей термін почали використовувати як синонім четвертої промислової революції. Суть її полягає в тому, що матеріальний світ сьогодні зливається з віртуальним, у результаті чого створюються нові кіберфізичні комплекси, які поєднані в єдину цифрову екосистему. Як наслідок - тотальна автоматизація. \"Індустрія чотири нуль\" означає всебічну автоматизацію абсолютно всіх процесів та етапів виробництва: від цифрового проектування виробу, створення його моделі — до віддаленого налаштування обладнання на заводі відповідно до технічних вимог для випуску цього конкретного \"розумного\" продукту, автоматично контролюючи якість та відповідність всім вимогам клієнта. Для цього вже існують апаратні та програмні платформи, але вони є доволі складними та витратними в впровадженні. Потребують залучення сторонніх консультантів, що не знайомі з специфікою роботи підприємства, можуть отримати доступ до конфіденційної інфрмації, що не є добре. Також просто купити, заплативши до 900 доларів за робоче місце в промисловій BPMS системі, та зразу її використовувати невийде. Потрібно щоб кожен процес налаштовувала команда спеціалістів, звичайно теж сторонніх і це не швидко, а криза вже зараз. Саме тому мій проект, його програмна частина, передбачає послідовну розробку кожного сервісу (мікросервісна архітектура), кожен сервіс це окремий веб застосунок з власним інтерфейсом та незелажним від інших функціоналом. після розробки та тестування він може використовуватись, не чекаючи поки будуть розроблені всі інші, отже зразу приносячи користь. Основним елементом системи є комунікаційний сервер на основі Matrix . Логіка кожного сервісів реалізується ботами під'єднаними до цього сервера взаємодіяти з якими можна як через веб інтерфейс робочого столу працівника, так і за допомогою застосунку в переносних терміналах. Вибір WEB платформи теж не випадковий, у цьому разі розроблювана cистема може бути легко інтегрована в існуючу інформаційну систему, що доречі вже морально застаріла, потрыбен лише браузер. Або повністю окремо, за дпомогою апаратних клієнтів з ARM архітектурою вартістю в десятки доларів. Саме такі мікросервери вже застосовуються для підтримки як серверу так і компонентів вже працюючої системи, що вже працює. Вдома знаходяться два сервера Raspberry PI три та Orangepi PC два, загальною вартістю менше ста доларів США, та неттоп як сервер за туж ціну. Всі зстосунки та програмні компоненти розробив сам, або адаптував з проектів з відкритими ліцензіями, не витративши на це нічого, окрім власного часу. Всі програмні компоненти працюють на мікро-серверах як окремі контейнери з використанням технології Docker. В проекті реалізовані спеціалізовані застосунки для адміністрування в середовищі Docker. Реалізовано внутрішній хостинг зображень та відео, електронна бібліотека підтримки проекту, що дає можливість ефективно працювати навіть без доступу до світової мережі інтернету. Кожен застосунок має на меті усунути коннкретне небажане явище описане на попередніх кроках розробки системи, або обслуговує одного з учасників виробничого процесу, є його програмним аватаром, актором в термінах реактивного програмування систем паралельних обчислень. Актором виступає бот, що передає та отримує повідомлення від інтерфейсів (користувачів), інших ботів, визначеним чином обробляє повідомлення та виконує дії. Давайте познайомимося з деякими, тими що мають усунути НБЯ в групі \"Проблема зв'язку\" Тепер немає потреби залишати робоче місце за для того щоб знайти працівника якості, чи чекати коли він дійде з протилежного кінця заводу та побачить Ваш банер, що інформує про потребу в його послугах, послугах інших працівників. Тепер повідомлення буде отримано зразу. і відповісти можна також негайно. Комунікувати можна як з терміналу на робочому місці так і з мобільного. Працівник не завжди знаходиться біля стаціонарного терміналу, а потреба в отриманні інформації про необхідний ідент виникає, (Берштелера, працівники якості, оператори) отже отримуємо інформацію про номер необхідного для накрімпування інструменту, місцезнаходження іденту контакта та його віщуалвзації в трех проекціях від бота за допомогою переносного терміналу. Отримуєму туж саму інформацію за допомогою веб застосунку - \"Каталог контактів та втулок\" за стаціонарним терміналом. Працюєо з довідковою системою по процесу \"контактування\", що побудована на основі бази знаньпроекту ТребаТак та інтелектуальної системи розробки ботів Dialogflow. Можна взаємодіяти з Krobot-том і з мобільного терміналу. Також бот реалізований на цій платформі розуміє мову, тобто в перспективі можна виконувати дії (замовлення матеріалів, інструментів, послуг служб підтримки, тлщо) за допомогою голосового інтерфейсу. як це прцює можна побачити та почути перейшовши [за посиланням] Ларі Прусак (англ. Larry Prusak) – дослідник, консультант, засновник та виконавчий директор Інституту управління знаннями (США), автор низки книг і публікацій на тему управління знаннями. "},"programa.html":{"url":"programa.html","title":"2.1 Програма проекту","keywords":"","body":"Програма проекту Розвиток проекту ТребаТак включає в себе наступні кроки: 0 крок Переконати, топ-менеджмент компанії в необхідності змін, впровадженні процесної методики управління. Щоб цього домогтися зазвичай застосовується сценарій \"пілотний проект\", саме таким проектом має стати ТребаТак. Працюючи над ним я враховую наступні моменти: • проект повинен формувати розуміння BPM, щоб забезпечити тверду прихильність і достатню підтримку. Для цього я створив блог до проекту, де докладно викладу власне бачення BPM. • проект не повинен довго затримуватися на етапі формування розуміння BPM, оскільки про мої зусилля будуть здебільшого судити по досягненню цілей проекту, а не з усвідомлення гіпотетичних переваг BPM, що лежать поза рамками проекту. Проект повинен стати кращою ілюстрацією бізнес-вигод BPM. Кращий спосіб переконати в користі BPM-не теоріями або прикладами з підручників, а досягненням результатів всередині самої організації, тому я розробляю робочу реалізацію системи по технологічному процесу виробничого відділу де я працюю; проект повинен бути узгоджений з іншими проектами, щоб виявити синергію удосконалення процесів. Це допоможе в підвищенні прозорості та прийнятності BPM у всій організації. Для такого узгодження потрібна площадка де керівники та спеціалісти виробничих проектів могли ознайомитись з процесами BPM-проекту. Такою площадкою станe чат проекту; також має забезпечуватися достатнє поширення інформації на початку проекту. Дуже часто інформація починає надходити вже в самому кінці реалізації проекту, коли рівень впевненості в успіху вище, що часто виявляється занадто мало і занадто пізно. Тому я реалізував доступ до проекту в світовій мережі, ще можна підписатись на кана RSS блогу. 1 крок. Переконатися, що у компанії є чітка стратегія на шляху до впровадження процесної методики управління. 2 крок. Побудувати модель процесу, розмежувати зони відповідальності, розробити показники ефективності процесу (показник результативності процесу ППІ) і навчитися їх вимірювати. Для цього я адаптував під мікрокомп‘ютерну архітектуру кілька внструментів: редактор інформаційних моделей. Ці компоненти дозволяють моделювати логіку процесів, для моделювання предметної області виробничої системи, пропоную використати адаптований мною інструмент для моделювання бази знань проекту, інструмент управління документами та фотоматеріалами (внутрішній фотохостинг). 3 крок. Оптимізувати і автоматизувати пілотний бізнес-процес за допомогою інструментів проекту. 4 крок. Виділити ключові бізнес-процеси, які створюють [основний внесок у досягнення стратегічних цілей і запрпонувати виконання автоматизації використавши досвід пілотного проекту. 5 крок. Зробити процес управління бізнес-процесами безперервним керуючим процесом. Тобто проект повинен перерости в загально-виробничий процес, стати впровадженим. Умови успіху Єдине понятійне поле + наявність зрозумілої стратегії в компанії замовника + виділені ключові бізнес-процеси + призначені власники процесів + визначені зони відповідальності (у цьому питанні кращий помічник - це нотації BPMN діаграма) + визначені набори показників для оцінки ефективності бізнес-процесів. Всі згадані тут компоненти проекту будуть описані в окремих публікаціях блогу та порталу документації. "},"metods.html":{"url":"metods.html","title":"2.2 Комплексна методологія","keywords":"","body":"Комплексна методологія. Вивчаючи літературу з оптимізації та управління бізнес-процесами (BPM), можу виділити кілька таких, що найбільш на слуху, Six Sigma, Lean, ТОС, варіанти їх синтезу. Lean-це методологія бізнес-трансформації, що виросла з TPS (Toyota Production System-виробнича система Тойоти). Її ключові ідеї – збільшення цінності для замовника за рахунок скорочення всіх видів втрат і підвищення рівномірності виробничих і бізнес-процесів. Six Sigma (Шість Сигм) – методологія, розроблена в компанії Моторола і націлена на підвищення цінності для замовника за рахунок зменшення дефектів і варіацій виробничих і бізнес-процесів на основі використання строгих методів математичної статистики. TOC (Theory of Constraints, теорія обмежень) розглядає бізнес як систему взаємозалежних по входах-виходах процесів. Ключова ідея тут зводиться до того, що продуктивність ланцюжка процесів дорівнює продуктивності самого повільного його ланки, і методологія в основному розглядає такі з цього висновки. Хоча ця методологія вже за охопленням, вона привносить оригінальні і цінні з практичної точки зору ідеї, тому не дивно, що вони завоювали широке визнання, в тому числі в рамках Lean, Six Sigma. Ще можна згадати TQM (Total Quality Management). Але ця методологія вже стала частиною історії, хоча основні її ідеї можна знайти в тих же Lean і Six Sigma, а також в стандартах якості серії ISO 9000. Плюс до цього окремі компанії та аналітики просувають власні, іноді досить цікаві методології. Але мабуть тільки TQM, Lean, Six Sigma і TOC досягли рівня мейнстріму, тобто навколо них оформилися спільноти, по ним написано багато книг, доступні навчальні курси. А з урахуванням того, що ці мейнстрімові методології в значній мірі перетинаються між собою (а Lean і Six Sigma взагалі зливаються в єдине ціле), мало ймовірно, що якась нова методологія раптово завоює загальне визнання. Власне кажучи, управління знаннями не є якимось особливо інноваційним розділом менеджменту. Навпаки, воно базується на напрацюваннях інших напрямків менеджменту: бенчмаркінгу, інноваційного менеджменту, бережливого виробництва та 6 сигм, а також на досягненнях у галузі інформаційних технологій. Все, що допомагає створювати, зберігати, структурувати, розповсюджувати, обмінюватися та використовувати знання, - може стати частиною системи управління знаннями (СУЗ). Тому я люблю порівнювати СУЗ із зонтом: В «зонтичності» системи управління знаннями закладено велику перевагу - немає жорстких методологічних рамок. Можна використовувати будь-які інструменти, які дозволяють усувати бар'єри на шляху розповсюдження знань, полегшують їх створення та перешкоджають їх витоку з компанії. В рамках BPM слід говорити тільки про \"тактичні\" методології, тісно пов'язаної з інструментарієм. Наприклад, S-BPM дозволяє дуже ефективно виявляти бізнес-процеси аналізуючи інформаційні потоки між робочими станціями, працівниками, а швидке прототипування виконуваних процесів з застосуванням візуальної мови ДРАКОН дозволяє скоротити дистанцію між бізнесом та ІТ і радикально підвищити час реакції на зміну вимог бізнесу. "},"Procesniy-pіdhіd.html":{"url":"Procesniy-pіdhіd.html","title":"2.3 Процесний підхід","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Процесний підхід до управління бізнес-процесами підприємства Підприємство являє собою систему, усередині якої відбувається безліч взаємозв'язаних процесів, які своїм функціонуванням визначають стан усієї організаційної системи. Процесний підхід – це розгляд всієї діяльності підприємства як сукупності взаємодіючих процесів, що протікають усередині організаційної структури підприємства і реалізовують мету його існування. Світовий досвід показує, що динамічний розвиток ринку товарів та послуг, постійні зміни в зовнішньому середовищі та зростання конкуренції зумовлюють необхідність пошуку нових інструментів і методів управління підприємствами. Сучасне зовнішнє середовище підприємств характеризується надзвичайно високим рівнем складності, мінливості та невизначеності. В таких умовах головним завданням підприємства стає швидке реагування на зміни і впровадження відповідних заходів в організації і здійсненні виробничої діяльності. Більшість підприємств сьогодні побудовано за функціональним принципом та рівнями ієрархії. Такий підхід був закладений Ф.Тейлором і його розвиток протягом останнього століття призвів до поширення функціональних організаційних структур управління підприємствами. Широке застосування функціональних структур управління, тим не менш створює значні ускладнення в здійсненні ефективного управління. Функціональні підрозділи підприємства є відносно відособленими, не завжди системно розуміють процеси функціонування усієї організації і не зацікавлені в тому, що їх безпосередньо не стосується. Комунікації між різними функціональними підрозділами часто значною мірою гальмуються через надмірну схильність до бюрократичних правил передачі повідомлення нагору по рівнях ієрархії. Такий підхід характерний для організації праці що на радянських підприємствах, нащадками яких є велика частка сучасних компаній моєї країни, що в західних компаніях - переважно сухі, складні для сприйняття текстові інструкції, що відносяться переважно до функціонального підходу: 1. Опис робочого місця 2. Посадова інструкція співробітника 3. Вимоги техніки безпеки і т. п. Все це, як багато хто пам'ятає, вкрай складно сприймається, і значна частина подібних інструкцій припадали пилом на полицях, найчастіше, ніким, крім творця, не прочитані. А досвід і вимоги передавалися від досвідченого співробітника новачкові. А що робити, якщо з'являється необхідність швидко змінити роботу цілої організації? А якщо ще при цьому впроваджується автоматизація? Відповід на ці запити і стала поява BPM (Business Process Management, BPM), BPMN (Business Process Model and Notation), BPMS (Business Process Management System) та відповідного підходу до організації і управління виробництвом на їх основі. BPM – це методологія. тобто набір основних принципів і підходів до побудови нотацій і самої організації роботи за допомогою бізнес-процесів. BPMN – нотація(мова), в якій будуються нотації, в тому числі, виконувані BPMS – IT система виконання, побудована за певними правилами, заданих в методологі. Якщо проводити аналогію з наукою, то BPM — це перш за все підхід, свого роду світогляд. BPMN — це методи і алгоритми вирішення конкретних завдань у вигляді моделі, що використовуючи однойменну нотацію описує, наприклад, докази теорем, або набір методів для створення проекту забезпечення електрикою виробничого об'єкта . А, в свою чергу, BPMS - це вже готові прикладні рішення, які можна \"включити\" і вони вже будуть працювати. Для математики це-готові рішення завдань, що мають практичне значення. Для фізики — безпосередня реалізація тієї самої електропроводки і підключення об'єктів. Для сфери айті — готовий програмний код. Управління бізнес-процесами полягає в тому, що ви регламентуєте, описуєте і змінюєте бізнес-процеси. Саме змінюєте, а не покращуєте, адже ви можете як поліпшити так і погіршити бізнес процес. На відміну від верстата або автомобіля, безпосередньо управляти за допомогою директив або натискання кнопки колективом неможливо. Але можна задати послідовність дій, яку буде виконувати колектив при вирішенні тієї чи іншої задачі. Саме це і називається BPM. Якщо стисло то: Управління бізнес-процесами (BPM) – це управління діями (автоматизованими і неавтоматизирвоанными) в колективі за допомогою бізнес-процесів. Щоб керувати будь-якими бізнес процесами необхідно: 1. Описати самі бізнес-процеси. 2. Впровадити в роботу колективу описаний бізнес-процес. 3. Призначити людей, відповідальних за бізнес-процеси, так званих, стек-холдерів або власників бізнес-процесів. Щоб описати бізнес-процес треба добре розуміти чим він є для підприємства. Процес взагалі – це послідовна зміна предметів і явищ, станів об'єкту в часі, сукупність послідовних дій, спрямованих на досягнення певного результату. Отже ключовими ознаками процесу взагалі і бізнес-процесу зокрема, слід вважати зміну стану об'єкта і спрямованість на певний результат. Бізнес-процеси підприємства включають в себе широкий спектр різних за своєю природою процесів, що пояснює відсутність усталеного визначення бізнес-процесу. В даний час існує багато визначень поняття бізнес-процесу, які описують бізнес-процес з різних точок зору. Усі визначення об'єднує насамперед акцентування уваги на тому, що бізнес-процеси є безперервними, мають певні входи (постачання ресурсів, виникнення ідеї нового продукту, послуги тощо) і виходи у вигляді продукту, що задовольняє потреби споживачів. На мій погляд, бізнес-процес являє собою спланований алгоритм взаємопов'язаних дій чи потоків роботи, який підлягає систематичним змінам під впливом факторів зовнішнього і внутрішнього середовища, в якому задіяні всі ресурси організації, спрямований на задоволення попиту споживачів і максимізацію прибутку. Цей процес має початок (вхід), певну кількість стадій діяльності і результат роботи, який отримується на виході. Не кожен процес, що здійснюється на підприємстві, можна назвати бізнес-процесом, навіть якщо цей процес призводить до створення продукту, що представляє цінність для кінцевого споживача. Відмінною особливістю бізнес-процесу є його бізнес-спрямованість, тобто він відображає певний напрям господарської діяльності, результатом якого є отримання прибутку. Виробнича діяльність підприємства, метою якої є реалізація виготовленого продукту, є бізнес-процесом, якщо в результаті продажу виробленої продукції підприємство отримає прибуток, оскільки метою створення будь-якого комерційного підприємства є отримання прибутку. Отже, бізнес-процес являє собою сукупність видів діяльності підприємства, результатом яких буде отримання прибутку. Основними бізнес-процесами є ті процеси, які орієнтовані на виробництво продукції або надання послуг, що представляють цінність для клієнта, та забезпечують одержання доходу для підприємства. Як правило, основних бізнес-процесів на підприємстві порівняно небагато. Забезпечуючі бізнес-процеси – це допоміжні процеси, які призначені для забезпечення виконання основних бізнес-процесів. У загальному виді вони забезпечують ресурсами та послугами всі бізнес-процеси підприємства. Управлінські бізнес-процеси – це бізнес-процеси, які охоплюють весь комплекс функцій менеджменту на рівні кожного бізнес-процесу й бізнес-системи в цілому. Бізнес-процеси розвитку – це бізнес-процеси вдосконалення, освоєння нових напрямків і технологій, а також інновацій. Виділення і класифікація бізнес-процесів конкретного підприємства, визначення їхніх параметрів – складне завдання, яке потрібно виконати при запровадженні процесного підходу до організації і управління діяльністю підприємства. Щоб впровадити в роботу колективу бізнес-процес, потрібно, спершу, довести його перевагу, порівняно в існуючим станом речей, більшу фінансову ефективність інші значимі переваги. Для кожного конкретного бізнес процесу потрібно виконати власне обгрунтування, але, загалом, впровадження процесного підхіду до організації і управління, дозволяє підприємству отримати такі переваги: – створюються умови для широкого делегування повноважень і відповідальності виконавцям, що сприяє підвищенню якості продукції і процесів; – кожен працівник підприємства прив'язаний до кінцевого результату і відповідає за його якість; – основним критерієм якості і цінності продукції є задоволення потреб споживачів; – скорочується кількість рівнів прийняття рішень, унаслідок чого підвищується оперативність і адаптивність діяльності підприємства; – усуваються невиправдані витрати, які не впливають на процес створення цінності продукції; – покращуються комунікації, оскільки обмін інформацією здійснюється усередині робочої групи бізнес-процесу, що виключає її спотворення, а також значно скорочує терміни передачі інформації від одного суб'єкта бізнес-процесу до іншого; – створюються умови для автоматизації технологій виконання бізнес-процесів. Отже: В сучасних умовах мінливого бізнес-середовища, підприємства, організаційна побудова яких базується на функціонально-ієрархічних засадах, не в змозі забезпечити адекватне оперативне реагування на швидкоплинні зміни і впровадження відповідних заходів в організації і здійсненні підприємницької діяльності. За таких умов ведення бізнесу більш дієвим слід вважати процесний підхід до управління, який є одним із небагатьох способів для підприємства залишатися конкурентоспроможним. Саме тому функціонування сучасних підприємств відзначаються необхідністю застосування процесного підходу до управління ними. Основним об'єктом процесного підходу до управління є бізнес-процес, який являє собою спланований алгоритм взаємопов'язаних дій чи потоків роботи, який підлягає систематичним змінам під впливом факторів зовнішнього і внутрішнього середовища, в якому задіяні всі ресурси організації, спрямований на задоволення попиту споживачів і максимізацію прибутку. Цей процес має початок (вхід), певну кількість стадій діяльності і результат роботи, який отримується на виході. Підприємство може мати багато різних бізнес-процесів, які групують в такі великі групи: основні, забезпечуючі, управлінські та бізнес-процеси розвитку. "},"sbpm.html":{"url":"sbpm.html","title":"2.4 S-BPM","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" S–BPM Cкладність існуючих сьогодні нотацій опису бізнес-процесів На етапі моделювання бізнес-процесів ключовою проблемою є складність існуючих сьогодні нотацій опису бізнес-процесів. Джим Сайнур (Jim Sinur) - один з провідних аналітиків Gartner в області BPM – сказав кілька років тому в своєму блозі, що BPMN може розшифровуватися як «Business People May not understand», тобто «бізнес-люди можуть не розуміти» нотацію BPMN, яка сьогодні є широко поширеною в практиці опису та автоматизації процесів. S–BPM є суб'єктно-орієнтованим підходом до управління бізнес-процесами (S–BPM - Subject-oriented BPM). Методологія S-BPM, створена доктором Фляйшманом на початку 2000 рр., спирається на давно опрацьовані в інформатиці математичні методи, які забезпечує можливість негайного перетворення процесних моделей у виконувані програми. Основний фокус Основний фокус S-BPM при описі та управлінні процесами робиться на суб'єктах, тобто співробітників, які виконують певні функції в рамках процесів, і на комунікаціях між співробітниками. На відміну від більшості використовуваних сьогодні мов опису процесів, в методології S-BPM нічого не відбувається саме по собі, без суб'єкт. Суб'єкти є активними носіями дій, що виконуються над об'єктами, саме тому на них акцентується увага. Це дозволяє при опис бізнес-процесів досягти близькості до семантики природної мови. Найбільш загальні конструкції в будь-якому природному мовою виглядають як показано на малюнку 1. Рис. 1. Конструкції природної мови Загальна структура речення: суб'єкт (іменник) - присудок (дієслово) - об'єкт (іменник). Нотація моделювання в S-BPM гранично проста і складається всього з 5 елемент:  суб'єкт (виконавець) у процесі;  повідомлення-Інформація, якою виконавці обмінюються в ході процес;  3 типи дій або станів, в яких знаходиться суб'єкт (Виконавець): функціональний стан, в якому співробітник виконають якесь завдання, стан відправки і стан отримання інформація. Ключова відмінність нового покоління інструментів у фокусі S-BPM-люди, учасники процесу, а сам процес-набір структурованих комунікацій між виконавцями, кожен з яких виконує на своєму робочому місці певний набір дій (завдань). Автоматизацією такого процесу полягає у створенні автоматизованих робочих місць для співробітників, які дозволяють їм виконати необхідні завдання, і реалізації взаємодії між виконавцями. 5 Методологія S-BPM реалізується платформою Metasonic Suite, до складу якої входять якої входять різні модулі, що підтримують весь цикл створення і експлуатації додатків. "},"Metodologіchna-osnova-proektu.html":{"url":"Metodologіchna-osnova-proektu.html","title":"3 Знання - методологічна основа проекту","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Методологічна основа проекту Етап 1. Створення знань Створення знань - це процес, що супроводжує появу відкриттів, винаходів та інновацій. Причому як у вузькому, загальноприйнятому сенсі (як відкриття нового хімічного елементу, наприклад), так і в більш широкому (коли, наприклад, маркетолог проаналізував великий об'єм інформації та створив портрет цільової аудиторії). У цьому випадку ми говоримо про те, що знання з'являються з внутрішніх джерел: досвіду співробітників, накопиченого ними в процесі рішення робочих задач або реалізації проектів, аналізу даних (фінансових, маркетингових), НДДКР (науково-дослідницьких та дослідно-конструкторських робіт). Також є джерела, зовнішні щодо організації, - це досвід нещодавно прийнятих до компанії співробітників, книги та публікації в ЗМІ, тренінги, семінари, конференції, знання та досвід консультантів, що працюють з компанією. Звісно, із зовнішніх джерел ми отримуємо готові знання, а не створюємо їх знову. Яким чином ми отримуємо знання з цих джерел? Перш за все, під час навчання, яке може бути: a) формальним; b) неформальним. Формальне навчання має на увазі передачу структурованої визначеним чином інформації під час організованого навчального процесу. Це може бути підвищення кваліфікації на курсах і тренінгах, навчання у ВУЗі, слухання докладів на семінарах і конференціях, читання книг. Неформальне навчання не має чіткої структури та, як правило, відбувається спонтанно. Наприклад, це може бути обмін досвідом з колегами під час спілкування («базікання біля кавомашини»), наставництво (якщо воно не формалізоване у межах процесу адаптації персоналу), спілкування з консультантами та інше. Частина знань фіксується співробітниками у документах: посадових і робочих інструкціях, описі бізнес-процесів, звітах (про проекти, маркетингові дослідження, аналіз рекламацій споживачів та ін.), картках клієнтів у CRM-системі, технічних специфікаціях і кресленнях, рекламних матеріалах. Все інше знання зберігається лише в головах працівників. Головна задача управління знаннями на цьому етапі циклу - знайти та зафіксувати критично важливі для організації знання. Зафіксувати знання можна в різних формах: • письмові документи в електронному та паперовому вигляді; • візуалізація: майнд-мапи, інфографіка, арт-скрайбінг, комікси; • аудіо-підкасти; • відеофайли (відеолекції, інтерв'ю з учасниками подій, відеоінструкції виконання роботи тощо); • фізичні об'єкти (наприклад, зразки браку в цеху - це також спосіб зафіксувати знання про те, які вироби необхідно відбраковувати). Етап 2. Організація знань Коли знання зафіксовані (в документах та/або базі знань компанії), важливо організувати їх таким чином, щоб полегшити доступ до них та забезпечити можливість швидкого зручного пошуку. Тобто організація знань зводиться до: a) структурування знань; b) зберігання знань. Для зберігання знань використовуються: • звичайні бібліотеки (на старих підприємствах ще збереглися так звані технічні архіви, в яких зберігаються не тільки книги, але й креслення, звіти та інша технічна документація); • бази даних (наприклад, всередині CRM і ERP-систем, систем документообігу); • спеціально створені сховища знань як частина Інтранету (внутрішнього корпоративного порталу), який може бути організований з використанням різного програмного забезпечення. Те, наскільки популярним буде ваше сховище знань у співробітників компанії, залежить від того, як добре ви структуруєте всередині нього інформацію. Хороша система класифікації - головний атрибут вдалої системи зберігання знань. Система класифікації повинна бути: • гнучкою та легко змінюваною; • простою та зрозумілою; • підзвітною, тобто вона повинна містити посилання на власника знань та їх джерело. Швидше за все, класифікація буде складатися з декількох рівнів - спробуйте зробити так, щоб їх було не дуже багато. Зручно, коли між документами є перехресні гіперпосилання (як у Вікіпедії). Організуючи сховище знань, відповідаємо на наступні запитання: • В якій формі будуть зберігатися документи? • Хто буде вносити у сховище нові документи? Чи буде хтось їх редагувати перед внесенням? • За яким принципом ви будете відбирати найцінніші знання для вашого сховища? • Хто буде відповідати за оновлення документів та архівування старих версій? • Яким чином потенційним користувачам буде повідомлятися про оновлення сховища знань? • Наскільки легко отримати доступ до сховища? Наприклад, чи є ярлик сховища знань на робочому столі кожного комп'ютера в офісі? • Чи будуть обмеження доступу до інформації всередині сховища (наприклад, в залежності від посади)? • А що у вас з інформаційною безпекою? Яким чином будуть враховуватися вимоги політики інформаційної безпеки вашої компанії? Обміркуйте відповіді на всі запитання, визначіться з технічним способом організації сховища, створіть верхній рівень класифікації та починайте потрохи заповнювати базу. Під час просування вперед буде прояснюватися структура нижчих рівнів класифікації. Але не розраховуйте створити одну структуру сховища раз і назавжди - скоріш за все, вам це не вдасться, і під час заповнювання ви будете її корегувати. Етап 3. Розповсюдження знань Є два шляхи розповсюдження (передачі) знань: • прямий - від людини до людини; • опосередкований - коли носій знання фіксує його у будь-якому вигляді (див. попередній етап «Організація знання»), а отримувач знання бере його вже з цього проміжного джерела. Не залежно від того, яким шляхом розповсюджуються знання, основою для розповсюдження є створення загальної мови - операціональних визначень у термінології Е. Демінга. «Слова не мають значення, якщо вони не можуть бути перетворені на дії, з якими погоджуються всі. Операціональне визначення дає можливість передачі змісту за допомогою понять» Е. Демінг Навіщо це потрібно? Щоб уникнути різночитань. Щоб гарантувати, що отримувач знання правильно розуміє те, що до нього намагається донести той, хто знання віддає. Існує популярний експеримент зі словом «собачка»: якщо вимовити це слово перед декількома людьми, у кожного виникає свій образ собачки, і ці образи співпадають нечасто (від двірняжки з відвислими вухами до знаку @). Але ж це дуже просте слово! Що вже казати про більш складні поняття. Саме тому під час формування бази знань важливо прописувати глосарій, а під час передачі знань прямим шляхом потрібно обов'язково уточнювати, як співрозмовник зрозумів донесену до нього інформацію. Яких форм може набувати прямий шлях розповсюдження знань? Це може бути: • нарада; • робоча група з проекту чи для вирішення конкретної проблеми; • сесія із залученням фасилітатора (стратегічна сесія, ретроспектива проекту, форум для обміну досвідом та кращими практиками, дискусійна панель та ін.); • онлайн форум; • тренінг, семінар, лекція; • наставництво; • особиста консультація; • інтерв'ювання; • сторітелінг (запуск корпоративних «байок» - історій про успіхи/провали як спосіб розповсюдження отриманих уроків). У деяких випадках (наприклад, тренінг, наставництво, особиста консультація) можна чітко виділити носія знань (що віддає) та споживачів знань (отримувачів). В інших випадках (наради, робочі групи, форуми та ін.) всі учасники є як носіями, так і споживачами знань. Кожен з них робить свій внесок у процес розповсюдження знань. Що необхідно враховувати під час організації передачі знань прямим шляхом? Цей шлях є найбільш ефективним для поширення неявних знань. Ключовим моментом у прямій передачі знань є довіра. Отримувачі знань мають довіряти тому, хто віддає, як експерту. Експерт не повинен бачити загрозу в розповсюдженні свого знання і має бути готовим ділитися знанням. Експерти мають бути досяжними. Отримувачам знань потрібно знати, до кого звертатися з тим чи іншим запитанням, і в них має бути можливість до цієї людини звернутися (тобто контакти експерта відомі, він має час та бажання відповісти на запитання). З цією метою у великих компаніях роблять аналог «жовтих сторінок» - базу даних експертів із світлинами, контактами та стислим описом сфери компетенцій. Для цього ж організуються співтовариства практиків, корпоративні онлайн та офлайн форуми, семінари та конференції, «ярмарки» знань. Важливо не те, яка інформація передається, а те, що в кінцевому результаті залишається в голові отримувача інформації (потрібно працювати з операціональними визначеннями та формою подачі інформації, вмінням формулювати, пояснювати, спрощувати та ін.). Під час групових методів передачі знань необхідна фасилітація процесу, інакше групове обговорення буде неефективним. Непрямий шлях передачі знань також може мати різні форми: • корпоративна база знань; • корпоративна газета, електронний бюлетень або e-mail розсилка; • дошки візуалізації, стенди, «стіна знань»; • книги; • посилання на сторонні щодо організації веб-сайти. Під час організації непрямої передачі знань необхідно враховувати наступні моменти: Таким способом можна поширювати тільки явні (вже формалізовані) знання. Для цього шляху розробка загальних операціональних визначень є особливо критичною, бо під час розмови немає можливості прояснити ті моменти, що були незрозумілі отримувачу знання. Чим ширше використовуються інструменти візуалізації - тим краще. Потрібно фіксувати тільки критично важливі для організації знання, бо інакше вашим сховищем знань (у будь-якому вигляді) ніхто не буде користуватися. Крім того, чим це сховище більше, тим важче його підтримувати. Необхідно інформувати отримувачів про місцезнаходження знань та робити знання легко досяжними (робити розсилку оновлень в базі знань, вішати дошки візуалізації у часто відвідуваних місцях та ін.). Етап 4. Використання знань Знання, що не використовується - це мертве знання. Люди використовують тільки ті знання, які мають для них практичну користь. Тому важливо з особливою ретельністю формувати бази знань, відокремлюючи все потенційно непотрібне, і регулярно передивлятися бази, архівуючи застарілі знання. Ще один важливий момент: необхідно постійно аналізувати потреби у знаннях, що знову виникають, бо в процесі роботи з'являються заявки на ті знання, яких в організації ще не існує. У процесі використання знання постійно «вбудовуються» у новий контекст і оновлюються - виходячи з досвіду вживання у нових ситуаціях, ерудиції носіїв знань, нової інформації, що постійно поступає. Тому цикл знань - це не замкнене кільце, а висхідна спіраль, коли створене знання, проходячи через етапи організації, розповсюдження та використання, генерує вже нове знання. Це плинний, безперервний процес. Його можна запустити (наприклад, організуючи нову компанію), але неможливо зупинити. Навчання завдовжки в життя - як для людей, так і для організацій. Про спіраль знань поговоримо більш детально. "},"Upravlіnnya-znannyami.html":{"url":"Upravlіnnya-znannyami.html","title":"3.1 Управління знаннями","keywords":"","body":"Управління знаннями Управління знаннями - це сукупність процесів, які керують створенням, поширенням, обробкою і використанням інформації всередині підприємства. Містком до інтелектуальних технологій є поняття знання, яке трактується в Knowledge management (KM) вкрай вільно і широко. Так ресурси знань розрізняються в залежності від галузей індустрії і додатків, але, як правило, включають керівництва, листи, новини, інформацію про замовників, відомості про конкурентів і технології, що накопичилися в процесі розробки. Самі ці ресурси можуть перебувати в різних місцях: в базах даних, базах знань, в картотечних блоках, у фахівців і можуть бути розосереджені по всьому підприємству. При цьому часто одна частина підприємства дублює роботу іншої просто тому, що неможливо знайти і використовувати знання, що знаходяться в сусідніх підрозділах. Таким чином системи КМ повинні (але це поки тільки Декларація) інтегрувати різноманітні технології: електронна пошта та інтернет; бази та сховища даних (Data Warehouse); системи групової роботи з інформацією; системи підтримки прийняття рішення; локальні корпоративні системи автоматизації; системи документообігу та workflow; Контекстний пошук. При цьому, жодна з цих технологій не включає \"знання\" в контексті інтелектуальних (експертних) систем, тобто баз знань. Фактично системи, що позиціонують себе як СУЗ-системи управління знаннями (Fulcrum, Documentum i4, Knowledge Station, etc.) [Попов, 2001] реалізують лише окремі елементи вищенаведеного списку. Всі вони працюють або з неструктурованою інформацією, або з даними, тому природним першим інструментарієм КМ стали сховища даних, які працюють за принципом центрального складу. Як правило, сховища містять багаторічні версії звичайної бази даних, фізично розміщуються в тій же самій базі. Коли всі дані містяться в єдиному сховищі, вивчення та аналіз зв'язків між окремими елементами може бути більш плідним. Надалі ідея сховища була розвинена в поняття корпоративної пам'яті (corporate memory) [Kuhn, Abecker, 1998], яка за аналогією з людською пам'яттю дозволяє накопичувати інформацію з попереднього досвіду і, нібито, уникати повторення помилок, що є чисто декларативним твердженням. Корпоративна пам'ять зберігає інформацію з різних джерел підприємства і робить цю інформацію доступною фахівцям для вирішення виробничих завдань. Лише третій стовпець на рис.1 дійсно ілюструє, що корпоративна пам'ять в ідеалі включає і знання фахівців. Корпоративна пам'ять повинна не дозволяти зникнути знанням вибувають фахівців (догляд на пенсію, звільнення та ін.) і зберігати великі обсяги даних, інформації та знань з різних джерел підприємства. Тобто ситуація to be (як треба) повинна виходити за рамки даних до знань. Тоді можна буде виділити два рівні корпоративної пам'яті: Рівень 1. Рівень експліцитної або явної інформації-це дані і знання, які можуть бути знайдені в документах організації у формі повідомлень, листів, статей, довідників, патентів, креслень, відео - і аудіо-записів, програмного забезпечення і т.д. це перший і другий стовпці малюнка. Рівень 2. Рівень імпліцитної або прихованої інформації-це персональне знання, невідривно пов'язане з індивідуальним досвідом. Воно може бути передано через прямий контакт \"віч-на-віч\" через процедури вилучення знань. Саме приховане знання-те практичне знання, яке є ключовим при прийнятті рішень і управлінні технологічними процесами. Насправді ці два типи інформації, подібні до двох сторін однієї і тієї ж медалі, однаково важливі в структурі корпоративної пам'яті. При розробці систем КМ можна виділити наступні етапи: Накопичення. Стихійне і безсистемне накопичення інформації в організації. Витяг. Процес виявлення джерел даних і знань, їх \"видобуток\" і опис. Це один з найбільш складних і трудомістких етапів. Від його успішності залежить подальша життєздатність системи. Структурування. На цьому етапі повинна бути виділені основні поняття, вироблена структура подання інформації, що володіє максимальною наочністю, простотою зміни і доповнення. Формалізація і програмна реалізація. Представлення структурованої інформації у форматах машинної обробки-тобто мовами опису даних і знань і організація автоматизованої обробки і пошуку інформації за запитом. Обслуговування. Корекція формалізованих даних і знань (додавання, оновлення): «чистка», тобто видалення застарілої інформації; фільтрація даних і знань для пошуку інформації, необхідної користувачам. Правила проведення перших чотирьох етапів мають на увазі володіння інструментами інженерії знань, досить молодої науки, що народилася при розробці інтелектуальних систем. Вже класичною помилкою практично всіх (без винятку!) автоматизованих систем є верховенство і домінування етапу 4, тобто програмної реалізації над предметною постановкою етапів 1-3. У системах КМ це особливо небезпечно, так як саме предметні знання є ядром таких систем. "},"Ontologіya-znan.html":{"url":"Ontologіya-znan.html","title":"3.2 Онтологія знань","keywords":"","body":"Існують різні підходи, моделі та мови опису даних і знань. Однак все більшої популярності останнім часом набувають онтології. Онтологія - за визначенням Грубера [Gruber, 1997], є специфікація концептуалізації, формалізоване представлення основних понять і зв'язків між ними. Раніше цей філософський термін означав вчення про буття, потім він перемістився в область точних наук, де напів-формалізовані концептуальні моделі завжди супроводжували математично суворим визначенням. Під визначення онтології підпадають багато понятійні структури: ієрархія класів в об'єктно-орієнтованому програмуванні, концептуальні карти (concept maps), семантичні мережі, і т.п. Можна ще ширше трактувати онтологію – наприклад, як сценарій або процес, як те, що структурує хаос. Онтологія - це структурна специфікація певної предметної області, її формалізоване уявлення, яке включає словник (або Імена) покажчиків на терміни предметної області і логічні вирази, які описують, як вони співвідносяться один з одним. Oнтології забезпечують словник для представлення та обміну знаннями про деяку предмету область і безліч зв'язків, встановлених між термінами в цьому словнику. Для опису онтологій існують різні мови і системи, однак, найбільш перспективним представляється візуальний підхід, що дозволяє фахівцям безпосередньо «малювати» онтології, що допомагає наочно сформулювати і пояснити природу і структуру явищ. Візуальні моделі, наприклад, графи володіють особливою когнітивної (тобто пізнавальної) силою. Будь-який програмний графічний пакет від PaintBrush до Visio можна використовувати як первинний інструмент опису онтологій. Однак, проектування і розробка онотлогій, тобто онтологічний Інжиніринг, не є тривіальним завданням. Він вимагає від розробників професійного володіння технологіями інженерії знань - від методів вилучення знань до структурування і формалізації [Гаврилова, Хорошевський, 2000]. Онтологічний Інжиніринг повинен і може стати \"дороговказною ниткою\" для всього процесу структурування комплексних систем автоматизації, так як він об'єднує дві основні технології проектування великих систем – об'єктно-орієнтований і структурний аналіз. "},"Ontologіchniy-іnzhinіring.html":{"url":"Ontologіchniy-іnzhinіring.html","title":"3.3 Онтологічний інжиніринг","keywords":"","body":"Онтологічний інжиніринг - ядро концепції управління знаннями (КМ-Knowledge Management), яке з'явилося в середині 90-их років у великих корпораціях, де проблеми обробки інформація набули особливої гостроти і стали критичними. При цьому стало очевидним, що основним вузьким місцем є обробка знань, накопичених фахівцями компанії, так як саме знання забезпечують перевагу перед конкурентами. KM займається проблемою організації інформації в компанії, адже часто інформації в компаніях накопичено навіть більше, ніж вони здатні оперативно обробити. Різні організації намагаються вирішувати це питання по-своєму, але при цьому кожна компанія прагне збільшити ефективність обробки інформації. Перевагою онтологічного інжинірингу в KM є цілісний підхід до автоматизації підприємства. Онтологія не тільки мета, а й засіб формування систем КМ. При цьому досягаються: системність - онтологія представляє цілісний погляд на предметну область; однаковість - матеріал, представлений в єдиній формі набагато краще сприймається і відтворюється; науковість - побудова онтології дозволяє відновити відсутні логічні зв'язки у всій їх повноті. Важливість онтологічного інжинірингу як і систем KM в цілому, обумовлена також тим, що знання, яке не описано, не тиражовано і не зростає, в кінцевому рахунку стає застарілим і марним. Навпаки, знання, яке поширюється, набувається і обмінюється, генерує нове знання. Таким чином, будь-яка система автоматизації зачіпає проблеми зберігання корпоративних знань, але тільки системи КМ орієнтовані на це в явному вигляді, тим самим сприяючи збереженню цього найціннішого ресурсу, а не розчиняючи його в алгоритмах, бізнес-процесах і специфікаціях. "},"Algoritm-ontologіchnogo-іnzhinіringu.html":{"url":"Algoritm-ontologіchnogo-іnzhinіringu.html","title":"3.4 Алгоритм онтологічного інжинірингу","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" виділення концептів-базових понять даної предметної області; визначення \"висоти дерева онтологій\" - числа рівнів Абстракції; розподіл концептів за рівнями; побудова зв'язків між концептами-визначення відносин і взаємодій базових понять; консультації з різними фахівцями для виключення протиріч і неточностей. "},"cykl.html":{"url":"cykl.html","title":"4 Цикл управління знаннями","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Знання - це багатство фірми. Найважливішим ресурсом сучасного підприємства, здатним значно вплинути на підвищення його конкурентоспроможності та інвестіційнной привабливості, є корпоративні знання. Сьогодні з цим ніхто не сперечається. Питання тільки в тому, як скориститися цими корпоративними знаннями. Адже більшість з них схованих у ГОЛОВАХ СПІВРОБІТНИКІВ. Люі План, екс-президент корпорації Хьюлет-Паккард (HP), вважає: «Якби тільки корпорація HP усвідомлювала те, що вона знає, вона була б в три рази більш продуктивною». Управління знаннями стає найбільш гарячою темою, обговорюється фахівцями всіх рівнів управління. Здатність ефективно використовувати і розвивати знання, втілювати їх в нові вироби і послуги перетворюється в найважливіший фактор виживання в умовах інформаційного суспільства. Знання - це багатство фірми, яке видобувається, обробляється і поширюється. Едуард Попов КОРПОРАТИВНІ СИСТЕМИ УПРАВЛІННЯ ЗНАННЯМИ Робочий цикл проекту ТребаТак як системи управління знаннями включає наступні етапи: Накопичення Накопичення інформації в організації. Наприклад в файловій системі робочого середовища існуючої інформаційної системи, в поштових акаунтах, тощо. Витяг Процес виявлення джерел даних і знань, їх \"видобуток\" і опис. Це один з найбільш складних і трудомістких етапів. Від його успішності залежить подальша життєздатність системи. Структурування На цьому етапі мають бути виділені основні поняття, вироблена структура подання інформації, що володіє максимальною наочністю, простотою зміни і доповнення. Формалізація і програмна реалізація Представлення структурованої інформації у форматах машинної обробки-тобто мовами опису даних і знань, організація автоматизованої обробки і пошуку інформації за запитом. Обслуговування Корекція формалізованих даних і знань (додавання, оновлення): «чистка», тобто видалення застарілої інформації; фільтрація даних і знань для пошуку інформації, необхідної користувачам. Правила проведення перших чотирьох етапів мають на увазі володіння інструментами інженерії знань, досить молодої науки, що народилася при розробці інтелектуальних систем. Література необхідна для ознайомлення з темою доступна в читальні проекту. "},"Nakopichennya-znan.html":{"url":"Nakopichennya-znan.html","title":"4.1 Накопичення знань","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" У більшості компаній, наше підприемство не є виключенням, знання існують не в документах, а в індивідуальному або колективній свідомості. Вони часто інтуїтивні, не описані і рідко є достатньо докладними, щоб являти собою самостійну цінність. Такі знання можуть загубитися, коли який-небудь співробітник залишає компанію. Часто буває і так, що існуючі знання не використовуються, оскільки вони не інтегровані в бізнес. Вони існують у вигляді різних індивідуальних точок зору і не організовані для створення колективного розуму і способу мислення. Виправити цю ситуацію, та оптимізувати бізнес процеси, на прикладі виробничого відділу порізки та попереднього виробництва, можуть інструменти розроблюваного мною проекту. В інтерфейсі робочого столу працівника створено можливість додавати описи небажаних вищ, що заважають роботі, сповільнюючи виконання виробничих завдань. Отримана інформація обробляється як завдання для аналізу, уасником команди оптимізації, що відповідальний за виробничий процес в якому задіяно даного працівника. При потребі додається до загального списку НБЯ, далі може бути додана до дерева поточної реальнсті. Подібно до наведеного прикладу, можна створити інтерфейс для агрегації знань з будьякої виробничої теми. Але зараз , першочерговим завданням є пошук рішень, що можуть сприяти прискjренню потоку виконнання замовлень клієнтів заводу. Знайти та усунути НБЯ - перший крок на цьому шляху. "},"Vityag-znan.html":{"url":"Vityag-znan.html","title":"4.2 Витяг знань","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Витяг знань Витяг знань - це gроцес виявлення джерел даних, знань, їх \"видобуток\" і опис та структурування. "},"strukturuvannya-znan.html":{"url":"strukturuvannya-znan.html","title":"4.3 Структурування знань","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Структурування знань Структурування знань - третій крок на шляху побудови системи управління знаннями. На цьому етапі повинні бути виділені основні поняття, вироблена структура представлення інформації, що володіє максимальною наочністю, простотою зміни і доповнення. Для цього я використовую застосунок з відкритим кодом, ліцензія Apache 2 License, в розробці якого приймав участь - Cotoami concept map. Concept Map, що перекладається як концепт-карта, як технологія побудови онтологічно структурованих візуалізацій знань, була розроблена Д. Новаком на прикінці минулого століття як засіб інтенсифікації навчального процесу при викладанні наукових дисциплін. Концепт, за Д. Новаком – це ментальний образ предмета, об’єкта чи абстрактної ідеї. Концепт-карти допомагають показати, як людина бачить взаємовідносини між речами, ідеями, людьми тощо. Концепт-карта є графічним інструментом для організації та подання знань у вигляді об’єктів, зв’язки між якими утворюються «стрілками». Вони можуть містити текстові надписи, які пояснюють характер зв’язку між поняттями. Знання отримані на попередньому етапі, додані до бази знань та wiki сховища проекту ТребаТак, аналізуються та групуються в онтології, карти концептів. Користуючись останніми , команди з оптимізації можуть визначати технологічні процеси, або робочі дії, що підлягають першочерговій увазі за принципом Парето. Для прикладу реалізації вищеописаного підходу, я обрав процес контактування, що має найбільшу вагу за витратами часу та ресурсів, серед техпроцесів виробничого відділу . Далі показано створення карти концептів небажаних явищ (НБЯ), описаних на попередньому етапі. gif Візуалізуючи отриману карту, та знаючи на яких НБЯ маємо насуттевіші втрати робочого часу, я визначив як першочергове завдання, усунення НБЯ згрупованих в категорію \"Проблеми зв'язку\". На наступному кроці описуємо зміни, т.з. ін'єкції в термінах теорії обмежень, що складуть дерево майбутньої реальності. "},"formal-zac-ya-znan.html":{"url":"formal-zac-ya-znan.html","title":"4.4 Формалізація знань","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Формалізація знань Під формалізацією знань будемо розуміти викладення професійних знань на формальній або частково формальній мові. Формалізація тісно пов'язана з управлінням знаннями. Процес побудови карт концептів, в результаті, описує лише самі об'єкти та зв'язки між ними. В проектуванні програмних застосунків є повна аналогія - опис об'єктної області. Але тут ніяк не відображено як саме ті чи інші об'єкти взаємодіють між собою, логіку їх взаємодії. А саме такі знання необхідні для розробки алгоритмів, що реалізують функціонал застосунків, що я пропоную використовувати для усуненняя небажаних явищ. Для візуалізації таких специфічних знань, пропоную використовувати візуальну мову моделювання ДРАКОН. Самі моделі розробляються за допомогою спеціалізованого web-застосунку, як тут працювати видно на зображені. Результат - файл зображення, що можна додати до концепта, що описує дію, чи процес. Наприклад: Складові якісного результату контактування. Логіка налаштування крімпувального пресу. Переробка проводок "},"programna-real-zac-ya.html":{"url":"programna-real-zac-ya.html","title":"4.5 Програмна реалізація","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Китайське прокляття, на рахунок життя в часи змін, мабуть має сенс, але нам не вибирати, тому працюючи зараз під час пандемії COVID-19. Ми ще і маємо \"надворі\" четверту промислову революцію, отже мусимо зважати на виклики та вимоги, що вона несе і використовувати можливості, що вона дає. В світі її ще називають \"Індустрія чотири нуль\". Термін \"Індустрія чотири нуль\" зявився в Європі ще в 2011 році. На одній з промислових виставок у Ганновері уряд Німеччини заговорив про необхідність більш широкого застосування інформаційних технологій у виробництві. Спеціально створена для цього група офіційних осіб та професіоналів розробила стратегію перетворення виробничих підприємств країни на \"розумні\". Цей приклад наслідували й інші країни, які активно опановують нові технології. Тоді цей термін почали використовувати як синонім четвертої промислової революції. Суть її полягає в тому, що матеріальний світ сьогодні зливається з віртуальним, у результаті чого створюються нові кіберфізичні комплекси, які поєднані в єдину цифрову екосистему. Як наслідок - тотальна автоматизація. \"Індустрія чотири нуль\" означає всебічну автоматизацію абсолютно всіх процесів та етапів виробництва: від цифрового проектування виробу, створення його моделі — до віддаленого налаштування обладнання на заводі відповідно до технічних вимог для випуску цього конкретного \"розумного\" продукту, автоматично контролюючи якість та відповідність всім вимогам клієнта. Для цього вже існують апаратні та програмні платформи, але вони є доволі складними та витратними в впровадженні. Потребують залучення сторонніх консультантів, що не знайомі з специфікою роботи підприємства, можуть отримати доступ до конфіденційної інфрмації, що не є добре. Також просто купити, заплативши до 900 доларів за робоче місце в промисловій BPMS системі, та зразу її використовувати невийде. Потрібно щоб кожен процес налаштовувала команда спеціалістів, звичайно теж сторонніх і це не швидко, а криза вже зараз. Саме тому мій проект, його програмна частина, передбачає послідовну розробку кожного сервісу. Це можливо завляки мікросервісній архітектурі програмної частини проекту, кожен сервіс це окремий веб застосунок з власним інтерфейсом та незелажним від інших функціоналом. Після розробки та тестування він може використовуватись, не чекаючи поки будуть розроблені всі інші, отже зразу приносячи користь. Основним елементом системи є комунікаційний сервер на основі Matrix . Логіка кожного з сервісів реалізується ботами під'єднаними до цього сервера, взаємодіяти з якими можна як через веб інтерфейс робочого столу працівника, так і за допомогою застосунку в переносних терміналах. Вибір WEB платформи теж не випадковий, у цьому разі розроблювана cистема може бути легко інтегрована в існуючу інформаційну систему, що доречі вже морально застаріла, просто через браузер. Або повністю окремо, через власні монітори під'єднані до системних блоків на процесорах з ARM архітектурою вартістю в десятки доларів. Саме такі мікросервери вже застосовуються для підтримки як серверу так і компонентів вже працюючої системи, що я тут презентую. Вдома знаходяться два сервера Raspberry PI три та Orangepi PC два, загальною вартістю менше ста доларів США, та неттоп як сервер за туж ціну. Всі застосунки та програмні компоненти розробив сам, або адаптував з проектів з відкритими ліцензіями, не витративши на це нічого, окрім власного часу який є найціннішим ресурсом для менене особисто. Всі програмні компоненти працюють на серверах як окремі контейнери з використанням технології Docker. В проекті реалізовані спеціалізовані застосунки для адміністрування в середовищі Docker. Є також власний GIT репозиторій, для зберігання коду компонентів проекту, підтримки презентацій на Gitpitch . Реалізовано внутрішній хостинг зображень та відео, електронна бібліотека підтримки проекту, система управління документами, що дає можливість ефективно працювати навіть без доступу до світової мережі інтернету. Кожен програмний компонент має на меті усунути конкретне небажане явище описане на попередніх кроках розробки системи, або обслуговує одного з учасників виробничого процесу, є його програмним аватаром, актором в термінах реактивного програмування систем паралельних обчислень. Актором виступає бот, що передає та отримує повідомлення від інтерфейсів користувачів, інших ботів, визначеним чином обробляє повідомлення та виконує дії. Давайте познайомимося з деякими, тими що мають усунути НБЯ в групі \"Проблема зв'язку\" Тепер немає потреби залишати робоче місце за для того щоб знайти працівника якості, чи чекати коли він дійде з протилежного кінця заводу та побачить Ваш банер, що інформує про потребу в його послугах, послугах інших працівників. Тепер повідомлення буде отримано зразу. і відповісти можна також негайно. Як це працює Комунікувати можна як з терміналу на робочому місці так і з мобільного. Працівник не завжди знаходиться біля стаціонарного терміналу, а потреба в отриманні інформації про необхідний матеріал виникає, у працівника з доставки матеріалів, працівники якості, оператора робочої станції. Отже отримуємо інформацію про номер необхідного для роботи інструменту, місцезнаходження матеріалу за номером та його віщуалвзації в трех проекціях від бота, за допомогою переносного терміналу лише надіславши йому короткий запит з номером шуканого матеріалу. Отримуєму туж саму інформацію за допомогою веб застосунку - \"Каталог контактів та втулок\" за стаціонарним терміналом. Працюємо з довідковою системою по процесу \"контактування\", має назву Krobot, що побудована на основі бази знань проекту ТребаТак, інтелектуальної системи розробки ботів Dialogflow та адаптована для роботи з протоколом Matrix за допомогою спеціалізованого застосунку. Можна взаємодіяти з Krobot-том і з мобільного терміналу: Також, бот створений на цій платформі розуміє мову, тобто в перспективі, можна виконувати дії, наприклад замовлення матеріалів, інструментів, послуг служб підтримки, за допомогою голосового інтерфейсу. як це прцює можна побачити та почути перейшовши за посиланням Ми зараз використовуємо паперові носії для передачі виробничих завдань працівникам на робочих станціях, такі завдання видруковуються сотнями за зміну, теж саме з замовленнями на матеріали. В сумі це сотні кілограм паперу в рік на заводі та тони в маштабах компанії. Я пропоную вирішити цю проблему за допомогою EDMS системи електронного обігу документів. Це працює. На зображенні показано процес відправки замовлення на порізку проводів виконавцю. Кожен раз, відкриваючи замовлення, виконавець бачить його актуальну версію. Також може переглянути історію замовлень. "},"korekc-ya-formal-zovanih-znan.html":{"url":"korekc-ya-formal-zovanih-znan.html","title":"4.6 Корекція формалізованих знань","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" В процесі роботи команди поліпшення, використання застосунків реалізованих в межах проекту, можуть виникати проблеми, питання, нові пропозиції від працівників та учасників команди поліпшення. Така можливість передбачає і відповідні інструменти, а саме: Внутрішній механізм коментування в WiKi компоненті проекту. Автоматичне повідомлення про зміни в базі знань проекту учасників що мають доступ до неї. Прямий чат з розробником проекту у WiKi компоненті . Збір повідомлень від користувачів з клієнтського інтерфейсу, через додавання описів не бажаних явищ та за допомогою інтелектуального бота KroBot. "},"Cikl-procesu-upravlіnnya-bіznes-procesami.html":{"url":"Cikl-procesu-upravlіnnya-bіznes-procesami.html","title":"5 Цикл процесу управління бізнес-процесами","keywords":"","body":"Як би \"кострубато\" це не прозвучало, але управління бізнес процесами це - процес. Ним так само можна управляти, і його так само можна оптимізувати. Цикл процесу управління бізнес процесами складається з 5 основних підпроцесів. Всі підпроцеси послідовні, тобто виконуються строго один за одним. Але я ж вже казав про те, [що таке управління бізнес процесами][1], навіщо ще раз торкатися цієї теми? Різниця в тому, що раніше я розповідав про управління бізнес процесами як про галузmoo діяльності або функції. Просто кажучи-що потрібно робити щоб вважати що ми керуємо процесами. Я розповів з яких етапів складається управління бізнес процесами і що знаходиться в зоні відповідальності. Зараз же я хочу показати які операції, з управління процесами, необхідно виконувати стосовно до процесів організації. Тобто я кажу про те як управління процесами перетворити в постійний потік. Проектування Моделювання Виконання Моніторинг Оптимізація Кожен процес в компанії повинен пройти через даний цикл. В такому разі можна буде сказати що процес керований і знаходиться на стадії «Вдосконалення» (див. [Життєвий цикл бізнес процесів][2]). Проектування. На даному етапі існує 2 основні завдання: визначити як бізнес процес існує на даний момент і зрозуміти якими ми хочемо його бачити в майбутньому. Для цього необхідно чітко позначити: з яких операцій складається процес межі процесу послідовність операцій виконавців операцій кого, як і коли процес інформує про ті чи інші події які варіанти розвитку процесу існують на даний момент як необхідно діяти у форс мажорних обставин які стандартні процедури існують як вимірювати ключові показники в рамках яких значень повинні підтримуватися показники документи процесу що є продуктом процесу і яка його якість Головне, створити наочну конструкцію або дизайн процесу. Потім вже можна пробігтися по основних моментах і позначити що б нам хотілося поміняти. Моделювання бізнес процесів. Далі, на підставі раніше складеного проекту, створюємо модель. Що таке модель? Це та ж конструкція, що ми вже створили, але з додаванням різних змінних. Припустимо, у моделі можна вказати що певна операція займає не 1 годину а тільки 10 хв. Як це вплине на інші операції? Що потрібно змінити, щоб це стало можливим? І т. д. Важливо не забути додати всілякі варіанти розвитку процесу. Таким чином ми створюємо оптимальне співвідношення витрат і результатів. Надалі я буду детально розповідати про моделювання бізнес процесів. Виконання. Якими б чудовими не були бізнес процеси на папері, в реальності завжди знайдуться «але». Ці «але» можна виявити тільки одним шляхом – виконати процес практично. А якщо точніше, то запустити його в роботу і уважно спостерігати. Без цього етапу ніяк не обійтися. Тому вкрай важливо приділити достатньо часу на етап проектування і моделювання – це дозволить знизити ризики. Так само важливо мати підстраховку на непередбачений випадок. Наприклад, якщо ви розробляєте нову систему управління бізнес-процесами, не впроваджуйте її відразу у всій компанії. Можна впровадити її в одному з виробничихивідділів нехай буде можливість перейти на стару систему в разі виникнення непередбачених складнощів. Моніторинг бізнес-процесів. Це спостереження і відстеження процесів. Організувати моніторинг необхідно таким чином, щоб можна було легко отримати інформацію про хід і результати процесу. При цьому необхідно вести статистику для відстежування зміни показників у часі. Простий доступ до інформації забезпечує можливість виправити щось вчасно. Наприклад якщо замовлення внутрішнього чи зовнішнього клієнта «застрягло» на одній із стадій процесу, моніторинг дозволить не тільки побачити, але і своєчасно втрутитися і внести поправки в процес. Те, наскільки детально відбувається відстеження процесів, залежить як від самих процесів, так і від ваших цілей. Якщо процес новий і тільки почав роботу, необхідно детальний моніторинг. Так само детальність залежить від можливостей всієї системи. Пам'ятайте – витрати, які ви несете на отримання інформації, не повинні перевищувати цінності цієї інформації. Оптимізація бізнес процесів. На даному етапі ви аналізуєте дані, отримані в результаті моніторингу, проектування і моделювання. Метою такого аналізу є отримання інформації про можливості поліпшення. Для того щоб зрозуміти, що необхідно покращувати, необхідно виявити «вузькі місця» процесу. Таке місце визначає продуктивність всього процесу, це найслабша ланка. Наприклад якщо ви виробляєте 100 одиниць продукції а продавати можете лише 80, продажі є таким вузьким місцем. Немає сенсу виробляти більше, ніж ви продаєте. Ну принаймні в загальній ситуації. Коли ж методи оптимізації не дають необхідного результату, необхідно придивитися до реінжинірингу, або повної перебудови, бізнес процесу. "},"toc.html":{"url":"toc.html","title":"6 Теорія обмежень","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Теорія обмежень. (приклади по кожному кроку ! треба додати) Теорія обмежень Theory of Constraints (TOC) являє собою загальну філософію управління, розроблена Елияху Голдратом та вперше популляризована в бізнес-романі бестселері «Ціль». Постулатом теорії обмежень є твердження, що всі реальні виробничі, або не виробничі системи мають головну ціль чи цілі. Швидкість з якою система досягає свою ціль, називають пропускною здатністю, або проходом системи. Обмеження. Обмеження — одне з основних понять TOC, є тісно пов’язаним з ідеєю пропускної здатності. Можна впевнено стверджувати, що будь-яка система повинна мати хочаб одне обмеження, те, що визначає пропускну здатність системи. Це обмеження можна порівняти з найслабшою ланкою ланцюга. Якщо є потреба впливати на пропускну здатність системи, визначення обмеження системи є обов’язковою дією. Ціль теорії обмежень. Ціль теорії обмежень полягає в тому, щоб дати особам зацікавленим оптимізацією виробничих процесів, необхідні інструменти дляуправління обмеженнями найбільш ефективними способами. Такі інструменти я пропонуватиму створити в цій роботі стосовно виробничих ланок нашого заводу. Також я стверджую можливість їх розробки власноруч чи за участі інших працівників що залежить від бажаної швидкості створення цих інструментів та витрат на їх розробку, що підприємство вважатиме за необхідне понести у разі прийнятя моїх пропозицій. Шляхи мінімізації цих витрат також буде запропоновано мною далі. Теорія обмежень стверджує, що реальні системи більш ніж з трьома обмеженнями, річ дуже рідкісна. Звичайно лише одне обмеження є ключовим. Це пояснюється тим, що в складних системах, таким як наше підприємство, існує велика кількість взаємозв’язків, що в свою чергу призводить до зменшення кількості загальних рівнів свободи системи. Наслідком цього парадоксу є те, що управління можна зробити простим та ефективним забезпечивши керівників інструментом для визначення конкретної області на котрій треба зосередити увагу. Пошук такої області є завданням для людини досить складним, просто з фізіологічних особливостей мозку. Людина не може усвідомлювати одночасно велику кількість абстрактних понять, 5 — 7 небільше. Збільшення їх кількості призводить до того що якийсь з об’єктів спостереження чи контролю випадає з поля зору спостерігача, що спотворює кінцевий результат дослідження. В діючому виробничому середовищі кількість параметрів що треба враховувати значно більша. Я часто бачу працівників, що мають посаду на яку я зараз претендую, що на протязі всієї зміни виконують дослідження витрат часу по робочих станціях за кількома категоріями. Як виявилось, кількість відслідковуваних параметрів близька до згаданого мною фізіологічного обмеження. Фактична ж кількість «щілин» куди втрачається час, зменшуючи швидкість проходу по робочі станції, значно більша. В цій роботі я зупинюсь на них окремо, це так званіен НБЯ, — небажані явища. Опис та оцінка впливу кожного з НБЯ, стане основою для подальшого пошуку обмежень системи, аналізу та розробки варіантів дій. Нажаль, ці небажані явища, залишаються практично незмінними на протязі всього часу що я маю змогу їх спостерігати, а це вже більше восьми років. Така «стабільність», в свою чергу, має як найменше, звернути увагу на можливість перегляду існуючих інструментів та методів, вбік більш сучасних, таких, що можуть враховувати значно більшу кількість факторів впливу на пропускну здатність робочих станцій, оперативно їх обробляти знаходячи вузькі місця в системі не завтра чи через кілька днів після аналізу паперових носіїв, а просто в момент виникнення. Більше того, оперативна виробнича ситуація постійно змінюється: зміни в замовленнях, невеликі партії нестандартних проводок, вихід з ладу інструментів чи обладнання, людський фактор, все це разом і визначає прохід по робочій станції та швидкість генерації продукту в цілому. Все вище сказане на мою думку, має спонукати до пошуку таких інструментів, що дозволили би приймати правильні рішення максимально оперативно. Напиклад можна використати досвід інших компаній. Автоматизований моніторинг змін Використання автоматизованого моніторингу змін в виробничому процесі спеціально налаштованому на виявлення небажаних явищ та їх вливу на робочі станції, зробить процес покращення останнього безперервним. Розробниками ТОС визначено 5 кроків такого процесу, та передбчено їх циклічне виконання. Для підприємства Процес безперервного поліпшення включає в себе наступні кроки: Крок 1. Знайти вузькі ланки (обмеження) системи У відділі порізки та попереднього виробництва працює велика кількість робочих станцій, що здавалося б, має забезпечити значний буфер часу, також є склад напівфабрикатів (порізані провода). Але все це 100% не гарантує від зупинок конвеєрів проектів. Такі зупинки мають місце. І це стається тоді, коли НЖЯ зменшуючи прохід по робочим станціям вичерпують буфер \"стаючи в ряд\". Виявити, більш того, передбачити такі \"паради НЖЯ\" можна автоматизувавши процес. Крок 2. Вирішити, як максимально ефективно використовувати обмеження. Звичайно для того, щоб зупинити роботу конвеєра проету, або зменшити його швидкість, дстатньо щоб небуло лише одного необхідного ідента провода чи деталі. Працівники проектів намагаються виходити з таких ситуацій заміняючи відсутні іденти проводами без кнтактів нарізаних прямо з котушок. Немає деталі, незакінчені проводки їздять по колу, поки в авральному режимі деталь шукають чи виробляють. Контроль буфера запасу автоматизовано, без впливу людського фактору, вирішив би проблему за рахунок своєчасного попередження про її виникнення. Що дало б запас часу на попередження негативної ситуації за рахунок перерозподілу завдань по відділу порізки чи замовлнню в постачальників. Зараз же контроль за запасами на проектах виконується людьми, зокрема берштелерами проектів. Допомогти їм в роботі можливо, десь навідь звільнивши їх від постійно повторюваних, щодених операцій пов’язаних з аналізом та передачею інформації, створивши зручний спеціалізований інтерфейс забезпечивши засобамим звязку. Крок 3. Узгодити всі інші дії з рішенням в пункті №2. Переконатися, що всі робочі станції забезпечують безперебійну роботу вузької ланки. У разі виконання термінового замовлення вся увага працівників задіяних у його виконанні має бути зосереджена на робочій станції, що його виконує. Завдання для берштелера по забезпеченню матеріалами стають приорітетними, QS відповідальний за перевірку продукції виконує її без зволікань, про час виконання замовлення попереджено керівника проекту та відповідального за доставку на конвеєр берштелера. Всі описані дії передбачають швидке інформування учасників про зміни в перебігу їх поточних виробничих завдань, що сучасними засобами можна забезпечити без великих затрат часу та грошей застосувавши готові безкоштовні програмні рішення та недорогі апаратні. Наприклад можна інтегрувати функції з’язоку в термінал робочої станції. Крок 4. Підвищити пропускну здатність обмеження Автоматизувавши процес розподілу виробничих завдань по робочим станціям, зменшивши втрати часу на комунікації можна дуже швидко змінювати пропускну здатність відділу Крок 5. Якщо на попередньому етапі обмеження було усунуто, то перейти до кроку 1 Але не дозволяйте інерції створювати нові обмеження. "},"Viznachennya-TOC.html":{"url":"Viznachennya-TOC.html","title":"6.1 Визначення ТОС","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Визначення ТОС Активація – залучення ресурсу в роботу Активація (activation) – задіяння ресурсу в роботі. Застосування: у ТОС стверджується, що одна лише активація ресурсу не означає, що ресурс використовується продуктивно і в цілях досягнення мети. Якщо виконується більше роботи, ніж того необхідно, щоб максимально використовувати обмеження або відповідним чином підкоритися його роботі, то результатом такого буде надмірне скупчення обсягів незавершеного виробництва та/або обсягів готової продукції. Перспектива: у звичайній практиці традиційних систем менеджменту – активувати ресурс, який не є обмеженням, крім рівня, необхідного для використання ресурсу-обмеження. У ТОС ресурс, який не є обмеженням, активується на рівні, необхідному для повного використання ресурсу- Обмеження Обмеження (constraint) – фактор, який, в кінцевому рахунку, обмежує продуктивність системи або організації. Фактор, який міг би сприяти більш успішному досягненню мети, якщо б організація могла збільшити його, більш повно використовувати його, або більш ефективно підкорятися йому. Перспектива: існування обмеження системи, а також той факт, що ефективність організації може бути поліпшена шляхом знаходження і ретельного управління або усунення обмеження, є основою ТОС. Амбітна мета Амбітна мета (ambitious target) – мета, досягнення якої є вкрай бажаним, але на даний момент неможливо. Приклад: така заява є амбітною метою для більшості організацій: «Через 4 роки чистий прибуток нашої компанії буде дорівнювати поточному обсягу доходів». Застосування: Для більшості менеджерів, існує багато невизначеностей, що оточують їх на шляху до досягнення амбітної мети. Обидва дерева — Дерево передумов і Дерево стратегії і тактики — є інструментами Розумових процесів ТОС, які можуть використовуватися для визначення того, як досягти амбітної мети. Аналіз VATI Аналіз VATI (VATI analysis) – підрозділ існуючих виробничих структур на 4 узагальнених типу: V, A, T, і I. кожна ця виробнича середовище володіє певним властивим їй набором небажаних явищ, правильне розуміння яких значно спростить управління діяльністю. Кожен тип виробничого середовища названий тією буквою, яку візуально нагадує логічний (не физический0 потік матеріалів. Застосування: певний завод може бути поєднанням виробничих структур різних типів. Завод типу «T» Завод типу T (T-plant) – виробниче середовище, що характеризується прямим потоком виробництва (на початку), за яким слід розбіжність точок фінальної збірки. Таким чином, логічний ланцюг матеріального потоку нагадує букву «Т»: всі матеріали піддаються однаковій обробці, після чого (на заключних етапах) надходять на різні складальні етапи, щоб зробити різні кінцеві продукти. Завод типу «V» Завод типу «V» (V-plant) – виробниче середовище, яка характеризується невеликою кількістю сировини, яке, проходячи через серію різних операцій, перетворюється на велику кількість готової продукції. Логічна мережа матеріального потоку (не фізичного потоку) за формою нагадує букву «V», так як вона вузька внизу (мало сировини) і розширюється до вершини (багато кінцевої продукції). Див.також: виробництво сталі, виробництво видавлювання пластмас і нефтеобработка є прикладами заводу типу «V» Аналогія з ланцюгом Аналогія з ланцюгом (chain analogy) – порівняння організації з ланцюгом, засноване на тому, що, як і в ланцюзі, що складається з пов'язаних один з одним ланок, в організації кінцевий продукт також проходить через послідовність залежних один від одного етапів – «ланок». Як і в ланцюзі, де обмежуючим фактором є слабка ланка, в організації обмежуючим фактором на шляху до досягнення мети також є слабке «ланка», тобто обмеження. Приклад: у виробничій компанії, ланками можуть бути маркетинг, продаж, проектування, закупівлі, виробництво і відправлення. Неможливо здійснити поставку товару, поки не буде закінчено його виробництво. Виробництво не буде здійснене, доки не будуть закуплені необхідні деталі. І т. д. Перспектива: аналогія з ланцюгом досить корисна, оскільки вона наочно показує, що посилення деяких з ланок не зробить ланцюг міцніше – посилювати необхідно слабка ланка. Аналогічним чином, забезпечення поліпшення діяльності організації не буде досягнуто шляхом впровадження покращень «де попало» — акцентувати увагу необхідно на поліпшення роботи обмеження, гальмуючого всю діяльність організації. Активно синхронізоване поповнення Активно синхронізоване поповнення (actively synchronized replenishment (ASR)) – набір керованих попитом методів планування і виконання для управління запасами. Використовується в системах поповнення для стратегічного скорочення часу виконання замовлень та підтримання та/або підвищення якості обслуговування при одночасному скороченні оборотного капіталу. Перспектива: ASR є інтеграцією системи витягаючої дистрибуції і керованої попитом системи планування потреб при розподілених запасах. В протилежність ASR, традиційні системи планування потреб при розподілених запасах прогнозують попит на готову продукцію і виштовхують запаси через систему логістики на основі цих прогнозів. Див.також: приглушений вибух (ефект декаплінгу), кероване попитом планування потреби при розподілених запасах, стратегічне позиціонування запасів. Банан Банан (banana) – розмовний термін, використовуваний для опису логічного «і»-з'єднувача. Застосування: після появи Розумових процесів малювання вручну діаграм було звичайною справою. Логічне «і»-з'єднувач на діаграмах позначається еліпсом. Однак, еліпс, намальований вручну, частіше був схожий на банан. Тому термін «банан» прижився і широко використовується для позначення логічного «і»-з'єднувача. Див.також: еліпс, логічне «і»-з'єднання. Барабан Барабан (drum) – одна з трьох складових управлінське методики «барабан-буфер-канат». Барабан відповідає за рівень випуску продукції з всієї системи і є єдиним ресурсом, робота якого регулюється становиться планом-графіком. Див.також: буфер, канат, барабан-буфер-канат, ресурс-«барабан», план роботи ресурсу-барабана. Барабан-буфер-канат (ББК) Барабан-буфер-канат (ББК) (drum-buffer-rope (DBR)) – метод в рамках ТОС для планування та управління діяльністю. Застосування: у механізмі ББК використовуються наступні елементи:Барабан, що зазвичай є обмеженням або ресурсом з обмеженою потужністю, який обробляє надходить роботу в певному порядку на основі терміновості виконання замовлень і межею потужності цього ресурсу;Буфери часу, які оберігають заявлений час відвантаження від впливу непередбачених обставин; Канат, який є механізмом для регулювання відпуску сировини до ресурсу-обмеження (у відповідності зі швидкістю споживання сировини на цьому ресурсі). Спрощений механізм барабан-буфер-канат використовується для управління виробництвом у випадках, коли обмеження як таке відсутнє, і немає необхідності управляти ресурсом-«барабаном».Обидві системи – ББК і спрощений механізм ББК – використовують керування буфером для безперервного поліпшення виробничих процесів. Див.також: буфер складання, буфер, управління буфером, ресурс з обмеженою потужністю, буфер обмеження, ресурс-«барабан», план роботи ресурсу-барабана, буфер відвантаження, спрощений механізм «барабан-буфер-канат». Блокада Блокада (blockage) — В Теорії обмежень — стан, при якому обмеження змушений простоювати, тому що робочі станції вниз за течією не в змозі прийняти матеріал, оброблений на обмеження, і немає місця для зберігання цього матеріалу. Застосування: блокада, голодування, і поломка обмеження мають особливе значення в Теорії обмежень, так як Прохід втрачається. На противагу цьому, в традиційному виробництві цей термін відноситься і до неограничениям теж. В послідовній лінії з обмеженням у середині процесу, блокада виникає, коли обмеження немає вільного місця для розміщення обробленого матеріалу, і, отже, воно має простоювати, поки не звільниться місце. Три джерела втрати Проходу при використанні підходу Барабан-буфер-канат: голодування, блокада і поломка обмеження. Див.також: поломка, буфер простору, голодування. Буфер Буфер (buffer) – засіб захисту проти невизначеності. Ця захист – агрегована, і може існувати у формі часу, товарних запасів, потужності, простору або грошових коштів. Буфери розміщуються стратегічно, щоб захистити систему від порушення. Перспектива: застосування буферів у логістичних рішеннях ТОС є ключовою відмінністю Теорії обмежень від будь-яких інших управлінських систем. ТОС передбачає, що в системі, де присутні статистичні відхилення і залежні події, буфери необхідні для управління цією системою і фокусування на зусиллях щодо її поліпшення. Див.також: буфер складання, буфер потужності, буфер «барабана», що живить буфер, діра (в буфері), буфер проекту, буфер часу, буфер простору, буфер обмеження, буфер бюджету. Буфер бюджету Буфер бюджету (budget buffer) – частина загального бюджету проекту, відведених для покриття невизначеностей, пов'язаних з витратами за проектом. Застосування: Так само, як страховий запас часу видаляється з часу виконання кожного завдання, страхові витрати повинні бути видалені з усіх витрат на здійснення кожного виду діяльності. Буфер бюджету схожий на буфер проекту, так як сума, закладена на перевищення передбачуваних витрат, перебуває у загальному резерві, щоб захистити бюджет проекту в цілому. Як і буфер часу проекту, буфер бюджету проекту повинен бути істотно менше, ніж сума окремих страхових бюджетів, зарезервованих для кожного виду діяльності. Синонім: буфер витрат. Буфер часу Буфер часу (time buffer) – захист від невизначеностей, виражених у формі часу. Див.також: буфер складання, буфер, барабан-буфер-канат, буфер ресурсу-«барабана», буфер потужності, що живить буфер, буфер проекту, буфер відвантаження. Буфер виконання Буфер виконання (completion buffer) Див.також: буфер проекту Буфер запасів Буфер запасів (buffer stock) – фізична кількість запасів, що зберігається в системі для захисту проходу системи. Перспектива: не слід плутати буфери запасів з такими буферами часу, як буфер обмеження або буфер відвантаження.. Синоніми: буфер виробів. Див.також: буфер, прохід. Буфер витрат Буфер витрат (cost buffer) — синонім буфера бюджету (budget buffer). Див.також: буфер бюджету. Буфер виробів Буфер виробів (piece buffer)Див.також: буфер запасів. Буфер макс Буфер макс (buffer max)Синонім: рівень буфера, цільовий рівень буфера. Див.також: час поповнення. Буфер потужності Буфер потужності (capacity buffer)1. В управлінні проектами в багато-проектної середовищі за методом Критичного ланцюга, буфер часу поміщається в план проекту безпосередньо перед першим використанням ресурсу-барабана, щоб захистити початок проекту проти варіацій (Мерфі) з завдань барабана в вищерозміщених проектах. Застосування : 1. Буфер потужності дозволяє прискорити проект, якщо ресурс-барабан доступний заздалегідь. Буфер потужності використовується тільки в багато-проектних середовищах.2. У виробництві для забезпечення наявності (MTA), додаткові потужності обмежених по потужності ресурсів або інших сильно завантажених ресурсів, які доступні швидко і по розумній ціні (можливо, через субпідряд), щоб реагувати на раптові збільшення загального попиту. Див.також: буфер, управління проектами за методом критичного ланцюга, барабан, ресурс-барабан, виробництво для забезпечення наявності. Буфер простору Буфер простору ( buffer space) – фізична простір, що знаходиться безпосередньо після ресурсу-обмеження, на якому можливо складувати продукцію, оброблену ресурсом-обмеженням, коли на наступних етапах виробничого ланцюга виникла затримка виробництва, яка, за відсутності буфера простору, може змусити ресурс-обмеження зупинити свою роботу. Застосування: буфер простору також може бути використаний перед обмеженням, щоб складувати матеріали для подальшої обробки ресурсом-обмеженням. Ця міра застосовується, щоб уникнути випадків, в яких ресурсу-обмеження буде нічого обробляти. Див.також: обмеження. Буфер проекту Буфер проекту (project buffer) – період часу, розташований в кінці проекту для захисту від варіативності часу, відведеного на виконання завдань в рамках критичного ланцюга. Застосування: буфер проекту формується не простим додаванням до часу кінці існуючої проектної мережі. Все відбувається інакше: подстраховочное час віднімається від часу на виконання кожного з окремих завдань проектної мережі. Половина з віднятого часу стратегічно поміщається в кінці критичного ланцюга згідно проектного плану для того, щоб забезпечити його дотримання. В проектний буфер буде вчинено проникнення (упровадження), якщо завдання в рамках критичного ланцюга зажадають більшого часу, ніж встановлено спочатку, та/або якщо живить буфер був повністю використаний, але все ще необхідний час на виконання певних завдань з відповідної некритической ланцюга.Правило дуже просте: проектний буфер є ½ від тривалості критичного ланцюга.. Синоніми: буфер виконанняДив.також: критична ланцюг, що живить буфер Буфер обмеження Буфер обмеження (constraint buffer) – буфер часу, необхідний для того, щоб планувати запуск матеріалів, «живлять» обмеження. Застосування: якщо існує обмеження у виробництві, то буфер обмеження і буфер відвантаження використовуються для захисту виходу продукції з системи. Якщо обмеженням є ринок, то немає необхідності у створенні буфера обмеження, потрібен лише буфер відвантаження. Буфер обмеження не використовується в спрощеному механізмі «Барабан-буфер-канат». Буфер обмеження використовується для того, щоб максимально зменшити ймовірність виникнення варіативності в системі, за якої обмеження може «голодувати» (що неприпустимо для задоволення попиту клієнтів), водночас не створюючи надмірно високих запасів незавершеного виробництва. Перспектива: методика створення буфера для обмеження є найважливішою відмінністю ТОС від інших систем управління виробництвом. Це відмінність важливо, тому що якщо у виробництві є обмеження, цей буфер дозволяє системі більш ефективно використовувати таке обмеження, таким чином, збільшуючи показник проходу. Буфер ресурсу-«барабана» Буфер ресурсу-«барабана» (drum feeding buffer) – запас часу в рамках проектного плану, поміщений безпосередньо перед першим використанням ресурсу-«барабана» для конкретного проекту в многопроектной структурі з критичної ланцюгом. Мета її використання – забезпечити своєчасний початок проекту навіть при впливі непередбачених обставин і відхилень (так званого Мерфі) на ресурс-«барабан». Також, цей буфер забезпечує прискорення проекту, якщо ресурс-«барабан» буде доступний досить рано.Застосування: буфер ресурсу-«барабана» існує тільки у многопроектных структурах.Див.також: буфер, управління проектами за методом критичного ланцюга, ресурс-барабан Буфер відвантаження Буфер відвантаження (shipping buffer) – один з періодів часу, використовуваних у механізмі Барабан-буфер-канат для того, щоб забезпечити відвантаження готової продукції в строк. В рамках механізму барабан-буфер-канат, буфер відвантаження використовується розробки плану робота ресурсу-обмеження і графіка відпустки сировини, не проходить через ресурс-обмеження або буфери складання. В спрощеному механізмі Барабан-буфер-канат, буфер відвантаження є єдиним використовуваним буфером. Застосування: управління буфером використовується для визначення виникнення дірок в буфері відвантаження та причин виникнення, що здійснюється в рамках процесу безперервного поліпшення. Див.також: буфер, барабан-буфер-канат, процес безперервного поліпшення, спрощений механізм Барабан-буфер-канат. Буфер збирання Буфер збирання (assembly buffer) – період часу на підстраховку, використовуваний у процесі діяльності організації для забезпечення того, щоб деталі, які не проходять через ресурс-обмеження (але беруть участь у складанні разом з деталями, що проходять через обмеження), відпускалися в складальний цех досить рано. Це дозволить забезпечити безперервність потоку деталей, що проходять через обмеження, коли вони надходять в складальний цех. Застосування: буфер складання використовується не так часто, як буфер обмеження і буфер відвантаження. Якщо існує варіабельність, що негативно впливає на не проходять через обмеження деталі, на ресурс з обмеженою потужністю (CCR) або на ресурс-«барабан», то необхідно використовувати буфер складання. Цей тип буфера не використовується в Спрощеному механізмі «Барабан-буфер-канат» (S-DBR). Див.також: буфер, буфер обмеження, Спрощений механізм Барабан-буфер-канат, буфер відвантаження, буфер часу. Буфер сировини Буфер сировини (raw material buffer) – запас сировини, який забезпечує можливість продовження виробничого процесу. Застосування: в деяких випадках одержання сировини є занадто довгим, щоб забезпечити своєчасну реакцію на ринковий попит. В таких випадках, можна підтримувати буфер сировини на заводі/поряд з ним, який забезпечить наявність ключових матеріалів або матеріалів, час поставки яких зазвичай занадто довгий. Див.також: буфер, буфер запасів. Буферизація Буферизація (buffering) – процес розміщення запасу («подушки») між двома залежними сутностями, щоб усунути статистичні флуктуації при проходженні між ними або зменшити термін виконання, коли вони розглядаються як один безперервний потік або шлях. Запасом може бути час, запаси, грошові кошти, потужності і т. д. Перспектива: В Lean буферизація у вигляді канбана розміщується між кожною парою послідовних робочих станцій, щоб пом'якшити вплив на потік статистичних флуктуацій. На противагу цьому, в TOC місця розміщення буферів визначаються стратегічно. Див.також: буфер макс. Швидкі деталі Швидкі деталі або гепарди (cheetah items) – деталі, які продаються дуже швидко в порівнянні з їх рівнем запасів, що призводить до відносно швидкої оборотності запасів. Застосування: Завдяки взаємозв'язку між мінливістю і рівнями запасів, швидкі деталі мають відносно високий попит, пов'язаний з мінливістю попиту. Взаємодіючі обмеження Взаємодіючі обмеження (interactive constraints) – два або більше дефіцитних ресурси, які взаємодіють між собою таким чином, що випуск продукції системою є непередбачуваним (хаотичним) та/або важко піддається управлінню. Застосування: при існуванні взаємодіючих обмежень, розрахунок показника проходу на одиницю обмеження не є коректним способом для визначення найбільш прибуткового асортименту продукції.Передумови: складність системи визначається не кількістю обмежень, а кількістю взаємодіючих обмежень, що, в свою чергу, безпосередньо пов'язане з тим, наскільки важким є управління діяльністю системи і прогнозування підсумкового обсягу продукції. Див.також: обмеження, прохід на одиницю обмеження Ін'єкція (injection): Стан або умова, яке пропонується в якості способу створення бажаного явища через ланцюг логічних об'єктів, пов'язаних причинно-наслідковим зв'язком, в дереві поточної реальності. Стан або умова, яке вказує на наявність однієї або більше посилок, що лежать в основі взаємозв'язків між завданнями і умовами, або між умовами і передумовами, або між двома передумовами грозової хмари. Стан або умова, яке пропонується для подолання (або «спилювання») негативної гілки. Застосування: найчастіше ін'єкція є стан або умова існування системи, незважаючи на те, що вона може також позначати дію. Ін'єкція відображається як прямокутник з незакруглені кутами в дереві майбутньої реальності. Ін'єкція може являти собою «ін'єкцію-прорив», видатну ідею, яка може дозволити кореневої конфлікт в грозовий хмарі. Для словесного опису або оцінки ін'єкції, немає необхідності доводити, що в даний момент можливо досягти зазначеного стану - таким чином, ін'єкція може являти собою ін'єкцію типу «літаюча свиня». Дивись: ін'єкція-прорив, ін'єкція типу «літаюча свиня», бажані явища, логічний об'єкт, дерево майбутньої реальності, грозова хмара, негативна гілка, небажані явища, «спилювальна» ін'єкція. Питання послідовності змін Питання послідовності змін (change question sequence) Синонім: послідовність змін. Уважне вивчення Уважне вивчення (scrutiny) – процес проведення детальної перевірки логічного дерева (діаграми) розумових процесів з використанням категорій перевірки логічних побудов в якості основи для того, щоб ставити питання щодо діаграма структури і змісту логічних об'єктів/груп логічних об'єктів. Див.також: категорії перевірки логічних побудов, логічний об'єкт, логічне дерево, розумові процеси (scrutiny) – процес проведення детальної перевірки логічного дерева (діаграми) розумових процесів з використанням категорій перевірки логічних побудов в якості основи для того, щоб ставити питання щодо діаграма структури і змісту логічних об'єктів/груп логічних об'єктів.Див.також: категорії перевірки логічних побудов, логічний об'єкт, логічне дерево, розумові процеси Тимчасове пляшкове горло Тимчасове пляшкове горло (temporary bottleneck) – ситуація, створена, коли попит на роботу певного ресурсу протягом короткого періоду часу перевершує його потужність. Див.також: пляшкове горло Час підготовки постачання Час підготовки постачання (supply lead time) – проміжок часу між отриманням замовлення та розміщенням готового для продажу продукту на полиці. Час підготовки поставки, складова часу поповнення, має два компоненти: час виконання замовлення на виробництві та час транспортної доставки. Див.також: час виконання замовлення на виробництві, час поповнення, час транспортної доставки. Час виконання замовлення на виробництві Час виконання замовлення на виробництві (production lead time) – загальний час з моменту отримання замовлення до того моменту, як замовлення буде готове до відправки. Опис: час виконання замовлення на виробництві має 3 складові: час обробки замовлення, час пролежування оброблюваних деталей (сума часу, протягом якого замовлення чекає обробки) і загальний час обробки всіх ресурсів. Час виконання замовлення на виробництві Час виконання замовлення на виробництві (production lead time) – загальний час з моменту отримання замовлення до того моменту, як замовлення буде готовий до відправки. Опис: час виконання замовлення на виробництві має 3 складові: час обробки замовлення, час пролежування оброблюваних деталей (сума часу, протягом якого замовлення чекає обробки) і загальний час обробки всіх ресурсів. Час поповнення Час поповнення (replenishment time) – час на заміщення проданого продукту новим продуктом для продажу/використання. Опис: час поповнення є сумою трьох часових компонентів: формування замовлення, часу виконання замовлення на виробництві та часу транспортної доставки. Див.також: час формування замовлення, час транспортної доставки, час виконання замовлення на виробництві, буфер запасів, час підготовки поставки. Час терпіння покупця Час терпіння покупця (tolerance time) – період часу з моменту розміщення замовлення, протягом якого покупець готовий чекати отримання готового продукту. Застосування: У багатьох випадку, час терпимості покупця менше, ніж час поповнення. У такій ситуації, завжди необхідно мати буфер запасів, щоб операція не зірвалася. Див.також: час поповнення, буфер запасів. Час транспортної доставки Час транспортної доставки (transportation lead time) – час на транспортування замовлень від точки поставки до наступної ланки ланцюга поставок. Час транспортної доставки є однією з складових часу поповнення, куди входять також час формування замовлення і час обробки замовлення на виробництві. Див.також: час формування замовлення, час обробки замовлення на виробництві, час поповнення, час підготовки поставки. Час формування замовлення Час формування замовлення (order lead time) – період часу між продажем продукту і початком розробки нового замовлення, якій заміщує собою проданий продукт. Застосування: час формування замовлення, час виконання замовлення на виробництві та час транспортної доставки – це три складові часу поповнення. Див.також: час виконання замовлення на виробництві, час поповнення, час транспортної доставки, час підготовки поставки. Вторинна ін'єкція Вторинна ін'єкція (secondary injection). Синоніми: «спилююча ін'єкція». Див.також: ін'єкція, спилююча ін'єкція. Вирівнювання відповідальності і повноважень Вирівнювання відповідальності і повноважень (alignment of responsibility and authority) – це добре відомий принцип організаційної поведінки є первісною ін'єкцією в Грозову хмару (хмару конфлікту) для конфлікту підпорядкування (невідповідності між повноваженнями і відповідальністю) при управлінні поведінкою людей. Опис: Припустимо, що існує компанія, у якої в минулому виникали проблеми такого характеру: з клієнтом розмовляла занадто багато представників персоналу компанії. Потім була встановлена нова політика, в рамках якої з клієнтом міг безпосередньо спілкуватися тільки персональний менеджер. Однак сталося так, що в потрібний момент визначеного персонального менеджера не виявилося на місці, коли менеджер по відвантаженню товарів хотів отримати від нього важливу інформацію про замовлення, що вимагає негайної відправки, щоб той не був прострочений. Цей менеджер по відвантаженню («підлеглий») був відповідальним за своєчасну поставку замовлення, але у нього не було відповідних повноважень для спілкування з клієнтом з метою отримання необхідної інформації для виконання покладених на нього зобов'язань. Як показано на знімку нижче хмарі, в даному випадку ін'єкцією для усунення цього конфлікту є надання підлеглому необхідних повноважень для спілкування з клієнтом, коли це безпосередньо позначається на його прямі обов'язки – відправлення замовлення вчасно. Див.також: вихідна посилка, грозова хмара, ін'єкція, хмара підпорядкування. Глобальні показники Глобальні показники (global measurements) – ті показники, які використовуються для оцінки стану системи в цілому. Застосування: згідно парадигмі обліку проходу в рамках ТОС, такими показниками є прохід (П), інвестиції (І) (раніше місце показника «інвестиції» займав показник «запаси») та операційні витрати (ОЗ) Див.також: запаси, інвестиції, операційні витрати, прохід, парадигма обліку проходу Грозова хмара Грозова хмара (ГТ) ( evaporating cloud (EC)) – діаграма логічної необхідності або, вірніше, діаграма на основі логіки потреби, яка описує і допомагає вирішувати конфлікти на взаємовигідних безпрограшних умовах. Вона використовується за двома основними напрямками: по-перше, як спосіб структурованого опису та розв'язання конфлікту, і, по-друге, як складова частина методики трьох хмар, використовувана для створення хмари кореневого конфлікту, який потім використовується в якості бази для дерева поточної реальності. Застосування: спочатку розробляється короткий опис конфліктної ситуації. Далі, будується діаграма з п'ятьма логічними об'єктами, в якій відображається сутність конфлікту. Цими об'єктами є: одна мета, необхідна умова і передумова для однієї сторони конфлікту, а також необхідна умова і передумова для іншої сторони конфлікту. П'ять стрілок являють собою зв'язки між сусідніми логічними об'єктами і можуть бути описані словесно з використанням логічної достатності.Для вирішення конфлікту, ідентифікуються вихідні посили, які лежать в основі взаємозв'язків у рамках грозової хмари. . Синоніми: хмара конфлікту, діаграма вирішення конфлікту Див.також: логічний об'єкт, діаграма логічної достатності, розумові процеси, методика трьох хмар. Декаплінг специфікації матеріалів Декаплінг специфікації матеріалів (bill of material decoupling) – процес вставки буферів запасів в стратегічних точках у сукупній специфікації матеріалів для компонентів, які мають ринковий потенціал для скорочення терміну поставки приймаючих виробів (в які входять ці компоненти). Застосування: Декаплінг використовується тільки для планування матеріалів – специфікація матеріалів раніше описує, з чого складаються продукти. Гроше-дні запасів (ДДЗ) Деньго-дні запасів (ДДЗ) (inventory value-days (IVD)) – термін, що використовується замість показника «долар-дні запасів». Використовується в країнах, де долар не є базовою валютою. Див.також: долар-дні запасів Гроше-дні проходу (ДДП) Гроше-дні проходу (ДДП) (throughput value days (TVD)) – термін, що використовується замість показника «долар-дні проходу». Використовується в країнах, де долар не є базовою валютою. Див.також: долар-дні проходу Дерево амбітної мети Дерево амбітної мети (ambitious target tree) – логічна діаграма на основі логіки потреби, яка полегшує побудову стратегічних і тактичних планів для досягнення амбітної мети шляхом аналізу перешкод і розробки проміжних цілей.. Використання: на логіку дерева амбітної мети не поширюються застереження логіки достатності. Дерево в загальному повинно бути піддано застереженні повноти, спочатку перевіряємо, чи дерево все необхідне для досягнення амбітної мети.Дерево амбітної мети схоже на Дерево передумов і зазвичай використовується у вирішенні Теорії обмежень для освіти (TOCfE) у навчанні дітей і при плануванні проектів шкільною адміністрацією.** Див.також: амбітна мета, карта проміжних цілей, Дерево передумов. Дерево майбутньої реальності (ДМР) Дерево майбутньої реальності (ДМР) – future reality tree (FRT) – діаграма логічної достатності, полегшує відповідь на друге питання в послідовності змін: на що міняти?. Дерево майбутньої реальності являє собою послідовність причинно-наслідкових взаємозв'язків, що з'єднують ін'єкцію (ін'єкції) з бажаними явищами. Застосування: первинна мета застосування дерева майбутньої реальність – логічно показати, що обрана ін'єкція (а також вторинні або допоміжні ін'єкції) та асоційовані з нею слідства дійсно зможуть змусити зникнути більшість небажаних явищ. Дерево майбутньої реальності містить у собі безліч залежностей між логічними об'єктами, які є результатом передбачуваного застосування набору ін'єкцій, спрямованих на перетворення існуючих небажаних явищ в бажані і, можливо, на створення яких-небудь нових бажаних явищ.Дерево майбутньої реальності складається перед тим, як вносити зміни в систему. Цілі створення дерева майбутньої реальності наступні: (1) логічно продемонструвати, що пропоновані ін'єкції будуть ефективним і підходящим рішенням, і (2) вберегтися від можливого виникнення нових проблем/небажаних явищ, які можуть виникнути в результаті застосування запропонованих ін'єкцій. Друга з перелічених цілей досягається шляхом застосування негативної гілки. Див.також: послідовність змін, бажані явища, логічний об'єкт, негативна гілку, логічна достатність, небажані явища. Дерево переходу (ДП) Дерево переходу (ДП) (transition tree (TT)) – діаграма логічної необхідності, яка дає відповідь на третє питання послідовності змін – як забезпечити зміни? Дерево переходу використовується для складання докладного плану впровадження: якими будуть дії, навіщо вони потрібні і чому повинен бути досягнутий очікуваний результат. Крім того, воно потрібно, щоб донести інформацію до людей і заручитися їх підтримкою, що необхідно для впровадження.Дерево майбутньої реальності розглядається як стратегічний інструмент, в якому можуть бути викладені основні зміни. Їх впровадження, проте, потребує комплексних втручань, для яких необхідна велика деталізація дій, що і пропонує Дерево переходу. Дерево переходу можна вважати оперативним або тактичним інструментом. Див.також: амбітна мета, бажане явище, ін'єкція, проміжна мета, логічна необхідність, план проміжних цілей, розумові процеси. Дерево передумов (ДПР) Дерево передумов (ДПР) (prerequisite tree (PRT)) – діаграма логічної необхідності, яка полегшує відповідь на третє питання послідовності змін – як забезпечити зміни? Дерево передумов показує зв'язок між ін'єкціями, проміжними цілями (або амбітною метою) і перешкодами, що утрудняють застосування ін'єкцій. Дерево передумов включає в себе проміжні цілі, які необхідні для того, щоб подолати перешкоди, а також показує послідовність, в якій вони повинні бути досягнуті для істотного застосування ін'єкції. Застосування: дерево передумов та/або план проміжних цілей (який розробляється на основі дерева передумов) використовується для планування послідовності заходів, які необхідно вжити для досягнення амбітної мети. Див.також: амбітна мета, бажане явище, ін'єкція, проміжна мета, логічна необхідність, план проміжних цілей, розумові процеси. Дерево поточної реальності (ДТР) Дерево поточної реальності (ДТР) (current reality tree (CRT)) – логічна діаграма достатності, яка допомагає відповісти на перше питання з послідовності змін – що змінювати? Дерево поточної реальності – діаграма, де наочно показано причинно-наслідкові взаємозв'язки, що існують між кореневою (ключовий) проблемою і більшістю небажаних явищ (або усіма небажаними явищами). Застосування: зрозумівши, чому існують небажані явища, команда, що здійснює перетворення, повинна розробити набір втручань (ін'єкцій) для усунення кореневого конфлікту і, таким чином, більшість небажаних явищ.У дереві поточної реальності використовується логіку «Якщо ..., то ...», яка допомагає уявити ланцюг взаємозв'язків від кореневої проблеми (кореневого конфлікту) до небажаних явищ. Дерево поточної реальності представлено у вигляді ланцюга логічних об'єктів, які являють собою діючі в системі регламенти діяльності, які сприяють виникненню небажаного поведінки. Дерево поточної реальності часто використовується, коли: 1) не ясно, як застосувати один або декілька з п'яти направляючих кроків, або 2) команда, що здійснює перетворення системи, відчуває труднощі у встановленні загальної згоди щодо передбачуваних змін. Див.також: отримання загальної згоди, послідовність змін, кореневої конфлікт, коренева (ключова) проблема, ін'єкція, логічна достатність, розумові процеси, небажані явища, що змінювати? Дерева стратегії і тактики Дерева стратегії і тактики (strategy and tactic tree (S&T)) – логічна діаграма, що включає в себе всі логічні об'єкти і зв'язки між ними, які необхідні та достатні для досягнення мети організації. Мета побудови дерев стратегії і тактики – виявити і усунути конфлікти, що виникають через порушення співвідношення між діяльністю організації та її цілями. Застосування: стратегія організації визначає довгостроковий напрямок, в якому організація повинна здійснювати свою діяльність. Тактика передбачає певні дії щодо досягнення певної стратегічної мети в рамках організаційної стратегії. З причини того, що стратегія і тактика існують паралельно і повинні бути синхронізовані між різними організаційними рівнями, дане логічне дерево переносить стратегію, розроблену на вищому Див.також: логічний об'єкт, логічна діаграма. Деталі з низьким ROI Деталі з низьким ROI (чорна діра) (black hole return on investment items) — У виробництві для забезпечення наявності (MTA) деталі, які мають дуже низький або навіть негативний ROI (розраховується як річний Прохід (T) для даної деталі, поділений на інвестиції сировини в буфері для деталі). Див.також: деталі з високою ROI (зірки). Довга стрілка Довга стрілка (long arrow) – термін, використовуваний при уважному вивченні логічної діаграми з метою визначення пробілу в логіці, який залишає неясним, як пов'язані причина і наслідок.Ілюстрація: дивлячись на два логічних даних об'єкта, що вивчає логічну діаграму особа може заявити: «Я не бачу, як успішне застосування механізму барабан-буфер-канат може бути причиною того, що організація кине використання ТОС. Для мене це – довга стрілка». . Синоніми: трансатлантична стрілка Див.також: уважне вивчення Деревоподібна діаграма Деревоподібна діаграма (tree diagram)Синоніми: логічне дерево.Див.також: дерево поточної реальності, дерево майбутньої реальності, логічне дерево, дерево переходу, план перетворень. Доларо-дні запасів (ДДЗ) Доларо-дні запасів (ДДЗ) ( inventory dollar days (IDD)) – показник, за допомогою якого вимірюється ефективність ланцюга поставок. Він вимірює, чи були зроблені ті речі (які не потрібно було робити), які у результаті привели до скупчення запасів продукції в тих обсяг��в, які не потрібні кінцевому споживачеві. Система повинна прагнути до мінімізації величини цього показника аж до впевненого підтримання його нульового значення. Застосування: цей показник враховує час, з якого запаси вперше надходять на склад, до того, поки у споживача не виникне у них реальна потреба, а також враховує їх грошову вартість. Даний показник розраховується шляхом множення кожної одиниці запасів з кількістю днів, які минули з дня надходження даних запасів у конкретний ланка ланцюга поставок. Так і виходять «доллародні». Цей показник не бере за основу ні грошову вартість, ні тривалість у часі. Спроби порівняти доларо-дні з іншими грошовими показники не будуть коректними. Показники «доларо-дні запасів» можна порівнювати лише один з одним. Приклад: розрахуємо показник «долар-дні запасів» для деталі #A243, у якої значення проходу становить $33. На складі 114 такі деталі. З цих 144 деталей 50 надійшли на склад всього лише 2 дні тому, інші 50 лежать там уже 22 дні, що залишилися 44 деталі – 42 дні. Відповідно, в даний момент показник «долар-дні запасів» для деталі Part #A243 становить 100,584. ((50x33x2) + (50x33x22) + (44x33x42)).. Синоніми: гроше-дні запасів. Див.також: доларо-дні проходу. Доларо-дні проходу (ДДП) Доларо-дні проходу (ДДП) (throughput dollar days (TDD)) – показник надійності ланцюга поставок, що характеризує, чи зміг ланцюг поставити весь обсяг продукції, про який було заявлено. Система повинна прагнути до нульового значення цього показника. Застосування: цей показник враховує грошову вартість товарів, які ланка ланцюга повина була поставити, але не поставила, а також кількість днів, на які ланка прострочила свої зобов'язання. Показник «доларо-дні проходу» є сумою непоставлених вчасно зобов'язань за вибраний період часу. Значення даного показника для окремих непоставлених вчасно одиниць розраховується шляхом перемноження доларової (грошової) вартості кінцевого продукту на час прострочення його постачання. Одиниця виміру – «долар-дні» – не бере за основу ні грошову вартість, ні тривалість у часі. Спроби порівняти долар-дні з іншими грошовими показники не будуть коректними. Показники «долар-дні проходу» можна порівнювати лише один з одним. Приклад: припустимо, у січні певний постачальник спізнився з постачанням двох замовлень. Перше замовлення – 10 одиниць деталі #1234, на кожну припадає $45 проходу – був прострочений на 2 дні. Другий замовлення – 5 одиниць деталі #562, на кожну припадає $70 проходу – була прострочена на 8 днів. Для даного постачальника показник «долар-дні проходу» в січні буде дорівнювати 3700. ((10x45x2) + (5x70x8)). Див.також: долар-дні запасів. Дірка в буфері Дірка в буфері (буфер hole) – у виробництві на замовлення, Барабан-буфер-канат і Спрощений Барабан-буфер-канат – позначення, яке вказує, що виробниче замовлення для даної деталі, яке повинно бути оброблене на обмеження або відвантажене, фізично відсутне на місці обмеження або в місці відвантаження відповідно. Тому замовлення запізнюється або до обмеження або до місця поставки. Застосування: Замовлення, які створюють діру в буфері в зеленій області, можуть почекати і не є причиною для занепокоєння. Замовлення, які створюють діру в буфері в жовтій області, ще можуть почекати, але менеджер, керуючий буфером, повинен знайти це замовлення і попередити наступні робочі станції про проходження цього замовлення. Замовлення, які створюють діру в червоній області, повинні бути экспедированы (прискорені) на всьому своєму шляху для виконання в строк. Спізнюються замовлення перебувають у чорній області і є проблемою. Деякі компанії присвоюють їм низький пріоритет, так як замовлення все одно вже спізнилось, в той час як інші компанії розглядають їх як першочергове завдання, щоб звести їх запізнення до мінімуму. Приклад: Діра в буфері часу для робочого замовлення показано на малюнку нижче: Синонім: hole in the buffer. Бажання (бажане умова) (want) Бажання (бажане умова) (want) – явище, існування якого вважається необхідним для задоволення потреби. Застосування: бажання (бажане умова) існує за наявності певного набору вихідних посилок, які можуть бути/не бути відомими або мають силу. По відношенню до грозової хмари, існування передумови для задоволення умови є аналогом існування бажання (бажаної умови) для задоволення потреби. Бажання формулюються у вигляді логічних об'єктів D і D' в грозовій хмарі. Див.також: вихідна посилка, логічний об'єкт, грозова хмара. Бажане явище (БЯ) Бажане явище (БЯ) (desirable effect (DE)) – позитивний результат діяльності організації (поточне/майбутне). Бажані явища – протилежність небажаним явищам. Застосування: з'являючись у дереві майбутньої реальності, бажані явища можуть бути (1) прямими антиподами відповідних небажаних явищ, або (2) умовами, які означають, що небажані явища з поточної реальності не існують.Приклад 1: Для небажаного явища «Прохід зменшується», протилежних бажаним явищем буде «Прохід збільшується».Приклад 2: Для небажаного явища «Час виконання замовлення занадто довгий», протилежних бажаним явищем буде «Час виконання замовлення менше, ніж у конкурентів». Див.також: дерево поточної реальності, дерево майбутньої реальності, операційні витрати, прохід, небажане явище. Жовта зона (буфера) Жовта зона (буфера) (yellow zone of the buffer)) – термін управління буфером для регіону II в буфері. Звичайно, деталі повинні чинити (або завдання повинно бути виконано) на певному етапі жовтої зони.Жовтий колір – колір застереження – використовується для цієї зони, щоб кожна виникає в ній діра перевірялося на предмет того, чи перейде вона на червону зону буфера (щоб, у такому випадку, планувалися необхідні коригуючі дії). Синонім: регіон II. Див.також: буфер, управління буфером, зелена зона, діра, червона зона. Життєвий факт (ЖФ) Життєвий факт (ЖФ) (fact of life (FOL)) – логічний об'єкт, поміщений в логічну діаграму достатності для посилення логічної обґрунтованості або внесення ясності/підтвердження достовірності стосовно змісту розглянутого логічного об'єкта. Застосування: звичайно, життєвий факт є задокументованим виразом, переважає в команді проектувальників діаграми розуміння розглянутого питання. Пов'язуючи логічний об'єкт з одним або двома спорідненими логічними об'єктами з допомогою логічного «і»-з'єднувача укладач діаграми тим самим зміцнює обґрунтованість логічного взаємозв'язку. Залежні події Залежні події (dependent events) – серія подій, в якій кожна з них вимагає, щоб попереднє подія було повністю завершено. Застосування: ТОС припускає, що системи, де є статистичні відхилення і залежні події (операції), найкращим чином управляються за допомогою механізмів барабан-буфер канат і управління проектами за методом критичного ланцюга. Приклад: звичайний ресторан є наочним прикладом ланцюга залежних подій: клієнт не заплатить за їжу до тих пір, поки не з'їсть її, проте він не зможе її з'їсти до тих пір, поки вона не буде подано до столу. Їжа не буде подана, поки не зроблено замовлення; замовлення не буде зроблено, поки клієнт не сів за стіл. Кожна подія в такій системі залежить від попереднього.Див.також: управління проектами за методом критичного ланцюга, барабан-буфер-канат, статистичні відхилення і залежні події. Завод типу «А» (A-plant) Завод типу «А» (A-plant) – виробниче середовище, яка починається з досить високих обсягів сировини, що проходять через послідовність пов'язаних операцій, у яких створюються складальні вузли, складальні агрегати і, нарешті, досить маленька кількість кінцевих виробів.Буква «А» символізує собою логічний ланцюг матеріального потоку, який насправді не співвідноситься з фактичним плануванням заводу, т. як. він широкий внизу (багато сировини) і вузький наприкінці (мало кінцевих продуктів). Приклад: виробництво вертольотів, кухонних гарнітурів, взуття. Див.також: аналіз VATI, точка сходження. Запаси (inventory) Запаси (inventory) – ця категорія раніше використовувалася як один з основних показників діяльності організації в рамках ТОС. Згодом вона була замінена на інвестиції. Див.також: інвестиції. Зелена зона (буфер) Зелена зона (буфер) (green zone (of the buffer)) - термін з області управління буфера, що позначає регіон І, найменш критичний регіон буфера. Зелений колір, що позначає свободу для подальшого просування / продовження роботи, наявність дірок не є продлемим в цьому регіоні, тому що НЕ передбачається надходження деталей або завершення етапу роботи. При проведенні моніторингу зеленої зони можна виявити, що деякі етапи роботи завершені раніше терміну, що говорить про те, що загальний розмір буфера може бути зменшений, або про те, що «канат» працює не належним чином. Застосування: логістичний інструментарій в рамках ТОС для виробництва, управління проектами і дистрибуції, використовує буфер для підстраховки ресурсу-обмеження і покупця від впливу варіативності. Ці буфери поділяються на три зони (звичайну, зелену, жовту і червону). Ці зони допомагають встановлювати пріоритети при реагуванні на варіативність.. Синоніми: регіон ІДивись: буфер, управління буфером, діра, червона зона, жовта зона. Зони буфер Зони буфер (buffer regions) Синонім: область буфера. Див.також: буфер, управління буфером. Витягнути Витягнути (capitalize) - другий великий сегмент дерева Стратегії і тактики (S&T) : зрозуміти, як використати (продавати) вирішальну конкурентну перевагу, витягнути з неї усі вигоди. Див.також: побудувати, витягнути і підтримувати, побудувати, Дерево стратегії і тактики, підтримувати. Інвестиції Інвестиції (І) (investment (I)) - усі грошові кошти, в даний момент пов'язані в системі. ТОС припускає, що до інвестицій відносяться устаткування, будівлі, нерухомість, системи, що знаходяться у власності, а також усі запаси (сировина, незавершене виробництво, готова продукція) В даному контексті під інвестиціями розуміються грошові кошти, які система вкладає, купуючи що-небудь зараз з наміром продати в майбутньому. У ранніх роботах по теорії обмежень термін I означав і матеріально-виробничі запаси (inventory), і інвестиції, вважаючи ці поняття взаємозамінними. В даний час кращим вважається термін \"інвестиції\". Однак, судячи з того, що дане поняття включає не тільки запаси в загальноприйнятому сенсі, а й будівлі, землю, транспортні засоби, обладнання, воно набагато ширше, ніж просто матеріальнопроізводственние запаси або просто інвестиції. Відповідно до Федерального закону від 25 лютого 1999 № 39-ΦЗ \"Про інвестиційну діяльність в Російській Федерації, здійснюваної у вигляді капітальних вкладень\" інвестиції - це грошові кошти, цінні папери, інше майно, в тому числі майнові права, інші права, мають грошову оцінку, що вкладаються в об'єкти підприємницької та (або) іншої діяльності з метою отримання прибутку і (або) досягнення іншого корисного ефекту. У вітчизняній обліковій практиці інвестиції більше асоціюються з вкладеннями у необоротні активи, в той час як матеріально-виробничі запаси входять до складу оборотних активів. Тому термін \"інвестиції\" в обліку пропускної здатності, швидше, означає вкладення в усі майно підприємства. Проте було б некоректно розглядати інвестиції як майно в традиційному розумінні. По-перше, в обліку пропускної здатності таке майно оцінюється тільки за прямими матеріальними витратами. Це робиться для того, щоб виключити утворення уявної прибутку в короткостроковому періоді за рахунок зростання незавершеного виробництва та запасів готової продукції. По-друге, запаси згідно з обліком пропускної здатності не є активами, швидше, це зобов'язання. Компанії з надмірними запасами обтяжені зобов'язаннями, які асоціюються з наступними проблемами: оплата місця зберігання, старіння, необхідність переробки тощо. Інструмент дистрибуції/поповнення Інструмент дистрибуції/поповнення (distribution/replenishment solution) - метод витягаючої дистрибуції, який включає впровадження буферів запасів певного розміру з подальшим моніторингом і поповненням запасів на основі об'ємів фактичного (а не прогнозованого) споживання кінцевим споживачем. Кожна ланка з ланцюга постачань розраховує на максимальний попит і середній час поповнення запасів, беручи в облік вірогідність відхилення в часі поповнення. Кожна ланка ланцюга поставо Ін'єкція (injection) Ін'єкція (injection)1. Стан або умова, яке пропонується в якості способу створення бажаного явища через ланцюг логічних об'єктів, пов'язаних причинно-наслідковим зв'язком, в дереві поточної реальності.2. Стан або умова, яке вказує на наявність однієї або більше посилок, що лежать в основі взаємозв'язків між завданнями і умовами, або між умовами і передумовами, або між двома передумовами грозової хмари.3. Стан або умова, яке пропонується для подолання (або «спилювання») негативної гілки. Застосування: найчастіше ін'єкція є стан або умова існування системи, незважаючи на те, що вона може також позначати дію. Ін'єкція відображається як прямокутник з незакруглені кутами в дереві майбутньої реальності. Ін'єкція може являти собою «ін'єкцію-прорив», видатну ідею, яка може дозволити кореневої конфлікт в грозовий хмарі. Для словесного опису або оцінки ін'єкції, немає необхідності доводити, що в даний момент можливо досягти зазначеного стану - таким чином, ін'єкція може являти собою ін'єкцію типу «літаюча свиня».**Дивись: ін'єкція-прорив, ін'єкція типу «літаюча свиня», бажані явища, логічний об'єкт, дерево майбутньої реальності, грозова хмара, негативна гілка, небажані явища, «спилювати» ін'єкція. Ін'єкція-прорив (breakthrough injection) Ін'єкція-прорив (breakthrough injection) - особливий стан або умову, розроблене для надання істотного впливу на вирішення конфлікту. Цей тип ін'єкції зазвичай є дуже креативним, безпрограшним, незвичайним рішенням для вирішення хронічних конфліктів. Застосування: зазвичай, організації не мають досвід застосування такого роду рішень. Створення ін'єкції-прориву набагато складніше, ніж пошук компромісного рішення або впровадження незначних перетворень для вирішення конфлікту. Часто ін'єкція-прорив спрямована на проникнення за межі конфлікту, щоб усунути глибші причини його виникнення. Більшість виправдали себе засобів ТОС, таких як Барабан-буфер-канат, Управління буфером, Критична ланцюг і «витягаюча» дистрибуція вважаються ін'єкціями-проривами. Ілюстрація: Рішення компанії Pressure Steam продавати послуги комплексного технічного обслуговування і ремонту своїм клієнтам є ін'єкцією-проривом, яка змогла знищити грозову хмару, що містить в собі конфлікт - необхідність одночасного зниження і підвищення цін (Джерело: Е.М. Голдратт, «Справа не в везіння », 1994). Див. також: хронічний конфлікт, ін'єкція, коренева хмара, первинна ін'єкція. Ін'єкція типу «літаюча свиня» (flying pig injection) Ін'єкція типу «літаюча свиня» (flying pig injection) - ін'єкція-прорив, яка спочатку здається неможливою для здійснення. Перспектива: ін'єкція типу «літаюча свиня» названа так, тому що її впровадження здається досить складним (ймовірність успіху прагне до нуля, як і у літаючої свині). Ілюстрація: взяття в кредит $ 100 млн. Для фінансування розвитку нового, непатентоспроможним продукту недавнім випускником інженерного університету у віці 25 років буде вважатися більшістю ін'єкцією типу «літаюча свиня». Див.також: ін'єкція-прорив, ін'єкція. Ін'єкція центрального складу (central warehouse injection) Ін'єкція центрального складу (central warehouse injection) - первинна ін'єкція в рішенні для дистрибуції / поповнення. Центральний (або заводський) склад потрібно, щоб відокремити випадкові коливання від зміни попиту і пропозиції, і, таким чином, забезпечити безперебійний потік товарів клієнтам і зменшити перебої з боку постачальника. Див. також: ін'єкція. «І» -поєднувач ( 'and' connector) «І» -поєднувач ( 'and' connector) - використовується для опису типу зв'язку між наслідком (ефектом) і його причинами. Існують два типи зв'язку: масштабний «і» -поєднувач, де причини є незалежними, і обидві (або всі) причини повинні бути усунені для усунення слідства. Логічний «і» -поєднувач, де дві (або більше) причини є залежними - повинні існувати одночасно, щоб могло існувати слідство. Для усунення слідства потрібно усунути тільки одну з причин. Див. також: логічний «і» -соедінітель, концептуальний «і» -соедінітель, масштабний «і» -соедінітель. Використання (ресурсу) (utilization) Використання (ресурсу) (utilization) - згідно ТОС, це активація ресурсу, яка вносить продуктивний вклад в досягнення мети. Надмірна активація ресурсу не є продуктивним використанням ресурсу. Див.також: активація, надмірна активація. Вихідне посилання (assumption) Вихідне посилання (assumption) - твердження, умова або переконання, що стосується того, чому існує логічний взаємозв'язок між логічними об'єктами. Застосування: вихідні посилання як можуть, так і не можуть бути показані / представлені в словесній формі на логічної діаграмі, але вони завжди існують. Далі, посилки можуть як бути, так і не бути дійсними. Всі логічні взаємозв'язки, які відображаються в логічних діаграмах розумових процесів, мають одну або кілька посилок. Деякі вихідні посилання вважаються «киснем» - тобто, істинними і розуміються більшістю людей по всьому світу і, таким чином, що не вимагають їх документального свідчення. Коли особа, уважно вивчає логічну діаграму, задається питанням «Що означає стрілка?», То воно насправді звертається до творця діаграми розумового процесу з проханням пояснити вихідні посилання, що забезпечують логічний взаємозв'язок двох логічних об'єктів. Ілюстрація 1: в діаграмах логічної достатності (до них відносяться дерево поточної реальності, дерево майбутньої реальності і план перетворень), вихідна посилка найчастіше вважається дійсним умовою для даної системи і зазвичай приймається без питань. Див. також: грозова хмара, необхідна умова, логічна необхідність, логічна достатність, розумові процеси. Вихідна посилка конфлікту (conflict assumption) Вихідне посилання конфлікту (conflict assumption) - чотири вихідних посилання конфлікту в Грозовий хмарі дають відповіді на наступні чотири питання: Чому D ставить під загрозу C? Чому D 'ставить під загрозу B? Чому D знаходиться в конфлікті з D '? Чому немає іншого способу задовольнити В і С? Застосування: Безпосереднє звернення до вихідних посилань конфлікту часто випаровує Хмару більш ефективно, ніж звернення до будь-яких або всіх вихідних посилань, які лежать в основі кожної з стрілок Хмари. Див. також: грозова хмара. Як забезпечити зміни? (how to cause the change?) Як забезпечити зміни? (how to cause the change?) - третє питання з послідовності змін. Застосування: зазвичай, дерево переходу і план перетворень є логічними інструментами розумових процесів, використовуваними для допомоги у визначенні детального плану дій для вирішення цього питання. Перспектива: це питання включає процес створення плану по здійсненню змін (але не обмежується ним). Вони також включає залучення відповідних людей у відповідний час на перших двох етапах послідовності змін, а також спрощення процесу ухвалення рішень цими людьми, замість диктування необхідних змін.Дивю також: послідовності змін, дерево переходу, розумові процеси. Канат (rope) Канат (rope) - одна з трьох складових системи \"барабан-буфер-канат\". Канат є інформаційним потоком, що поступає від барабана до початку процесу, який визначає (обмежує) відпустку матеріалів у виробництво так, щоб він відповідав матеріальному потоку, який може пройти через обмеження Див.також: буфер, барабан, барабан-буфер-канат. Категорії перевірки логічних побудов (КПЛП) Категорії перевірки логічних побудов (КПЛП) (categories of legitimate reservation (CLR)) - правила уважного вивчення обґрунтованості логічних діаграм в рамках розумових процесів. Сім логічних застережень згруповані в три рівні. Рівень 1: застереження щодо ясності. Рівень 2: застереження щодо існування причинно-наслідкового зв'язку і логічних об'єктів. Рівень 3: застереження щодо недостатності причини, наявності альтернативної причини, існування передбаченого слідства і наявності тавтології (перестановки причини і наслідки) Застосування: на рівні 1 повинні бути досягнуті ясність і розуміння намірів того, хто будує дерево, тобто розуміння того, які слова і фрази в об'єктах логічної діаграми насправді позначають і як вони використовуються. На рівні 2 оцінюється дійсність логічних об'єктів: чи існує об'єкт насправді і чи є причинно-наслідковий взаємозв'язок між об'єктами. В рамках кожної з чотирьох застережень рівня 3, особа, уважно вивчає логічну діаграму, має активно допомагати її упорядника, пропонуючи вносити зміни в неї, додаючи або змінюючи деякі слова і / або відсутні умови / об'єкти. Особа, що вивчає логічну діаграму, повинна проходити ці рівні до тих пір, поки не буде досягнуто згоди. Тобто, їм необхідно шукати ясності, потім переконуватися в існуванні відповідної причинно-наслідкового зв'язку, і, нарешті, удосконалити логічну діаграму. Важливо розуміти, що особа, яке будує логічне дерево, самостійно вирішує, приймати або відкидати застереження на якому б то ні було рівні. Див. також: застереження щодо альтернативної причини, застереження щодо існування причинно-наслідкового зв'язку, застереження щодо недостатності причини, застереження щодо наявності перестановки причини і слідства місцями, застереження щодо ясності, логічний об'єкт, застереження щодо існування логічних об'єктів, логічна діаграма, застереження щодо існування передбаченого слідства, уважне вивчення, розумові процеси. Кисень (oxygen) Кисень (oxygen) - вихідна посилка, яка зазвичай не є задокументованої в діаграмах логічної достатності логічних процесах, тому що про її існування знають всі і приймають це як факт реальної дійсності. Ілюстрація: наведена нижче логічна діаграма супроводжена словесним описом: «Якщо (60) у мене є паливо, і якщо (70) у мене є запальничка, то (90) я можу розвести багаття». Мені також потрібен кисень, проте кисень існує всюди, тому нами заздалегідь передбачається, що кисень є, і цей факт не потрібно вносити в нашу діаграму логічної достатності. Див.також: вихідна посилка, життєвий факт, діаграма логічної достатності, розумові процеси Клієнтське дерево поточної реальності Клієнтське дерево поточної реальності (customer current reality tree) - вид дерева поточної реальності, який акцентується на небажані явища, пов'язані з клієнтами організації, ніж з самою організацією. Логічна діаграма достатності, якою є клієнтське дерево поточної реальності, наочно показує причинно-наслідковий взаємозв'язок, що існує між кореневою проблемою покупців і з більшістю (всіма) небажаних явищ, викликаних їх постачальниками. Застосування: клієнтське дерево поточної реальності розробляється для того, щоб наочно показувати проблеми, які відчувають клієнти організації, що працюють з цією організацією і з аналогічними постачальниками. Крім того, клієнтське дерево поточної реальності вказує на ті питання, в яких клієнти найбільш стурбовані щодо того, чи зможе дана організація допомогти їм. І якщо організація в цих питаннях зможе поліпшити свою діяльність, то вона тим самим забезпечить собі конкурентну перевагу. З огляду на те, що кожне логічне дерево вимагає повного розуміння проблеми, з якою зіткнулися клієнти організації, то співробітники організації (зокрема, з відділів продажів і маркетингу), а також деякі з клієнтів беруть участь в проектуванні клієнтського дерева поточної реальності. Завдяки тому, що ключова проблема клієнтів з їх постачальниками вирішується за допомогою так званого «пропозиції мафії» (пропозиції, від якої неможливо відмовитися), клієнтське дерево поточної реальності допомагає досягти взаємовигідного рішення для організації та її клієнтів. Див. також: коренева (ключова) проблема, дерево поточної реальності, логічна достатність, розумові процеси, небажані явища, «пропозиція мафії». Комунікаційне дерево поточної реальності (КДТР) Комунікаційне дерево поточної реальності (КДТР) (communication current reality tree (CCRT)) - спрощена (скорочена) версія дерева поточної реальності, створювана для отримання загальної згоди всередині персоналу організації (наймані працівники, менеджмент і члени ради директора). Застосування: комунікаційне дерево поточної реальності з'єднує Хмару кореневого конфлікту, засновану на логічному дереві, з небажаними явищами (НЖЯ), які асоціюються з певною стороною конфлікту. Така модель спрощує взаємодію між менеджерами, тому що КДТР знижує ймовірність того, що менеджери будуть звинувачувати один одного в виниклі проблеми, при цьому захищаючи свою власну позицію і, тим самим, перешкоджаючи пошуку реального вирішення проблеми. КДТР вирішує цю задачу, ясно показуючи, що небажані явища виникають з-за системного конфлікту, а не через нерозумну поведінки окремих людей. Див.також: отримання загальної згоди, хмара ключового конфлікту, дерево поточної реальності, небажане явище. Комунікаційне дерево поточної реальності Комунікаційне дерево поточної реальності (КДПР) (communication current reality tree (CCRT)) - спрощена (скорочена) версія дерева поточної реальності, створювана для отримання загальної згоди всередині персоналу організації (наймані працівники, менеджмент і члени ради директора). Застосування: комунікаційне дерево поточної реальності з'єднує Хмару кореневого конфлікту, засновану на логічному дереві, з небажаними явищами (НЖЯ), які асоціюються з певною стороною конфлікту. Така модель спрощує взаємодію між менеджерами, тому що КДПР знижує ймовірність того, що менеджери будуть звинувачувати один одного в виниклі проблеми, при цьому захищаючи свою власну позицію і, тим самим, перешкоджаючи пошуку реального вирішення проблеми. КДПР вирішує цю задачу, ясно показуючи, що небажані явища виникають через системного конфлікту, а не через нерозумної поведінки окремих людей. Див.також: отримання загальної згоди, хмара ключового конфлікту, дерево поточної реальності, небажане явище. Контрольна точка Контрольна точка (control point) - ключова точка потоку у виробничому середовищі, в якій, якщо їй не управляти належним чином, можуть істотно знизитися показники проходу і термінів виконання замовлень. Застосування: Контрольні точки включають в себе точки регулювання операцій, точки сходження (конвергенції), точки розбіжності (дивергенції), обмеження, а також точки відвантаження. В управлінні виробництвом на основі ТОС передбачається, установка послідовності робіт (секвенування) в контрольних точках з метою відповідності з графіком роботи ресурса- «барабана» і / або плану відвантаження збільшує ймовірність своєчасного виконання роботи. Див. також: обмеження, точка сходження (конвергенції), точка розбіжності (дивергенції), план роботи ресурса- «барабана», графік відвантаження. Коренева (ключова) причина Коренева (ключова) причина (root cause) - логічний об'єкт, зазвичай виникає на нижніх рівнях причинно-наслідкового зв'язку дерева поточної реальності, для яких немає передбачуваних причин. Коренева причина є початковою точкою для дерева реальності, яка призводить до виникнення одного (або кількох) небажаних явищ. **Застосування: якщо коренева причина призводить до виникнення більшості небажаних явищ (включаючи і найбільш істотні), то її можна назвати кореневої (ключовий) проблемою. Коли коренева причина усунена, повторне виникнення одного або декількох небажаних явищ може бути припинено. На відміну від кореневого елемента, коренева причина є станом або умовою, на яке менеджер може певним чином вплинути або яке він здатний певною мірою змінити. Перспектива: термін «ключова причина», який вживається тут, відрізняється від аналогічного терміну, що вживається в системі Загального управління якістю (Total Quality Management), де цей термін використовується в процесах «мозкового штурму», при створенні діаграми Ісікава і при проектування діаграми взаємозалежностей, де виявляється причина, відповідальна за виникнення певної проблеми в рамках поліпшується процесу. Коренева (ключова) проблема Коренева (ключова) проблема (core problem) - Елемент поточної реальності, який безпосередньо відповідає за (тобто є джерелом) найбільш значних небажаних явищ (НЖЯ) в поточній реальності досліджуваної системи. Може існувати одна або кілька кореневих проблем, однак, як правило, на 1-3 кореневих проблеми припадає понад 70% НЖЯ в середовищі. Приклад: У Дереві поточної реальності (ДТР) на малюнку нижче кореневої проблемою є елемент 10. Перспектива 1: Коренева проблема може проявлятися будь-яким з трьох наступних способів: факт і елемент в реальності: ефективність є основним способом оцінки діяльності, що може бути безпосередньо пов'язано через причинно-наслідкові зв'язки з основними НЖЯ, або конфлікт між D і D 'в хмарі кореневого конфлікту (наприклад: «D - Використовувати показники локальної ефективності в якості основної характеристики діяльності» і «D' - НЕ використовувати показники локальної ефективності в якості основної характеристики діяльності»), або помилкова вихідна посилка, відповідальна за існування конфлікту (А - Простоювання ресурсів - основна проблема). Хмара кореневого конфлікту також може бути проявом кореневої проблеми. При виявленні кореневої проблеми в ДТР важливо розуміти, що оскільки не всі НЖЯ однаково важливі, і оскільки для створення ДТР використовуються в повному обсязі НЖЯ, правило 70% є лише керівництвом, що дозволяє переконатися, що елемент або елементи, визначені як кореневі проблеми, є джерелом більшості найбільш значних НЖЯ. При оголошенні факту або помилковою вихідної посилки кореневої проблемою важливо усвідомити, що кореневу проблему можна вибрати суб'єктивно. У реальності може бути більш одного кореневого елемента, який відповідає за існування більш 70% НЖЯ. Особа, яка проводить дослідження, може вибрати один з цих кореневих елементів в якості кореневої проблеми з урахуванням свого рівня повноважень і / або особистого завзятості для вирішення проблеми. Перспектива 2: Коренева проблема може бути визначена на чотирьох рівнях, пов'язаних причинно-наслідковим зв'язком. Найнижчий рівень - це помилкова вихідна посилка про поточну реальності, яка не дозволяє людині або організації подолати кореневої конфлікт. Другий рівень - це політика, яка є наслідком помилкової вихідної посилки. Наприклад, політика, яка визначає, на якій стороні конфлікту слід сфокусуватися (D або D '), коли переключитися (Поки ... робимо D, як тільки ... робимо D'), або навіть взагалі не вживати ніяких дій (зберегти статус-кво), так як є негативні наслідки, пов'язані як з D, так і з D '. Третій рівень - це вимірювання показників, які ми проводимо для забезпечення дотримання політик. Четвертий рівень - це «погане» поведінку, що є результатом хибної вихідної посилки, політик (локальної ефективності) і / або показників. Див.також: вихідна посилка, кореневої (ключовий) елемент, кореневої конфлікт, хмара кореневого конфлікту, дерево поточної реальності, небажане явище. Кореневої конфлікт Кореневої конфлікт (core conflict) - систематичний конфлікт, який є причиною виникнення абсолютної більшості небажаних явищ в поточній реальності, що вивчається. Кореневої конфлікт найчастіше буває характерним і вміщує в себе кілька різних конфліктів, відповідальних за наявні в системі небажані явища Застосування: в методиці трьох хмар, кореневої конфлікт виходить шляхом синтезу з трьох конкретних хмар конфліктів, які разом відображають фундаментальну проблему, якої характерним для всієї система. Кореневої конфлікт виражається в двох передумовах в хмарі кореневого конфлікту - в логічних об'єктах, названих D і D '. Ілюстрація: кореневої конфлікт у виробничій організації, відображений в даному прикладі, існує тому, що неможливо одночасно вибрати «D - Використовувати показники локальної ефективності в якості основної характеристики діяльності» і «D '- НЕ використовувати показники локальної ефективності в якості основної характеристики діяльності».е ** Див.також: хмара конфлікту, дерево поточної реальності, методика трьох хмар, небажане явище. Кореневої (ключовий) елемент Кореневої (ключовий) елемент (core driver) - Логічний об'єкт, звичайно знаходиться внизу дерева поточної реальності, у якого не виявлена ​​причина. Він є ключовою ознакою цього середовища і впливає на проблемну зону, проте знаходиться поза межами контролю або впливу з боку менеджменту, або ж являє собою логічний об'єкт, на який менеджмент організації з яких-небудь причин не хоче звертати увагу. Див.також: точка входу, дерево поточної реальності, коренева (ключова) проблема. Коренева хмара (generic cloud) Коренева хмара (generic cloud) 1. Узагальнена хмара, створена в рамках методики трьох хмар. Вона являє собою синтез відносно незалежних один від одного грозових хмар і містить в собі кореневої конфлікт, відповідальний за виникнення багатьох небажаних явищ, наявних у досліджуваній організації. 2. Хмара загального (базового) конфлікту між двома особами, що представляє собою різні виникають день у день конфлікти. Приклад: кореневі хмари включають в себе наступні протистояння: між системами управління, заснованими на парадигмах обліку витрат і обліку проходу, між категоріями локальності і глобальності, між індивідуальною вигодою і вигодою для системи, між короткостроковістю і довгостроковістю. Також кореневі хмари включають в себе хмари підпорядкування. Див.також: кореневої конфлікт, грозова хмара, хмара підпорядкування, методика трьох хмар, небажані явища. Червона зона (буфера) Червона зона (буфера) (red zone (of the buffer)) - термін, який використовується в управлінні буфером стосовно регіону III, найбільш важливого регіону буфера. Передбачається, що деталі повинні відпускатися (або роботи повинні бути закінчені) до зеленої зони. Червоний колір (що означає небезпеку або ключову важливість) використовується, щоб показати, що виникнення діри в цій (червоною) зоні означає загрозу для проходу, тому що існує ризик відсутності необхідної деталі в потрібний час. Діра в даному регіоні вимагає прийняття негайних заходів, передбачених принципами управління буфером. . Синоніми: регіон III. Див.також: буфер, управління буфером, зелена зона, жовта зона, діра. Критичний ланцюг Критичний ланцюг (critical chain) - найбільш тривала послідовність залежних подій в ланцюзі проектних операцій, що враховує в собі взаємозалежність як задач, так і ресурсів, які необхідні для виконання проекту. Критичний ланцюг є обмеженням проекту. Застосування: критичного ланцюга в сумі з буфером проекту визначають тривалість виконання проекту. Якщо між ресурсами відсутні розбіжності, то критична ланцюг ідентична критичного шляху. Див. також: управління проектами по методу критичної ланцюга. Логічна гілка Логічна гілка (logic branch, logic twig) - кілька логічних об'єктів, з'єднаних за допомогою відносини логічної достатності. Застосування: зазвичай, логічна гілка є складову логічного дерева, в якому є значно більше логічних об'єктів. Див.також: логічний об'єкт, логічна достатність. Логічна діаграма Логічна діаграма (logic diagram) . Синоніми: логічне дерево Див.також: логічне дерево Логіка достатності Логіка достатності (sufficiency-based logic) - тип причинно-наслідкового обґрунтування, в якому існування однієї або декількох заявлених причин неминуче веде до існування заявленого наслідка. Застосування: діаграмами розумових процесів, що використовують логіку типу «якщо ..., то ...» (причинно-наслідковий логіка), є дерево поточної реальності, дерево майбутньої реальності, негативна гілка, план перетворень. Див.також: причина, причина-наслідок, наслідок, логічний об'єкт, логічний «і» -соедінітель, розумові процеси. Логіка необхідності Логіка необхідності (Necessity-based logic) - тип логіки, де кожен логічний об'єкт, який розташовується в хвостовій частині стрілки, повинен існувати, щоб існував і той логічний об'єкт, на який ця стрілка вказує. Застосування: діаграмами розумових процесів, що використовують даний тип логіки, є грозові хмари і дерева переходу. Обгрунтованість зв'язку об'єктів вивчається шляхом перевірки обґрунтованості вихідних посилок, що лежать в основі взаємозв'язку між двома об'єктами. Див.також: вихідна посилка, логічний об'єкт, грозова хмара, дерево переходу, уважне вивчення. Логічний «і» -поєднувач Логічний «і» -поєднувач (logical «and» connector) - символ у вигляді еліпса, який використовується в діаграмах логічної достатності розумових процесів для вказівки на те, що всі логічні об'єкти, чиї вихідні стрілки об'єднані логічним «і» -поєднувачем, повинні існувати, щоб існувало слідство. Застосування: логічний «і» -поєднувач використовується в наступних логічно діаграмах: дерево поточної реальності, дерево майбутньої реальності, негативна гілка, план перетворень. Еліпс малюється поверх стрілок, що виходять з двох-трьох логічних об'єктів, позначаючи, що всі вони повинні існувати, щоб існувало слідство. Іншими словами, усунення будь-якої з цих об'єднаних причин унеможливлює і існування слідства. . Синоніми: концептуальний «і» -поєднувач, «і» -поєднувач, еліпс, «банан» (сленговий термін) Див.також: дерево поточної реальності, логічний об'єкт, дерево майбутньої реальності, логічне дерево, негативна гілка, логічна достатність, план перетворень. Логічний об'єкт (entity) Логічний об'єкт (entity) - одиночний елемент, укладений в геометричну фігуру, який позначає частину досліджуваної системи за допомогою будь-якої логічної діаграми розумових процесів. Причини, наслідки, дії, умови, ін'єкції, проміжні цілі і перешкоди - всі вони вважаються логічними об'єктами. Застосування: логічний об'єкт повинен бути виражений як закінчене речення; однак ця пропозиція не має бути складносурядні / складнопідрядних. Ілюстрація: фраза «Акумулятор автомобіля» не є логічним об'єктом. У той же час фраза «Акумулятор автомобіля розряджений» є логічним об'єктом, так як це - закінчене речення. Див.також: причина, наслідок, ін'єкція, проміжна мета, перешкода, розумові процеси. Логічне дерево Логічне дерево (logic tree) - графічне відображення причинно-наслідкового взаємозв'язку, що складається з логічних об'єктів, які з'єднані стрілками на основі логічної необхідності або достатності. Застосування: логічні дерева невеликих розмірів часто вважаються логічними гілками, зокрема, коли вони виділені з логічного дерева більших розмірів.. Синоніми: логічна діаграма Див.також: дерево поточної реальності, логічний об'єкт, дерево майбутньої реальності, дерево переходу, план перетворень, негативна гілка, логічна необхідність, логічна достатність Майстер-клас «4 по 4» Майстер-клас «4 по 4» (4-by-4) - семінар, що складається з 2 блоків тривалістю по 4 дня кожен. Протягом перших 4 днів проходить навчання основний парадигмі ТОС і взаємозв'язку між відповідними функціональними областями (діяльність організації, фінанси та показники, управління проектами / інжиніринг, дистрибуція / ланцюг поставок, маркетинг, продажі, управління персоналом і / або стратегія організації). Наступні 4 дня присвячені ідентифікації ключової проблеми організації і розробці індивідуального рішення (включаючи рішення для відповідної функціональної області), а також складання програми по впровадженню цього рішення (по ін'єкціям і проміжним завданням). Див. також: ключова проблема, парадигма ТОС. Менеджер буфера Менеджер буфера (buffer manager) - людина, яка несе відповідальність за періодичну перевірку стану буфера і управління конкретними буферами, включаючи установку розміру буфера і його місця розташування, щоденного моніторингу стану буфера і коригувальних дій, необхідних для підтримки буферів. Він також відповідає за реєстрацію причин проникнення в жовту, червону і чорну зону. Ці причини використовуються для виявлення областей, на які повинен бути націлений процес вдосконалення. Див. також: управління буфером. Мерфі (Murphy) Мерфі (Murphy) - позначення ситуації виникнення незапланованої варіативності в системі. Закон Мерфі говорить, що якщо що-небудь може погіршитися, воно обов'язково погіршиться. Застосування: Мерфі включає в себе ситуації виникнення незапланованої варіативності через поломки обладнання, поганої якості, затримок матеріалів через проблеми з транспортуванням і т.п. щоб захиститися від впливу Мерфі, використовуються буфери. Див.також: буфер збірки, буфер, буфер потужності, буфер ресурса- «барабана», що живить буфер, буфер проекту, буфер відвантаження, статистичні відхилення і залежні події, буфер запасів, буфер часу, буфер простору. Багатозадачність Багатозадачність (multitasking) - ситуація, в якій робота над завданням зупиняється з метою того, щоб приступити до виконання нового завдання. Застосування: сама по собі, багатозадачність не є поганою чи хорошою. Однак багатозадачність вельми негативна, коли робота над завданням зупиняється з метою того, щоб приступити до виконання іншого завдання. Ілюстрація: в многопроектной структурі досить часто спостерігаються потреби в тому, щоб ресурси «переключалися» між виконанням завдань з різних проектів (або з одного проекту), щоб домогтися прогресу у виконанні проекту. Але така багатозадачність найчастіше збільшує тривалість виконання проекту і, таким чином, є негативною. Якщо ж, однак, робота ресурсу навмисно зупиняється, щоб переключитися на виконання затримується завдання з критичної ланцюга (або найбільш проникаючої ланцюга) з іншого проекту з метою завершення його в строк, то така багатозадачність є позитивною. Розумові процеси (РП) Розумові процеси (РП) (thinking processes (TP)) - набір логічних інструментів, які можуть використовуватися окремо або в поєднанні один з одним, щоб відповісти на три питання в послідовності змін: 1. Що змінювати? 2. На що змінити? 3. Як забезпечити зміни? Інструментами розумових процесів є: грозова хмара, дерево поточної реальності, дерево майбутньої реальності, негативна гілка, дерево переходу, план перетворень. Застосування: логічні інструменти розумових процесів можуть використовуватися для подолання шарів опору і досягнення загальної згоди в різних групах зацікавлених осіб. Див.також: отримання загальної згоди, послідовність змін, дерево поточної реальності, грозова хмара, дерево майбутньої реальності, шари опору, логічне дерево, негативна гілка, дерево переходу, план перетворень. Найбільш проникаючий ланцюг Найбільш проникаючий ланцюг (most penetrating chain) - послідовність робіт, яка не перебуває у критичній ланцюга, але на даний момент найбільш далеко проникаюча в проектний буфер в порівнянні з іншими послідовностями робіт. Найбільш проникаючий ланцюг включає в себе роботу, що не входить в критичний ланцюг, а також ту роботу з критичної ланцюга, яка залишилася після того, як цей ланцюг перетнув критичний ланцюг. Застосування: в управлінні проектами по методу критичного ланцюга небажаної є ситуації, в яких швидкість споживання буфера більше, ніж 1,0. Якщо виникає така ситуація, то менеджмент повинен зробити все можливе, щоб знизити час виконання завдань на цьому ланцюзі, щоб згаданий коефіцієнт став менше, ніж 1,0. Таким чином, критична ланцюг знову буде найтривалішою послідовністю робіт. Див.також: швидкість споживання буфера, критична ланцюг, управління проектами за методом критичної ланцюга. Знайти обмеження Знайти обмеження (identify) - ключове слово в першому з п'яти напрямних кроків: знайти обмеження (обмеження) системи. Це - процес визначення того, який фактор в даний момент є найбільш обмежуючим для досягнення мети. Див.також: обмеження, п'ять напрямних кроків. На що змінити? На що змінити? (To what to change? (What to change to?)) - друге питання з послідовності змін, який акцентував увагу на визначенні набору ін'єкцій, які усунуть небажані явища або перетворять більшість з них в бажані явища. Застосування: зазвичай, грозові хмари, дерева майбутньої реальності і негативні гілки є наборами розумових процесів, які використовуються для пошуку відповідей на дане питання. По суті, відповідь на дане питання описує майбутнє стан системи. Див.також: послідовність змін, грозова хмара, дерево майбутньої реальності, ін'єкція, негативна гілка, розумові процеси Негативна гілка Негативна гілка (negative branch reservation (NBR)) - явище несприятливого або небажаного характеру, яке може бути викликане застосуванням ін'єкції і, таким чином, бути небезпечним для виникнення бажаних явищ, що передбачалися в рамках вирішення проблеми (ін'єкції). Застосування: будучи по суті гілкою майбутньої реальності, що виникла завдяки застосованої ін'єкції, являє собою новий набір логічних ефектів, об'єднаних причинно-наслідковим зв'язком, має одне або кілька небажаних явищ. Негативну гілку, якщо її існування обгрунтовано, вимагає застосування додаткової або вторинної ін'єкції в тому місці, де гілка починає набувати негативний відтінок, з метою запобігання негативним наслідкам. Процес додаткового введення вторинної ін'єкції називається усуненням ( «спиляти») негативної гілки. Якщо ж в результаті також виникають суттєві небажані явища, то вторинна ін'єкція є неефективною, і необхідно переглянути початкову ін'єкцію. Див.також: бажані явища, логічний об'єкт, гілка майбутньої реальності, ін'єкція, вторинна ін'єкція, небажані явища. Небажане явище Небажане явище (НЯ) (undesirable effect (UDE)) - негативний аспект поточної реальності, відповідно до мети організації (системи) або її необхідних умов. Небажані явища вважаються видимими симптомами глибшої кореневої причини, кореневої проблеми або кореневого конфлікту. Застосування: деякими особливостями правильно охарактеризованого небажаного явища є: 1. Закінчена твердження, що стосується окремого наслідки, яке не містить в собі такі слова / фрази: «і», «через те, що», «в результаті того, що\"; 2. Слідство, яке знаходиться за рамками контролю з боку менеджменту; 3. Що-небудь, що точно існує в реальності організації, як це і зазначено; 4. Що-небудь, що є негативним само по собі, без впливу на будь-якій іншій фактор; 5. Воно не є ні можливою причиною, ні передбачуваним засобом вирішення кореневого конфлікту організації (або її основний дилеми). Абсолютна більшість небажаних явищ, відображаються як логічні об'єкти дерева поточної реальності. Див.також: коренева проблема, дерево поточної реальності, логічний об'єкт, необхідна умова, коренева причина. Необхідна умова Необхідна умова (necessary condition) - умова, яка повинна виконуватися, щоб була досягнута мета (або проміжна мета). Застосування: необхідні умови поміщаються в грозових хмарах і на деревах переходу. Приклад: мета компаній, максимально орієнтованысть на отримання прибутку, - заробляти максимально багато грошей зараз і в майбутньому. Щоб досягти цієї мети, абсолютно необхідно, щоб компанія постійно задовольняла своїх клієнтів і надавала комфортні і безпечні умови праці для своїх працівників. Див.також: грозова хмара, дерево переходу, проміжна мета. Необхідність Необхідність (need). Синоніми: необхідна умова Див.також: необхідна умова Області буфера Області буфера (buffer regions) - буфер (часу, запасів і т.д.) ділиться на окремі сегменти, щоб сигналізувати про необхідність активних дій для запобігання запізнень деталей / продуктів / людей або голодування обмеження. Області, як правило, називають червоною, жовтою, зеленою, і, як правило, вони рівні 1/3 від загального розміру буфера кожна, хоча відносний розмір може відрізнятися в залежності від конкретних характеристик потоку, процесу і продукту. Іноді ще додатково використовується термін «біла область» для позначення замовлень, які були запущені раніше (достроково), а термін «чорна область» використовується для позначення замовлень, що спізнюються. На першому малюнку показані області буфера запасів, а на другому - області буфера часу. Приклад 1: Області буфера запасів для деталі або продукту.! Приклад 2: Буфер часу для замовлення. Синонім: зони буфера. Див. також: буфер, управління буфером. Робоча партія Робоча партія (process batch) - кількість (обсяг) одиниць продукції, що випускаються, чи повинно бути опрацьовано на виробничій ланці, перед тим як дана ланка переключиться на виконання іншої роботи або на перенастроювання устаткування. Застосування: в структурах, де виробництво здійснюється партіями, час виконання замовлення на виробництві найчастіше може бути істотно скорочено за рахунок зменшення транспортної партії (в порівнянні з робочою партією). Див.також: транспортна партія, час виконання замовлення на виробництві. Дохід від пропускної здатності (Т - throughput) Незважаючи на назву \"пропускна здатність\", яке асоціюється з процесом виробництва, в теорії обмежень цей термін використовується дещо в іншому контексті. Під пропускною здатністю розуміється швидкість, з якою система виробляє \"цільові одиниці\". Коли \"цільовими одиницями\" вважаються гроші (в разі комерційного підприємства), то пропускна здатність - це швидкість створення грошей за допомогою продажу продукції. Причому акцент робиться на тому, що гроші заробляються в результаті саме продажів, а не випуску продукції, який може повністю або частково поповнити матеріально-виробничі запаси. Пропускна здатність також визначається як всі грошові кошти, що надходять в компанію, за вирахуванням грошей, виплачених стороннім продавцям. Це і є гроші, які створює дана компанія, в той час як виплати стороннім продавцям є гроші, створені іншими компаніями. Таким чином, зміст розглянутого терміна в цілому відповідає поняттю \"дохід\", яке у вітчизняному обліку визначається як збільшення економічних вигод у результаті надходження активів (грошових коштів, іншого майна) і (або) погашення зобов'язань, що приводить до збільшення капіталу цієї організації, за винятком вкладів учасників (власників майна). Крім того, в англомовній літературі для позначення того ж показника зустрічається термін, який можна перевести саме як \"дохід від пропускної здатності\" (throughput contribution) 1 за аналогією з терміном \"маржинальний дохід\" (contribution margin). Для більш конкретного визначення доходу від пропускної здатності зауважимо, що він являє собою виручку від продажів за вирахуванням змінних витрат, що на перший погляд ідентично показником маржинального доходу. Відмінність полягає в тому, які витрати слід вважати змінними. При розрахунку маржинального доходу в якості змінних витрат визнаються прямі матеріальні витрати, прямі трудові витрати, змінні виробничі накладні витрати, а також змінні адміністративні та комерційні витрати. Для обчислення доходу від пропускної здатності з виручки віднімаються тільки прямі матеріальні витрати (що входять в собівартість проданої продукції), які згідно з обліком пропускної здатності часто виявляються єдиними змінними витратами. У ряді джерел з даного питання називаються ще деякі окремі види витрат, які також можна віднімати з виручки. До них відносять витрати за договорами субпідряду, комісійні продавцям, митні збори і витрати на транспортування, якщо компанія не має в своєму розпорядженні власними каналами транспортування продукції. Згідно з підходом, прийнятим в обліку пропускної здатності, на підприємствах з автоматизованим виробництвом і широким асортиментом продукції, що випускається економічно недоцільно простежувати витрати на оплату праці аж до кожного окремого продукту, оскільки з розвитком нових технологій частка прямих трудових витрат у загальній структурі витрат різко знизилася. Крім того, компанії, які використовують працю кваліфікованих робітників, стикаються з ситуацією, коли робочих можна легко звільняти в періоди низької ділової активності і потім знову наймати, коли ділова активність зростає. Відносно виробничих накладних витрат прийнятий подібний підхід. Оскільки вони в основному представлені непрямими витратами, які за визначенням є загальними для декількох видів продукції, їх розподіл також передбачається економічно недоцільним. Тому при обчисленні доходу від пропускної здатності прямі трудові витрати та всі виробничі накладні витрати розглядаються як постійних витрат і при обчисленні доходу від пропускної здатності не вираховуються з виручки від продажів. Застереження щодо недостатності причини Застереження щодо недостатності причини (cause insufficiency reservation) - застереження в категоріях перевірки логічних побудов, які використовується, коли особа, уважно вивчючи логічну діаграму, вважає, що висунута причина сама по собі недостатня для пояснення наслідка. Існує латеральна залежність між декількома однаково впливовими причинами, що сприяє виникненню слідства. Застосування: при наявності застережень цього типу, особа, що вивчає логічну діаграму, має надати відсутні допоміжні причини, які, разом з початковою причиною, будуть створювати слідство. Важливо знати, що якщо особа, уважно вивчає логічну діаграму, вірно вибере причини, то в такому випадку, якщо яка-небудь із запропонованих причин не існує, розглянутий ефект також не існуватиме. Ілюстрація: виникнення випадкових ситуацій, в яких сировина не було доставлено постачальниками вчасно, сприймаються особою, уважно вивчають логічну діаграму, як недостатнє для того, щоб викликати брак сировини. Але особа, уважно вивчає логічну діаграму, вважає, що комбінація випадкових ситуацій, в яких сировина не було доставлено постачальниками вчасно, і недостатніх запасів сировини, що не захищають від подібної випадковості, є причиною виникнення браку сировини. Див. також: категоріїперевірки логічних побудов (КПЛП), наслідок, логічний об'єкт, логічне дерево. Застереження щодо перестановки причини і слідства місцями Застереження щодо перестановки причини і слідства місцями (cause-effect reversal reservation) - застереження 3 рівня в категоріях перевірки логічних побудов, яка використовується для розпізнання того, помінялися чи причина і наслідок місцями. Це також називається тавтологією. Застосування: іноді причинно-наслідковий взаємозв'язок може бути інвертована. Найчастіше це відбувається, коли слідство виводиться за допомогою фактів, а не за допомогою отримання відповідей на питання: «Що викликало це наслідок?» Або «У чому причина?». Ілюстрація 1: зазначена нижче логічна побудова супроводжена словесним описом: «Якщо я купую корм для собак, то у мене є собака». Причинно-наслідковий зв'язок невірна, так як покупка корми для собак не є причиною того, що у вас є собака. Зворотній спрямованість стрілки, що позначає причинно-наслідковий взаємозв'язок, виправляє діаграму: «Якщо у мене є собака, то я купую корм для собак». Ілюстрація 2: зв'язок типу «пожежа в будинку» є особливим прикладом застереження щодо перестановки причини і слідства місцями. Наведена зліва ілюстрація супроводжена словесним описом: «Якщо біля мого будинку припаркована пожежна машина, то в моєму домі пожежа». Однак насправді тут присутній інвертована причинно-наслідковий зв'язок: «Якщо в моєму будинку пожежа, то біля мого будинку припаркована пожежна машина». Див. також: тавтологія. Застереження щодо існування передбачуваного слідства Застереження щодо існування передбачуваного наслідка (predicted effect reservation) - застереження III рівня в категоріях перевірки логічних побудов, яка використовується для перевірки існування логічного об'єкта та / або існування причинного зв'язку на основі відсутності неминучого слідства, яке повинно існувати, якщо логічний об'єкт або передбачувана причинний зв'язок дійсно існують. Застосування: передбачуване наслідок може використовуватися для того, щоб довести або спростувати існування причинно-наслідкового зв'язку, що дуже складно здійснити (практично неможливо) за допомогою безпосереднього спостереження. З одного боку, якщо всі погоджуються з тим, що певний логічний об'єкт (наслідок) існує, то і другий логічний об'єкт (причина) також повинен існувати. Тому, якщо особа, детально вивчає діаграму, доведе, що передбачуване слідство не існує, то, таким чином, не може існувати і причина. З іншого боку, якщо передбачуване слідство не існує, то існування початкової причини може мати силу. Ілюстрація: існує наслідок: « Моя машина не запуститься». Передбачувана причина: «Заряд акумулятора в моїй машині низький». Інша передбачувано наслідок низького заряду акумулятора: «Фари машини горять тьмяно». Якщо на ділі ми маємо: «Фари машини горять яскраво», то заряд акумулятора не може бути низьким. Навпаки, якщо фари все-таки горіли б тьмяно, то підтвердилося б, що заряд акумулятора низький. Див.також: категоріїперевірки логічних побудов, причина-наслідок, логічний об'єкт, уважне вивчення Застереження щодо існування причинно-наслідкового зв'язку Застереження щодо існування причинно-наслідкового зв'язку (causality existence reservation) - застереження 2 рівня в категоріях перевірки логічних побудов, яка використовується для усвідомлення того, чи дійсно існує причинно-наслідковий зв'язок між двома логічними об'єктами. Застосування: навіть якщо укладач логічного дерева і особа, уважно його вивчає, погоджуються щодо того, що причина і наслідок існують, слідство не обов'язково є неминучим ефектом, викликаним причиною. Як показано на ілюстраціях 1 і 2, особа, що вивчає логічну діаграму, може поцікавитися: «Як логічний об'єкт-причина призводить до передбачуваного слідству?». Ілюстрація 1: розглядаючи наступний логічний діаграму, особа, що вивчає логічну діаграму, може поцікавитися: «Як біржові спекуляції забезпечують фінансову стійкість?» Ілюстрація 2: розглядаючи наступний логічний діаграму, особа, що вивчає логічну діаграму, може поцікавитися: «Як наявність сертифікату, що підтверджує вивчення певної дисципліни, гарантує, що ви знаєте в цій дисципліні про все?» Див. також: категоріїперевірки логічних побудов, логічний об'єкт, уважне вивчення, розумові процеси Застереження щодо ясності Застереження щодо ясності (clarity reservation) - застереження 1 рівня в категоріях перевірки логічних побудов, яка використовується, коли особа, уважно вивчає логічну діаграму, (1) стурбоване змістом окремого слова або всього твердження, що міститься в будь-якому логічному об'єкті, або ділянкою логічної діаграми ; або (2) не бачить обґрунтованої взаємозв'язку між наявними причиною і наслідком. Застосування: Застереження 1-го рівня щодо ясності зазвичай є першою застереженням, яка піднімається особою, уважно вивчають діаграму, тому що необхідно спробувати зрозуміти логічні об'єкти і взаємозв'язок між ними перед тим, як піднімати застереження вищих рівнів (2 і 3). Зазвичай застереження щодо ясності включають в себе визначення слів, значення використаних абревіатур, фраз, займенників, словосполучень, пунктуації, складних підлягають, дієслів, які використані для опису логічних об'єктів, таких як фрагмент пропозиції, причинно-наслідковий зв'язок всередині одного об'єкта, слова або послідовності всередині об'єкта. Іноді особа, що вивчає діаграму, не знайоме з діяльністю, політиками, процедурами або показниками, і тоді він використовує застереження щодо ясності, щоб складе розуміння. Забезпечення словесної ясності може бути достатнім для розуміння діаграми, і, таким чином, упорядника дерева не доведеться редагувати логічні об'єкти, щоб забезпечити розуміння особі, що вивчає діаграму. Аналогічним чином, особи, уважно вивчає діаграму, може запитати роз'яснення взаємозв'язку між логічними об'єктами. В цьому випадку, знову ж таки, редагування взаємозв'язків може не знадобитися, якщо наведено їх ясне словесний опис. Приклади обох типів ясності наведені нижче.Ілюстрація 1: є логічний об'єкт: «(100) Ця мила школа підходить для маленької дівчинки». Необхідно встановитися ясність: це відповідна школа для всіх маленьких дівчаток? Або, може бути, ця школа підійде тільки для якоїсь певної маленької дівчинки?Ілюстрація 2: є взаємозв'язок між логічними об'єктами 100 і 110. Особа, уважно вивчає логічну діаграму, може попросити уточнення: яким чином біржові спекуляції забезпечують фінансову стійкість, якщо саме поняття «біржова спекуляція» є повною протилежністю поняття «фінансова стійкість»?Ілюстрація 3: Розглянемо відносини між трьома об'єктами: 100, 110 і 120. Особа, уважно вивчає логічну діаграму, може попросити пояснити, як перехід на систему обліку витрат за видами діяльності забезпечує точний розрахунок собівартості продукту і як потім встановлюється ціна реалізації на цей продукт, так як він може бути не знайомий з такою системою обліку витрат і взаємозв'язком між собівартістю і ціною. Див. також: категоріїперевірки логічних побудов, уважне вивчення, довга стрілка. Обмеження Обмеження (constraint) - фактор, який, в кінцевому рахунку, обмежує продуктивність системи або організації. Фактор, який міг би сприяти більш успішному досягненню мети, якби організація могла збільшити його, більш повно використовувати його, або більш ефективно підкорятися йому. Перспектива: існування обмеження системи, а також той факт, що ефективність організації може бути поліпшена шляхом знаходження і ретельного управління або усунення обмеження, є основою ТОС. Ілюстрація: в книзі «Мета» (Е. Голдратт, 1984 г.) компанія не могла виконувати замовлення на виробництво продукції досить швидко, щоб задовольняти ринковий попит, і обмежуючими факторами були два ресурси: верстат NCX 10 і обпалювальна піч. Ці ресурси були обмеженнями для компанії UNICO. Однак UNICO змогла більш ефективно використовувати обмеження у вигляді верстата NCX 10, підпорядкувавши йому всю роботу на заводі, а також виконувати роботу обпалювальної печі за допомогою аутсорсингу - все це допомогло їй збільшити прибутки. Так як UNICO продовжила більш ефективно використовувати свої обмеження, в кінцевому підсумку компанія зіткнулася з тим, що почала виробляти більше, ніж могли придбати її покупці, і обмеження перемістилося на недолік замовлень від клієнтів. Іншими словами, обмеженням став ринок. Таким чином, компанія була змушена підпорядкувати роботу всієї системи новому зовнішньому обмеження. Див.також: розширити (обмеження), максимально використати (обмеження), підпорядкувати (роботу обмеження). Обмеження в матеріалах Обмеження в матеріалах (material constraint) - звичайна ситуація, в якій неправильно вживаються терміни. Брак матеріалів рідко є обмеженням, швидше за тимчасова нестача матеріалів може перешкоджати максимально ефективному використанню обмеження і підпорядкування йому всієї роботи. Перспектива: періодично можуть виникати ситуації, коли проблематично отримати необхідні матеріали - наприклад, світовий дефіцит стали на початку 21 століття. У цій ситуації сталь була обмеженням для компаній протягом певного проміжку часу. Однак в більшості випадків тимчасова нестача матеріалів так і залишається тимчасової - матеріали стає можливим отримувати від іншого постачальника і / або за вищою ціною. Тому дефіцит матеріалів дуже рідко вважається обмеженням - він, скоріше, ускладнює здійснення ефективного управління обмеженням, перешкоджаючи максимально ефективному використанню обмеження і підпорядкування йому всієї роботи. Див.також: максимально ефективно використовувати (обмеження), підпорядкувати (роботу обмеження). Обмеження в показниках вимірювання ефективності Обмеження в показниках вимірювання ефективності (measures constraint) - звичайна ситуація, в якій неправильно вживаються терміни. Погані показники оцінки діяльності рідко є обмеженням, скоріше вони можуть перешкоджати максимально ефективному використанню обмеження і підпорядкування йому всієї роботи. Ілюстрація: вимір ефективності на всіх ресурсах веде до перевиробництва на ресурсах, які не є обмеженнями, і є причиною простоювання пляшкового горлечка системи. Показники вимірювання ефективності не є обмеженням - немає необхідності в їх максимально ефективне використання і в підпорядкуванні їм роботи всієї системи. Швидше, вони є перешкодою системи максимально ефективно використовувати обмеження і підпорядковувати йому всю роботу.Примітка: раніше вважалося, що показники ефективності діяльності також є одним з видів обмежень. Обмеження в політиці Обмеження в політиці (policy constraint) - звичайна ситуація, в якій неправильно вживаються терміни. Погана організаційна політика не є обмеженням, вона швидше за все ускладнює здійснення управління обмеженням, перешкоджаючи максимально ефективно використовувати обмеження і підпорядковувати йому всю роботу. Ілюстрація: у багатьох виробників діє політика виробництва деталей за методикою «оптимальний розмір замовлення», яка часто має на увазі виробництво великими партіями з метою оптимізації витрат. Виробництво великими партіями може сприяти періодичному простоювання обмеження. Необхідно розуміти, що коли це відбувається, не погана політика є обмеженням, а неможливість максимально ефективно використовувати обмеження через таку політики.Примітка: раніше, політика вважалася одним з видів обмежень. Див.також: обмеження, максимально ефективно використовувати (обмеження), підпорядкувати роботу (обмеження) Операційні витрати Операційні витрати (operating expense (OE)) - всі грошові кошти, які організація витрачає на досягнення мети (отримання «одиниць мети»). Перспектива: парадигма обліку проходу в рамках ТОС передбачає, що операційні витрати включають в себе заробітну плату персоналу, орендну плату, страхові виплати, а також інші витрати, які будуть понесені, навіть якщо діяльність на деякий час буде зупинена. Операційні витрати не включають в себе ті витрати, які змінюються в залежності від обсягу виробництва (наприклад, вартість сировини, комісійна винагорода і т.п.), тому що вони вважаються повністю змінним витратами. Див.також: глобальні показники, парадигма обліку проходу, повністю змінні витрати. Операційні показники Операційні показники (operational measurements) - такі показники, які правильно пов'язують вплив прийнятих рішень в рамках щоденної діяльності на глобальну ефективність. Застосування: парадигма обліку проходу в рамках ТОС передбачає, що глобальні показники ефективності (прохід, інвестиції та операційні витрати) також є ефективними операційними показниками. Це можливо тому, що локальні рішення, які надають позитивний вплив на прохід, інвестиції та / або операційні витрати, також будуть позитивно позначатися на чистому прибутку, рентабельності інвестицій і / або грошовому потоці. Див.також: глобальні показники, інвестиції, операційні витрати, прохід, парадигма обліку проходу. Звіт про стан буфера Звіт про стан буфера (buffer status report) - Періодичний звіт, що забезпечує знімок стану роботи в даному середовищі: кожен виробничий замовлення у виробництві на замовлення (MTO) Барабан-буфер-канат або Спрощений Барабан-буфер-канат, кожна одиниця складського обліку (артикул) у виробництві для забезпечення доступності (MTA), кожен проект або всі проекти в середовищі управління проектами. Застосування: У середовищі виробництва на замовлення з використанням інструменту Барабан-буфер-канат, звіт про стан буфера показує поточний стан кожного виробничого замовлення в буферах обмеження, збірки і відвантаження. У середовищі виробництва для забезпечення доступності, звіт про стан буфера описує стан буферів запасів сировини і незавершеного виробництва, а також описує статус готової продукції на центральному складі для виробника. Ця інформація використовується для визначення пріоритетів. У середовищі дистрибуції, звіт про стан буфера показує поточний стан всіх буферів запасів. В управлінні проектами по методу Критичною ланцюга, звіт про стан буфера надає дані про поточний стан ресурсу, що живлять і буферів проекту для кожного проекту. При побудові звіту про стан буфера, ключовим питанням є: скільки ще часу буде потрібно ресурсу для завершення поточного завдання? Ця інформація використовується для визначення проникнення буфера в контрольних точках проекту і системи. Див.також: статус буфера. Парадигма обліку витрат Парадигма обліку витрат (cost-world paradigm) - система переконань, в рамках якої виробнича система являє собою послідовність незалежних елементів, причому вартість системи вважається рівною сумі вартостей кожної окремої підсистеми. В даному випадку, увага акцентується на зниженні витрат і прийнятті рішень на основі даних про локальну ефективність. Розподіл витрат на одиницю зазвичай є способом оцінки локального значення. Застосування: парадигма обліку витрат передбачає, що глобальна ефективність - це сума локальних ефективностей. Перспектива: ця парадигма протистоїть парадигмі обліку проходу, де стверджується, що глобальне покращення - це НЕ сума локальних, і використання розподілу витрат на одиницю може сприяти прийняттю невірних рішень. Див. також: парадигма обліку проходу Парадигма обліку проходу Парадигма обліку проходу (throughput-world paradigm) - система переконань, в рамках якої система являє собою послідовність залежних змінних, які для досягнення мети повинні працювати спільно, але для здійснення цього їм заважає певний системне обмеження. Звідси - неминучий висновок: системні / глобальні поліпшення є безпосереднім результатом поліпшень, що стосуються обмеження, і розподіл витрат у такому випадку є непотрібним і оманливим процесом. Дана парадигма протистоїть парадигмі обліку витрат. Див.також: обмеження, парадигма обліку витрат. Паралельна вихідна умова Паралельна вихідна умова (parallel assumption) - фактор, який використовується при створенні стратегічних і тактичних дерев, який показує, чому важлива тактика і як вона призводить до досягнення стратегічних результатівю Застосування: паралельна вихідна посилка відповідає на наступні два питання: 1. Чому стратегія не може здійснитися сама собою (чому нам необхідно вживати заходів); 2. Чому ми можемо стверджувати, що обрана тактика призведе до реалізацї стратегії? Ці питання можуть також допомогти пояснити, чому дана конкретна тактика щодо здійснення обраної стратегії краще, ніж інші розглянуті альтернативи. Див.також: стратегічні і тактичні дерева. Рухливе пляшкове горло Рухливе пляшкове горло (wandering bottleneck) - небажане явище, в рамках якого пляшкове горлечко досить часто переміщається з одного ресурсу на інший. Застосування: рухливе пляшкове горло - не обмеження. Воно може виникати в тих ситуаціях, коли застосовуються великі розміри партій, або де транспортна партія дорівнює оброблюваної партії. Див.також: пляшкове горлечко, обмеження Перехідний логічний об'єкт Перехідний логічний об'єкт (transitional entity) - логічний об'єкт дерева поточної реальності, який часто є результатом конфлікту між логічними об'єктами D і D' кореневої хмари конфлікту. Перехідний логічний об'єкт спрощує логічний зв'язок між тим, як дерево поточної реальності (на основі якого і побудована корова хмара конфлікту) призводить до виникнення різних небажаних явищ. Застосування: перехідний логічний елемент часто є кореневої (ключовий) причиною або кореневим елементом для виникнення небажаних явищ, охарактеризованих в дереві поточної реальності. Див.також: логічний об'єкт Петля зворотного зв'язку Петля зворотного зв'язку (feedback loop) - сукупність взаємопов'язаних логічних причинно-наслідкових відносин, які викликають посилення (позитивна ОС) або ослаблення (негативна ОС) умов або поведінки в рамках системи. Застосування: на відміну від традиційного визначення зворотного зв'язку, де позитивний зворотний зв'язок створює самопосилюється ефект, а негативний зворотний зв'язок - самокорегуюча (балансування) ефект, ТОС визначає, що петля зворотного зв'язку може бути тільки підсилює (позитивної або негативної, в залежності від початкового імпульсу ). Зазвичай, негативні підсилюють петлі представлені тільки в тих системах, де є які-небудь проблеми, тоді як позитивні підсилюють петлі притаманні в добре працюючих системах. Загалом, зворотний зв'язок включає в себе як передачу, так і повернення інформації. Оскільки петлі зворотного зв'язку діють у всіх реально існуючих системах, важливо активно шукати їх для додавання в дерева поточної і майбутньої реальності. Ілюстрація: Я��що (10) Ми знизимо час пусконалагодження для підвищення ефективності, то (20) Ми будемо мати справу з більш великими партіями і групувати схожі деталі один з одним. Якщо (20) Ми будемо мати справу з більш великими партіями і групувати схожі деталі один з одним, то (30) Ми будемо відпускати матеріали, в яких поки не потребуємо. І якщо (30) Ми будемо відпускати матеріали, в яких поки не потребуємо, то (40) Ми знизимо запобіжну потужність верстата. Ми маємо причинно-наслідковий петлю між об'єктами 40 і 20, тому що зниження запобіжної потужності підсилює схильність до випуску партій більшого розміру, відпускати матеріали раніше, що буде також позначатися на зниженні запобіжної потужності в майбутньому Див.також: причина-наслідок, дерево поточної реальності, дерево майбутньої реальності. Живлячий буфер Живлячий буфер (feeding buffer) - запас часу, розміщений між етапом роботи поза критичним ланцюгом і етапом роботи в рамках критичного ланцюга. Мета його застосування - захист критичного ланцюга, захист проекту, від варіативності, яка властива роботі, що здійснюється не в рамках критичного ланцюга. Застосування: живлячий буфер допомагає визначити, коли необхідно почати роботу не в рамках критичної ланцюга. Див.також: управління буфером, критична ланцюг. План перетворень План перетворень (ПП) (transition tree (TRT)) - інструмент логічної достатності розумових процесів, який спрощує отримання відповіді на третє питання послідовності змін: як забезпечити зміни? План перетворень є детальну, покрокову послідовність дій, які необхідні для впровадження бажаних змін в організації. Застосування: пре створенні плану перетворень, використовується логічна достатність типу «якщо ..., то ...», щоб скласти детальну послідовність дій і їх описів, які будуть спрямовані на зрушення організації з її поточної реальності в бік бажаної майбутньої реальності, яка і вказана в дереві майбутньої реальності. Зокрема, план перетворень формується шляхом розширення складових дерева переходу в більш докладні набори потреб, поточних і майбутніх станів (очікуваних проміжних цілей), а також дій, які потрібні для подолання відповідних перешкод. Див.також: послідовність змін, як забезпечити зміни ?, проміжна мета, перешкода, дерево переходу, логічна достатність, розумові процеси. План роботи ресурсу-«барабана» План роботи ресурсу-«барабана» (drum schedule) - детально розпланований розклад операцій, що задає ритм роботи для всієї системи. Цей план повинен грунтуватися на ринковому попиті і межі потужності системного обмеження. Застосування: в процесі діяльності, план роботи ресурсу-«барабана» в поєднанні із застосуванням механізму «канат» дозволяє обмежити обсяг незавершеного виробництва, що, в свою чергу, знижує терміни виконання операцій і покращує показники діяльності. У багатопроектних структурах, де ведеться управління проектами за методом критичної ланцюга, план роботи ресурсу-барабана визначає передбачувані дати початку і закінчення проекту і, таким чином, задає темп роботи системи, визначаючи, скільки проектів система зможе виконати за певний проміжок часу. Див.також: управління проектами по методу критичної ланцюга, барабан-буфер-канат, ресурс-«барабан». Занурення Занурення (driving down (diving down, drilling down)) - процес пошуку невідомої причини виникнення одного або декількох логічних об'єктів. Застосування: застосування цього процесу часто необхідно в створенні дерева поточної реальності (старішого методу в порівнянні з методикою трьох хмар) або в задоволенні застереження щодо недостатності причини (однієї з категорій перевірки логічних побудов). Див.також: категоріїперевірки логічних побудов, застереження щодо недостатності причини, дерево поточної реальності, логічний об'єкт. Підхід консолідованої хмари Підхід консолідованої хмари (consolidated cloud approach) - створення єдиної Грозовий хмари з трьох хмар Небажаних явищ (НБЯ). Застосування: консолідована хмара пояснює існування трьох НБЯ, використовуваних для її створення. Підхід консолідованої хмари схожий з підходом Трьох хмар, але отримана консолідована хмара може не відображати кореневої конфлікт через вибору конкретних НБЯ, використовуваних для створення хмари. Коренева хмара, яка є результатом підходу Трьох хмар, як вважають, відображає кореневу проблему. Ретельний відбір різноманітних НЖЯ допомагає переконатися, що коренева проблема визначена вірно. Див.також: хмара кореневого конфлікту, коренева хмара, підхід трьох хмар, хмара НЖЯ. Підпорядкувати Підпорядкувати (роботу обмеженню) (subordinate) - ключове слово в третьому з п'яти напрямних кроків: підпорядкувати все інше з цим рішенням. Підпорядкування необхідно для того, щоб було забезпечено максимально ефективне використання обмеження. Підпорядкування характеризується двома основними складовими: 1. Всі ресурси, які не є обмеженнями, повинні управлятися таким чином, щоб обмеження завжди своєчасно одержувало те, що для нього потрібно; і 2. Всі ресурси, які не є обмеженнями, не повинні працювати більше, ніж від них вимагає обмеження.Ілюстрація: в разі, якщо є внутрішнє обмеження, ресурси, які не є обмеженнями, повинні ігнорувати такі аспекти, як локальна ефективність, і обробляти партії меншого розміру, щоб переконатися, що обмеження не простоює. Див.також: пляшкове горлечко, обмеження, п'ять напрямних кроків. Позитивна гілка Позитивна гілка (positive branch) - набір логічних об'єктів, об'єднаних причинно-наслідковим зв'язком, який представлений у вигляді гілки майбутньої реальності, де показується, як ін'єкція можуть призвести до виникнення бажаних явищ. Перспектива: позитивна гілка є протилежністю гілки поточної реальності (або негативної гілки). Див.також: гілка поточної реальності, бажані явища, логічний об'єкт, гілка майбутньої реальності, ін'єкція, негативна гілка, процес побудови негативної гілки, небажані явища. Політика, показники і поведінка Політика, показники і поведінка (ППП) (policies, measurements and behaviors (PMBs)) - ланцюг з трьох логічних об'єктів, де задокументовані причинно-наслідкові зв'язки між діючою в системі політикою, показниками діяльності і виникаючою у результаті організаційною поведінкою. Перспектива: досить часто застаріла або неефективна політика і пов'язані з нею показники діяльності стають причиною існування дисфункциональної поведінки всередині системи. Так як ця послідовність логічних об'єктів часто несе відповідальність за одне (або декілька) небажане явище, необхідно, щоб вона була задокументована в дереві поточної реальності організації. Приклад: на підставі вихідної посилки, що збільшення локальної ефективності є кращим, в компанії діє (неофіційна) політика, яка визначає необхідність постійної зайнятості робітників, так як вважається, що це знизить витрати на виробництво. Для цього використовуються показники локальної ефективності і використання ресурсів. В результаті, сформувалося організаційна поведінка, в рамках якого деталі раніше терміну відпускаються у виробництво, в результаті чого створюються такі небажані явища, як надмірні обсяги незавершеного виробництва і запаси готової продукції, невиконання термінів відвантаження, поганий грошовий потік і т.п. Див.також: причинно-наслідковий зв'язок, дерево поточної реальності, логічний об'єкт, небажані явища. Повністю змінні витрати Повністю змінні витрати (ПЗВ) Totally variable cost (TVC) - витрати, які змінюються відповідно до кожного збільшення вироблених одиниць продукції. Застосування: на більшості виробництв, основну частину повністю змінних витрат становить сировина. Комісійна винагорода, плата за послуги аутсорсингу по термообробці, порошкового фарбування і / або гальванізації також є прикладами повністю змінних витрат. Традиційно, на більшості виробництв витрати на оплату праці не є повністю змінними витратами. Величина повністю змінних витрат віднімається з виручки від продажів в рамках методики розрахунку проходу. Див.також: прохід. Поломка (breakage) Поломка (breakage) - в ТОС стан, при якому обмеження змушене простоювати, тому що ресурс зламався. Застосування: не обмеження, мають надлишкові виробничі потужності, так що їх поломки не є значною проблемою. Вплив на роботу поломки ресурсу, який не є обмеженням, знижується за рахунок повного використання обмеження і буферів простору і часу. Але поломка ресурсу-обмеження істотно впливає, оскільки вона зазвичай призводить до зменшення Проходу. Ось 3 джерела втрати на Проході при використанні підходу Барабан-буфер-канат: голодування, блокада і поломка обмеження. Див.також: блокада, буфер обмеження, буфер простору, голодування, буфер часу. Отримання загальної згоди Отримання загальної згоди (buy-in) - Строгий процес, що приводить групу до повної згоди з вирішенням проблеми. Процес призначений для подолання шарів опору. Кроки наступні:1. Отримати згоду про існування проблеми.2. Отримати згоду про направлення рішення проблеми.3. Отримати згоду, що дане рішення усуне цю проблему.4. Отримати згоду, що дане рішення не призведе до яких-небудь значних негативних наслідків.5. Отримати згоду, що необхідно подолати будь-які перешкоди на шляху змін, які можуть заблокувати або спотворити реалізацію рішення.6. Подолати невисловлені побоювання. Див.також: аналогія змін, шари опору, процес отримання згоди «мінус-мінус», процес отримання згоди «плюс-плюс». 2017-05-28 ### Послідовність змін (change sequence) Послідовність змін (change sequence)1. Один із трьох процесів постійного вдосконалення в Теорії обмежень. (Інші два процеси: П'ять фокусуючих кроків і Управління буфером). Три питання, на які необхідно відповісти для успішного управління змінами всередині системи. Послідовність змін дає відповіді на три питання: Що міняти? На що міняти? Як забезпечити зміни?**2. Останнім часом були додані два додаткових питання, на які необхідно відповісти для успішного управління змінами. Виправлена ​​послідовність змін включає в себе наступні п'ять питань: Чому потрібні зміни? Що міняти? На що міняти? Як забезпечити зміни? Як оцінювати і підтримувати зміни?** Синонім: питання послідовності змін. Див.також: процес безперервного поліпшення, що міняти ?, на що міняти ?, як забезпечити зміни ?, як підтримувати зміни ?, чому потрібні зміни? 2017-05-28 ### Побудувати \"Дерево стратегії і тактики\" Побудувати \"Дерево стратегії і тактики\" (building (S & T tree)) - Перший великий сегмент Дерева стратегії і тактики: знайти перевагу, визначити послідовність і здійснити дії по створенню вирішальної конкурентної переваги. Див.також: отримати вигоди (дерево стратегії і тактики), підтримувати (дерево стратегії і тактики), дерево стратегії і тактики. 2017-05-28 ### Побудувати, отримати і підтримувати Побудувати, отримати і підтримувати (build, capitalize and sustain) - група понять, яка використовується для 3-го рівня Дерева стратегії і тактики (S & T tree) в трансформації організації, що включає всі необхідні і достатні зміни до кращого: Побудувати вирішальну конкурентну перевагу, Отримати вигоду з вирішальнї конкурентної переваги, Підтримувати вирішальну конкурентну перевагу. Див.також: дерево стратегії і тактики. 2017-05-28 ### Споживання буфера (buffer consumption) Споживання буфера (buffer consumption) - це: - У виробництві на замовлення, Барабан-буфер-канат і Спрощений Барабан-буфер-канат - вичерпання часу з буфера часу (доставки, складання або буферів обмеження). - У виробництві для забезпечення наявності - вичерпання запасів з буфера запасів. В управління проектами за методом критичної ланцюга - накопичення часу відставання робіт на шляху. Наприклад, кількість днів, споживаних з яке живить буфера або буфера проекту. Застосування: Буфери простору поміщаються після обмеження для запобігання зупинки обмеження (внаслідок блокади). Поняття буфера простору прямо протилежно буферу запасів. У разі буфера запасів, споживаються запаси. У разі буфера простору, простір споживається запасами, і занадто багато запасів в буфері простору (тобто, буфер простору знаходиться в червоній зоні) означає, що обмеження майже заблоковано і його доведеться зупинити, якщо деталі не будуть оброблені в робочому центрі нижче за течією. Див.також: проникнення в буфер. 2017-05-28 ### Правило складання локальних значень Правило складання локальних значень (additive rule) - це правило говорить про те, що локальні значення наявних параметрів можуть бути складені разом для розрахунку глобального значення. Перспектива: Парадигма обліку витрат передбачає, що економія витрат в одному підрозділі підприємства може додаватися до економії витрат іншими підрозділами підприємства, з метою встановлення загального ефекту; таким чином, парадигма обліку витрат слід правилом додавання, вважаючи, що глобальне поліпшення - це сума локальних поліпшень. Парадигма обліку проходу (в рамках ТОС) передбачає, що прохід одного підрозділу компанії МОЖНА складати з проходом інших підрозділів з метою встановлення глобального проходу; таким чином, в обліку проходу не використовується правило складання локальних значень. Див.також: парадигма обліку витрат, парадигма обліку проходу. 2017-05-28 ### Правило трихвилинного яйця Правило трихвилинного яйця (three-minute egg rule) - вираз, яке застосовується до задачі, якій не властива варіація. З цієї причини, на її виконання витрачається все відведений для цього час, щоб вийшов своєчасний і якісний результат. Застосування: така ситуація є типовою для деяких завдань в проектних структурах. Наприклад, виробничі випробування тривалістю 1000 годин не можуть виконані, поки не пройдуть відведені 1000 годин. 2017-05-28 ### Пропозиція, від якої неможливо відмовитися Пропозиція, від якої неможливо відмовитися (unrefusable offer (URO)) або «пропозиція мафії» - засіб, що розробляється спільно маркетинговим відділом і відділом продажів, яке спрямоване на вирішення кореневої проблеми покупця і є взаємовигідним рішенням як для нього, так і для постачальника. Воно називається саме так, тому що покупцеві його важко відкинути (якщо пропозиція правильно складена). Див.також: коренева проблема 2017-05-28 ### Запобіжна потужність Запобіжна потужність (protective capacity) - потужність ресурсів, необхідна для того, щоб захистити прохід системи. Захист проходу організується шляхом забезпечення наявності певних потужностей понад ті, які необхідні для максимально ефективного використання обмеження, на випадок неминучого порушення порядку в системі. Ресурси, які не є обмеженнями, вимагають наявності запобіжної потужності для відновлення запасу ресурсів перед обмеженням (або ресурсом з обмеженою потужністю) або / або на складі відвантажуються виробів, перш ніж прохід буде знижений. Застосування: порушення порядку в системі є результатом таких речей, як нормальна варіація часу обробки, незаплановані зрушення графіка робіт, затримка поставок сировини / матеріалів і т.п. запобіжна потужність також називається «спринтерська потужність». Деякі вважають, що обмеження / ресурси з обмеженою потужністю також потребують запобіжної потужності, щоб «позитивні» непередбачені ситуації (у вигляді зростання попиту на товари / послуги) могла бути в короткий час дозволені. З цих же причин, запобіжна потужність також необхідна в многопроектной структурах: якщо в них недостатньо запобіжної потужності, то варіативність може істотно позначитися на виконанні завдань з критичної ланцюга в термін і, відповідно, своєчасному виконанні всього проекту. Брак запобіжної потужності може також стати причиною неможливості дотримання графіка роботи ресурса- «барабана». Див.також: ресурс з обмеженою потужністю, обмеження, критична ланцюг, план роботи ресурса- «барабана», максимально ефективно використовувати (обмеження), прохід. 2017-05-28 ### Перешкода Перешкода (obstacle) - що-небудь, що блокує наступ бажаної події або стану системи. Застосування: перешкоди зазвичай визначаються особою, що займається побудовою діаграми, коли нею розглядаються можливі обставини, які можуть перешкодити застосуванню ін'єкції для отримання бажаного результату або досягнення амбітної мети. Подолання перешкод вимагає ідентифікації та досягнення проміжної мети. Див.також: амбітна мета, бажане явище, ін'єкція, дерево переходу, проміжна мета, розумові процеси. 2017-05-29 ### «Принцип бігуна» (roadrunner work ethic) «Принцип бігуна» (roadrunner work ethic) - принципи роботи в механізмі Барабан-буфер-канат або управлінні проектами по методу критичної ланцюга. Ці правила такі: якщо є робота, беріться за неї негайно; якщо є більше одного замовлення / завдання в черзі, в першу чергу приступайте до виконання замовлення / завдання, у якого найвищий пріоритет; працюйте на максимальній швидкості без зупинок, поки робота не буде закінчена; не допускайте виникнення дефектів і здавайте роботи (передавайте на подальший виробничий етап) негайно; якщо роботи немає, чекайте. Перспектива: своєю назвою цей принцип завдячує популярному мультфільму, один з героїв якого (велика каліфорнійська зозуля на ім'я Road Runner) пересувався тільки з однією швидкістю - на максимальній швидкості наближався до своєї мети, досягнувши яку, повністю зупинявся. Див.також: «принцип естафети» 2017-05-29 ### «Принцип естафети» «Принцип естафети» (relay runner) - в управлінні проектами по методу критичної ланцюга, це - процес фокусування всіх зусиль на виконання завдання і негайної його передачі ресурсу, котрий чекає його і готовому до його прийняття. Застосування: в діяльності деяких організацій «принцип естафети» використовується поперемінно з «принципом бігуна. Синоніми: «принцип бігуна» Див.також: принцип бігуна 2017-05-29 ### Причина-наслідок Причина-наслідок (effect-cause) - зв'язок або відношення між логічними об'єктами, в яких існування одного (або більше) об'єкта є причиною існування іншого об'єкта (об'єктів). Причинно-наслідковий зв'язок встановлюється, якщо заявлений наслідок завжди існує, коли є присутнім зазначена причина (причини). Перспектива: на відміну від статистичної кореляції, причинно-наслідковий зв'язок є набагато більш сильним, спрямованим зв'язком між двома логічними об'єктами, ніж просто їх кореляція або асоціація один з одним.Приклад 1: Вербалізуємо наступну логічну схему: якщо «Причина», то «Слідство». Наприклад, якщо «На дворі йде дощ», то «Трава намокне». Приклад 2: Іноді для існування передбачуваного слідства необхідні дві або три причини. Вербалізуємо наступну логічну схему: Якщо «Причина 1» і «Причина 2», то «Слідство». Наприклад, якщо «Мій город отримує достатньо води», і «Мій город отримує достатньо сонячного світла», то 60 «Мої овочі добре ростуть». Див.також: слідство, логічний об'єкт, логічна діаграма, логічний «і» -поєднувач. 2017-05-29 ### Проблема PQ Проблема PQ (PQ problem) - простий виробничий приклад, в якому ілюструється вплив фінансових показників на процес прийняття рішень. В даному прикладі, компанія виробляє тільки 2 продукту, і попит перевищує виробничі можливості підприємства, так що є зовнішнє обмеження. Традиційні фінансові показники, які використовують одиницю продукції як одиницю розподілу (виручка від продажів, трудові витрати, валовий прибуток), характеризують, що продукт Q виробляти краще. Однак, якщо менеджмент буде покладатися на ці показники і заповнить ринок продуктом Q, то він понесе збитки; якщо ж вони зроблять вибір на користь продукту P, то вони отримають прибуток. Ця проблема показує, що неправильне визначення обмеження для його подальшого максимально ефективного використання може зробити істотний негативний вплив на фінансові результати діяльності. Див.також: обмеження, максимально ефективно використовувати (обмеження) 2017-05-29 ### Перевірка наявності альтернативної причини Перевірка наявності альтернативної причини (additional cause reservation) - застереження Третього рівня в класифікації Категорій перевірки логічних побудов. Ця обмовка використовується особою, уважно вивчають логічну діаграму достатності з метою зрозуміти, чи є розглянута причина (причини) досить підходящої, щоб в повній мірі розраховувати на виникнення даного слідства. Приклад: Як показано на першій діаграмі: «Якщо у моєї машини дуже висока витрата палива, то (20) я вважатиму за краще поїхати на роботу на автобусі». Особа, уважно вивчає даний факт, може також використовувати альтернативну причину як застереження: «(15) я люблю читати по дорозі на роботу» - і це також буде обґрунтованою застереженням для поїздки на автобусі. Другу діаграму можна описати таким чином: «Якщо (10) у моєї машини дуже висока витрата палива, або якщо (15) я люблю читати по дорозі на роботу, то (20) я вважатиму за краще поїхати на роботу на автобусі». 2017-05-29 ### Перевірка на предмет постановки під сумнів Перевірка на предмет постановки під сумнів (jeopardy) - один з трьох методів перевірки коректності складання грозової хмари. В рамках даного методу перевіряється - ставить логічний об'єкт D під сумнів умову, позначену в логічному об'єкті С, і аналогічно D '- B. Застосування: якщо об'єкти не ставлять один одного під сумнів, значить, словесний опис одного або двох об'єктів повинно бути змінено. Перспектива: в коректно складеної грозовий хмарі повинні виконуватися наступні дві умови: (1) логічні об'єкти D і D 'повинні конфліктувати між собою; (2) логічні об'єкти В і С не повинні конфліктувати між собою.Ілюстрація: чи ставить існування об'єкта «D - Збільшити ціну парових котлів компанії Pressure Steam» під сумнів об'єкт «Збільшити пропозицію запасних частин»? Так, ставить, тому що підвищення цін на котли зменшить обсяг їх продажів - тобто, меншу кількість використовуваних котлів потребуватимуть запасних частинах. Чи ставить існування об'єкта «D '- Зменшити ціну парових котлів компанії Pressure Steam» під сумнів об'єкт «В - Збільшити маржинальний прибуток від основної лінії продуктів»? Так, ставить, тому що при відсутності тенденцій до скорочення витрат, маржинальні прибутку скоротяться при зменшенні ціни. (Джерело: Е.М. Голдратт, «Справа не в везінні», 1994). Див.також: логічний об'єкт, грозова хмара 2017-05-29 ### Продуктивна виробнича потужність Продуктивна виробнича потужність (productive capacity) - потужність ресурсів, необхідна для виробництва тієї кількості продукції, яка задовольнить потребу обмеження. Перспектива: потужність ресурсів підрозділяється на три типи: продуктивна, запобіжна і надмірна. Тоді як багато хто вважає, що вся потужність, що перевершує продуктивну виробничу потужність, є марною її тратою, ТОС передбачає, що необхідно мати певну захисну потужність у ресурсів, які не є обмеженнями, щоб захистити прохід системи. Див.також: надмірна потужність, запобіжна потужність, марна трата 2017-05-29 ### Проміжна мета (ПМ) Проміжна мета (ПМ) (intermediate objectve (IO)) - проміжний стан (або етап), яке необхідно досягти перед тим, як буде досягнута головна мета. Проміжні цілі зазвичай з'являються в логічних об'єктах в плані перетворень і дереві переходу, де вони асоціюються з перешкодами, які необхідно подолати, перед тим, як буде досягнута мета. Див.також: логічний об'єкт, мета, перешкода, план перетворень, дерево переходу. 2017-05-29 ### Проникнення (в буфер) Проникнення (в буфер) (penetration (of the buffer)) - термін, який використовується в управлінні проектами по методу критичного ланцюга, коли завдання або ланцюг завдань не виконано до кінця, а загальний витрачений час перевищує (загально) відведений час. Коли це відбувається, то прогнозований обсяг часу на завершення завдання / проекту розширюється за рахунок буферу, \"проникаючи\" в даний буфер. Застосування: проникнення в жовту зону викликає те, що менеджер буфера розслідує причини виникнення такої ситуації і, якщо необхідно, складе план заходів. Якщо проникнення досягне червоної зони, то дане замовлення ставиться в початок черги на кожному етапі обробки. Якщо потрібно, менеджмент застосовує процедуру експедиції (прискорення).В управлінні проектами по методу критичної ланцюга, показник «швидкість споживання буфера» використовується для того, щоб оцінювати, наскільки проникнення в буфер серйозне і яких треба вжити заходів. Див.також: буфер, швидкість споживання буфера, управління буфером, управління проектами за методом критичної ланцюга, діра (в буфері), червона зона, жовта зона. 2017-05-29 ### Потужність, що простоює Потужність, що простоює (idle capacity) - доступна потужність, наявна у ресурсу-обмеження і перевищує ту потужність, яка необхідна для забезпечення роботи обмеження. Потужності, що простоюють ділиться на дві складові - надмірна потужність і запобіжна потужність. Перспектива: дехто вважає, що будьяка потужність, що просоює є надмірною потужністю - марною тратою, яка повинна бути усунена. Однак в системі, де є залежні події і статистичні відхилення, потрібна наявність потужностей, що простоюють, щоб підстрахувати прохід системи. ТОС визначає, що ця необхідна потужність є запобіжної потужністю. Застосування: при застосуванні ТОС у виробництві і управлінні проектами, запобіжна потужність повинна підтримуватися всіма ресурсами, які не є обмеженнями. Збільшення запобіжної потужності дозволяє системі зменшити розмір буферів (зменшити, таким чином, час виконання замовлення / роботи системою) і забезпечити більш точне дотримання термінів робіт. Зменшення рівня варіативності в системі знижує необхідність в запобіжної потужності. Див.також: потужність, надмірна потужність, продуктивна виробнича потужність, запобіжна потужність. 2017-06-02 ### Прохід (П) Прохід (П) (throughput (T)) - швидкість, з якою системи генерує так звані «одиниці мети». У зв'язку з тим, що прохід завжди виражається за певний період часу (за місяць, за тиждень, за день або навіть за хвилину). Якщо «одиницями мети» є гроші, то проходом буде кількість грошей за певний період часу. В цьому випадку прохід розраховується як різниця між отриманою виручкою і всіма змінними витратами, поділена на обраний період часу.Ілюстрація: припустимо, що компанія виробляє тільки один продукт, продає його за ціною $ 100, причому повністю змінні витрати складають $ 35 за штуку. Якщо в тиждень компанія виробляє 500 штук, але продає тільки 450, прохід буде $ 29,250 в тиждень ((100-35) x 450). ПРИМІТКА: вироблений, але не проданий товар не генерує прохід - він лише збільшує величину запасів. Дивись: запаси, прохід, повністю змінні витрати. 2017-05-29 ### Прохід на одиницю обмеження Прохід на одиницю обмеження (П / ОО) (throughput per constraint unit (T / CU)) - коефіцієнт, який кількісно виражає швидкість, з якою певний продукт, в разі його продажу, буде сприяти збільшенню проходу компанії. Даний показник розраховується як різниця між продажною ціною одиниці продукції та повністю змінними витратами на одиницю даної продукції, поділена на спожиту потужність обмеження системи, виражену у відповідних одиницях виміру. Застосування: даний коефіцієнт найбільш часто використовується для того, щоб визначити вплив прийнятого рішення щодо того, як можливі зміни в асортименті продукції позначаться на величині проходу компанії. Цей показник також використовується для кількісного вираження реальної «вартості» простою обмеження системи. Запобіжні заходи: 1. Даний показник ні в якому разі не можна використовувати окремо. Перш, ніж приймати остаточне рішення, рекомендується завжди розраховувати вплив, який будь-яка зміна в асортименті продукції надасть на прохід, інвестиції та / або операційні витрати. 2. Цей показник не можна використовувати для прийняття рішень щодо асортименту продукції, якщо відсутне активне обмеження потужності. Цей показник не можна використовувати для прийняття рішень щодо асортименту продукції, коли в системі є взаємодіючі обмеження; в таких випадках, прийняття рішення повинно ґрунтуватися на загальні тенденції розвитку в показниках проходу, інвестицій та/або операційних витрат системи.3. Коли у ресурсів, які не є обмеженнями, є недостатня запобіжна потужність, зміна асортименту продукції на основі розрахунку проходу на одиницю обмеження може викликати зрушення обмеження, і, таким чином, аналіз за показником проходу на одиницю обмеження буде визнаний недійсним.Походження: показник проходу на одиницю обмеження походить з економічного принципу, відомого як закон оптимального розподілу дефіцитних ресурсів. Цей принцип говорить: «Дефіцитний ресурс найкраще використовувати для виробництва і продажу тієї продукції, яка приносить максимальну маржинальний прибуток на одиницю дефіцитного ресурсу». Одиниця дефіцитного ресурсу (або потужності ресурсу-обмеження), найчастіше представляє собою час обробки виробу на ресурсі з обмеженою потужністю, але також може бути одиницею складського простору (якщо дефіцитним ресурсом є полочная площа, що часто властиво рітейлерам), і т.п. Приклад: якщо одиницею ресурсу-обмеження є хвилини, і для обробки продукту, який продається за $ 55 і повністю змінні витрати якого складають $ 30, потрібно 2 хвилини роботи обмеження, то показник проходу на одиницю обмеження буде дорівнює: T / CU = $ 12.50 / хв. ((55-30) / 2). Див.також: ресурс з обмеженою потужністю, обмеження, інвестиції, операційні витрати, прохід, повністю змінні витрати. 2017-05-29 ### Процес безперервного поліпшення Процес безперервного поліпшення (ПБП) (process of ongoing improvement (POOGI)). Синоніми: п'ять напрямних кроків Див.також: п'ять напрямних кроків, послідовність змін 2017-05-29 ### Процес побудови негативної гілки Процес побудови негативної гілки (negative branch reservation process) - спосіб, який використовує логічну достатність, щоб показати, що запровадження такої ін'єкції може стати причиною виникнення одного або декількох небажаних явищ. Застосування: процес побудови негативної гілки включає в себе побудову однієї або декількох гілок майбутньої реальності. Див.також: негативна гілка 2017-05-29 ### Марна трата Марна трата (waste) - все, що не приносить внесок в досягнення мети. 2017-05-29 ### П'ять фокусуючих кроків П'ять фокусуючих кроків (five focusing steps) - системний 5-етапний підхід для процесу безперервного поліпшення здатності системи досягати поставленої мети. 1. Визначити обмеження системи. 2. Вирішити, як максимально використати обмеження системи. 3. Підпорядкувати все інше з цим рішенням. 4. Розширити обмеження системи. 5. УВАГА!!! Якщо за попередні 4 кроки обмеження усунуто, повернутися до кроку 1, але не дозволити інерції привести до виникнення обмеження системи. Див.також: процес безперервного поліпшення. 2017-05-29 ### Передчасне завершення робіт, про який не було оголошено Передчасне завершення робіт, про який не було оголошено (unreported early finishes) - практика замовчування про те, що завдання виконано раніше встановленого терміну. В основі цієї практики лежить думка про те, що оголошення про завчасне завершення робіт може стати причиною негативних побічних явищ.**Ілюстрація: найбільш загальним негативним побічним явище оголошення про ранньому завершенні робіт є те, що керівник в майбутньому буде вимагати виконання аналогічних завдань за новий, коротший проміжок часу. Або ж інше явище: працівник може втратити довіру начальника з огляду на те, що останній вважатиме спочатку встановлений час невірним і, з цієї причини, буде вважати, що працівник не є достатньо кваліфікованим. З цих причин, працівники часто не оголошують про ранньне завершення робіт. Розподіл витрат Розподіл витрат (cost allocation) - в традиційному обліку витрат постійні витрати розподіляються між продуктами за допомогою витратних складових, таких як прямі витрати на оплату праці або машино-години. Результатом є собівартість продукту, що складається з витрат на матеріали, прямих витрат на оплату праці і розподілу накладних витрат. Розширити (обмеження) Розширити (обмеження) (elevate) - ключове слово в четвертому з п'яти напрямних кроків: розширити обмеження системи. «Розширити» означає вжити заходів, які не сприятимуть максимальному використанню обмеження і / або будуть підпорядковані його роботі. Результатом таких дій має бути більш успішне досягнення мети організації. Дії по розширенню обмеження зазвичай вимагають інвестицій або аутсорсингу. Ілюстрація: в книзі «Мета» (Е. Голдратт, 1984 г.), верстат NCX 10 не міг виробляти достатньо продукції для задоволення ринкового попиту. Компанією UNICO робилися різні дії по максимально ефективному використанню цього верстата і підпорядкування всієї роботи заводу до ритму роботи NCX 10. Проте, компанії все ще не вдавалося задовольнити ринковий попит. Розширення ресурсу-обмеження було здійснено шляхом додавання старого, нехай і менш ефективного, обладнання, яке могло виконувати ті ж функції, що і NCX 10. Див.також: максимально використовувати, п'ять напрямних кроків, підпорядкувати (роботу обмеження) Рентабельність інвестицій (РІ) Рентабельність інвестицій (РІ) (return on investment (ROI)) - відносний показник фінансового стану, що представляє собою засіб порівняння різних варіантів інвестування, шляхом розрахунку прибутку, отриманої за певний період часу. ТОС передбачає, що рентабельність інвестицій розраховується як різниця проходу і операційних витрат, поділена на інвестиції. Див.також: інвестиції, операційні витрати, прохід. Ресурс-«барабан» Ресурс-«барабан» (drum resource) Використовуваний в діяльності ресурс (звичайно, є обмеженням системи або ресурсом з обмеженою потужністю), який задає ритм роботи для всієї системи;Ресурс в багатопроектній структурі, який більшою мірою обмежує здатність системи виконувати більше проектів, або ж, якщо відсутній певний максимально завантажений ресурс, то ним буде той ресурс, який розподіляє проекти. Див.також: управління проектами по методу критичної ланцюга, барабан-буфер-канат, план роботи ресурсу-барабана. Ресурс «пляшкове горло» Ресурс «пляшкове горло» (bottleneck resource) - будь-який ресурс, чия потужність менше або дорівнює необхідної від нього, за певний період часу. Застосування: Часто цей термін плутають або некоректно застосовують замість схожих термінів - ресурс з обмеженою потужністю, ресурс-«барабан» і / або обмеження. Часто політики (політика розміру партій, політика відповідності розміру виробничої і передавальної партії, управління для підвищення ефективності, синдром кінця місяця і т.д.) породжують ресурси, які можуть бути неправильно діагностовано як ресурси «пляшкове горлечко». Після того, як такі політики будуть усунуті за допомогою кроків 2 і 3 з П'яти фокусирующих кроків і замінені ефективними політиками, що підтримують Барабан-буфер-канат або Спрощений Барабан-буфер-канат, виявляється, що ці ресурси мають достатні потужності, і обмеженням стає ринок. Див.також: ресурс з обмеженою потужністю, обмеження, ресурс-«барабан», що взаємодіє обмеження, що переміщається пляшкове горлечко. Ресурс, який не є пляшковим горлом Ресурс, який не є пляшковим горлом (non-bottleneck resource) - будь-який ресурс, чия потужність перевершує поточну потребу в ній. Застосування: ТОС передбачає, що забезпечення необхідної запобіжної потужності для ресурсів, які не є пляшковим горлечком, необхідно для того, щоб забезпечити захист проходу.**Дивись: ресурс типу «пляшкове горлечко», запобіжна потужність, прохід Ресурсний буфер Ресурсний буфер (resource buffer) - механізм оповіщення в однопроектной середовищі, використовуваний для того, щоб забезпечувати доступність ресурсів, використовуваних для роботи в критичній ланцюга, коли це необхідно. Застосування: розмір ресурсного буфера визначається виходячи з необхідного рівня сповіщень, що діє в системі. Ресурсний буфер не тільки запобігає виникненню затримок в критичній ланцюга, які виникають у разі, якщо ресурс не доступний в потрібний час, але і збільшують шанси отримання переваг від раннього виконання робіт. Ресурсні буфери не додають часу до часу виконання проекту.**Дивись: критична ланцюг Ресурс з обмеженою потужністю (РОП) Ресурс з обмеженою потужністю (РОМ) (capacity constrained resource (CCR)) - будь-який ресурс, який (якщо його потужності неефективно управляються) негативно впливає на величину проходу організації.Ілюстрація: у виробничому ланцюжку є 5 ресурсів (від А до Е), із зазначенням їх потужностей. Ресурс D мінімальний з коливанням в обсязі випуску виробів, і якщо не керувати ним ретельно, то обсяги випуску продукції впадуть, попит не буде задов��лений і прохід зменшиться. Таким чином, D - це ресурс з обмеженою потужністю. Синонім: capacity-constraint resource. Див.також: обмеження, прохід. Ринкове обмеження Ринкове обмеження (market constraint) - стан, в якому ринковий попит менше можливостей організації з виготовлення товарів / надання послуг. Недостатній споживчий попит є обмеженням для компанії. Див.також: обмеження. Збалансований завод Збалансований завод (balanced plant) - завод, в якому потужності всіх ресурсів дорівнюють заданим рівнем виробництва.**Перспектива: Ідеальним для традиційного виробництва є збалансований завод, де потужності всіх робочих центрів рівні попиту (мінімізація витрат). Для бережливого виробництва (Lean) ідеальним є збалансований завод, потужності якого рівні добовому попиту. У Теорії обмежень всі робочі центри структуровані, щоб збалансувати потік, а не потужності. Вільний продукт Вільний продукт (free product) - продукт, обробка деталей якого не вимагає витрат часу роботи ресурсу-обмеження.**Застосування: коли у виробничій системі є діючий ресурс-обмеження, будь-яка деталь, що обробляється ресурсом-обмеженням, обробляється з «вартістю» будь-якого іншого продукту, який міг би бути оброблений. Продукти, на обробку яких не витрачається час роботи ресурсу-обмеження, виготовляються без цих альтернативних витрат ( «вартості»), і тому називаються «вільними». Дивись: обмеження. Синдром X-Y Синдром X-Y (X-Y syndrome) - проблема, часто виникає, коли ТОС застосовується лише локально, не суцільно. Сутність даної проблеми - боротьба між двома функціональними областями організації, яка може привести до стагнації / повного усунення ТОС замість її максимально успішного впровадження в одній з функціональних областейПриклад: впровадження ТОС для підрозділі / функції «Х» (найчастіше, застосування ТОС в діяльності шляхом впровадження механізму барабан-буфер-канат) має два наслідки: 1. Воно змінює людей підрозділи / функції «Х», в результаті чого вони приймають парадигму обліку проходу; і 2. Як тільки підрозділ / функція «Х» проходить через п'ять напрямних кроків, поліпшення стають настільки суттєвими, що обмеження зміщується в інше місце - припустимо, в підрозділ / функцію «Y» (найчастіше, відділ продажів, відділ дистрибуції або відділ розробки продукції). Тобто, «Х» змушує «Y» почати процес поліпшення своєї діяльності з використанням ТОС проте «Y» опирається цьому, так як до сих пір керується принципами в рамках парадигми обліку витрат. Зазвичай «Y» перемагає в цій боротьбі, тому що і залишилися підрозділи організації так само дотримуються парадигми обліку витрат. В результаті, ТОС не поширюється на всю організацію, і вона може повністю усунутися, якщо ключовий співробітник підрозділу, який ініціював впровадження ТОС, здасться і покине компанію.Перспектива: щоб уникнути синдрому X-Y, ТОС необхідно впроваджувати цілісно. Дивись: парадигма обліку витрат, парадигма обліку проходу, цілісний підхід. Синдром студента Синдром студента (student syndrome) - ситуація, в якій виконання завдання не розпочато (навіть коли пройшла прогнозована раніше дата початку цього завдання), тому що до часу завершення завдання, як може здатися, ще дуже багато часу. Цей феномен названий саме так, тому що така манера поведінки властива багатьом студентам.Перспектива: така поведінка зводить нанівець всі запобіжні заходи для даного завдання. Така поведінка передбачає, що особа розраховує на той факт, що в традиційних проектних структурах завдання (навіть якщо вони містять в собі страхувальне час) рідко закінчуються раніше встановленого терміну, часто - практично в строк, і практично завжди - з перевищенням відведеного терміну.Застосування: зазвичай, виникають інші проблеми, вирішення яких здається більш важливим. Це призводить до того, що ресурси (робочі станції) запізнюються зі своєчасним початком або закінченням роботи/завдання. У міру наближення терміну закінчення роботи, витрачається все більше сил на те, щоб закінчити виконання вчасно, однак будь-яка виникає варіативність може стати причиною невиконання проекту у відведений термін. Синдром студента - один з тих варіантів поведінки, що управління проектами за методом критичної ланцюга намагається усунути.Дивись: управління проектами по методу критичної ланцюга. Синхронізований ланцюг поставок Синхронізований ланцюг поставок (synchronized supply chain) - ланцюг поставок, в якому кожна ланка направляє всі необхідні ресурси (і тільки необхідні ресурси) для захисту і підтримки на належному рівні проходу системи. Синхронізоване виробництво Синхронізоване виробництво (synchronized production) Див.також: барабан-буфер-канат. Швидкість споживання буфера Швидкість споживання буфера (buffer burn rate) - показник загальної швидкості, з якою буфер проекту споживається на сьогоднішній день. Це другий з трьох показників для управління буфером в галузі управління проектами за методом критичної ланцюга в одно- і багато-проектних середовищах. Перший показник статусу проекту - це відсоток завершення критичної ланцюга; третій показник - рівень споживання буфера проекту.Швидкість споживання буфера = відсоток споживання буфера проекту / відсоток завершення критичного ланцюга.**Застосування: Швидкість споживання буфера використовується для відповіді на питання: чи задовільний загальний прогрес проекту? Який поточний статус проекту? Доброю вважається швидкість споживання буфера 1,0 або менше. Приклад: Три показники прогресу (ходу) проекту проілюстровані на приведених нижче графіках, які показують проект з 6-тижневої довжиною критичної ланцюга (завдання на критичному ланцюгу виділені жирними червоними лініями). Кожне завдання в проекті займає один тиждень. Першим показником прогресу проекту є відсоток завершення критичного ланцюга. Через 3 тижні, дві з шести найважливіших завдань критичного ланцюга (зафарбовані завдання на критичному ланцюзі) або 33% (2 тижні / 6 тижнів) були завершені. Це добре чи погано? Щоб відповісти на це питання, потрібно проаналізувати другий і третій показники. Припустимо, що всі завдання, за винятком завдання X, виконані і ресурс застряг на цьому завданні. Другий показник прогресу проекту - швидкість споживання буфера, який в кінці 3-го тижня дорівнює 33% / 33%, або 1,0. Одна третина буфера проекту була спожита, в той час як третя частина критичного ланцюга була завершена. На даний момент немає ніяких проблем в проекті, так як швидкість споживання буфера дорівнює швидкості споживання критичного ланцюга. Мал. 1 Другий графік показує стан того ж проекту в кінці 4-го тижня. Ресурс все ще застряг на завданні X. На даний момент було спожито 67% буфера проекту, в той час як були завершені всі ті ж 33% робіт по критичному ланцюгу. Швидкість споживання буфера зараз дорівнює 67% / 33% або 2,0. Це одна з ознак того, що проект знаходиться в біді. Мал. 2 Третій показник прогресу проекту, рівень споживання буфера проекту, показує, що проект споживає буфер в розмірі одного тижня за кожен тиждень роботи. Ідеальний рівень споживання: з кожних трьох періодів часу, два повинні бути завершеними завданнями на критичній ланцюга і один періодом споживання буфера проекту. Так як за четвертий тиждень жодна нова задача на критичній кола не була завершена, в той час як з буфера "},"kraud.html":{"url":"kraud.html","title":"7 Crowdsoucing","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" В березні 2016 року в журналі Forbes була опублікована стаття про результати дослідження проведеного компанією Deloitte серед 7000 компаній з біль ніж 130 країн світу . Виявилося ,що темою номер один для компаній є питання «як оптимізувати організаційну структуру та бізнес процеси в середині підприємства» , щоб бути адекватними сьогоднішньому бізнес клімату. Висновки майже річного дослідження показують , що має місце перехід від традиційної , ієрархічної організаційної структури до того ,що Deloitte називають «сузір’ям команд». Нова модель спонукає до мобільності, підкреслює важливість розвитку навичок та навчання як ключів до ефективності, змінює підхід до постановки цілей та мотивації людей, роль лідерів. 92 проценти компаній опитаних Deloitte, називають фундаментальні зміни у відношенні до роботи ключовим трендом на цей рік. В ході дослідження виявлено 4 ключа до успіху у новій організаційній моделі: Загально прийняті для працівників цінності та культура Прозорі цілі та проекти Зворотній зв’язок та вільний потік інформації Заохочення людей на основі навиків та реального вкладу, а не виходячи лише з займаної посади.Саме ці 4-ри принципи я намагатимусь мати за основу далі обгрунтовуючи необхідність проекту, описуючи кроки по розробці та впровадженню оптимізацій. Оптимізація , в чому ж полягає зміст цього слова. За словником, у загальному випадку це є найкращий (оптимальний) вибір варіанта з якоїсь обмеженої кількості можливих. Тобто у нашому випадку досягнення заданого результату , виконання виробничих планів по проектам, при мінімальних затратах ресурсів.Моя посада не дає доступу до статистик загальних витрат на виробництво, але з літератури відомо, що в машинобудуванні частина матеріальних затрат в загальній структурі витрат на виробництво та реалізацію продукції сягає до 80% також відомі і основні резерви зниження затрат, що за джерелами виникнення належать до однієї з двох груп: перша група виникає в результаті розвитку науково-технічного прогресу, друга група пов’язана з більш повним використанням існуючих можливостей підприємства. В основному резерви, що я пропоную віднаходити належатимуть до другої групи.Головні напрямки пошуку резервів, на мою думку, мають співпадати з групами матеріальних витрат: Основні та допоміжні матеріалиПокупні вироби та сторонні послугиЕнергія на технологічні ціліОпрацювання відходівТранспортні витрати За цими напрямками я пропоную організувати на сайті підтримки проеку \"ТребаТак\" теми по оптимізації на основі існуючих відділів та підрозділів. Як, мова піде далі. Також велику увагу треба приділити ресурсу, що зветься час. Він знаходиться у знаменнику формули розрахунку продуктивності роботи і людей і технічних засобів, та чисельнику в розрахунку ефективності майбутніх змін. Час не відновлюваний ресурс необхідний для розвитку особистості. Якщо звільнити людину від рутинних операцій завдяки їх автоматизації, з’явиться час на творче осмислення оточуючих працівника процесів. Та позитивно вплине на якість продукції, зокрема, якщо це ,наприклад, QS, що в результаті отримає просто більше часу на безпосередню перевірку продукції замість заповнення сигнальних листків написання різної звітностіНа питання де ж шукати ресурси, у загальному, відповідь є, тепер перейду до не менш важливого – як це зробити. Для початку розглянемо терміни : Mass collaboration та crowdsourcing . В англійськомовній вікіпедії їх роз’яснюють наступним чином: «Mass collaboration – масове співробітництво – форма колективної дії , що виникає, коли велика кількість людей незалежно працює над одним проектом, часто модульним за архітектурою. Такі проекти зазвичай проходять в інтернет мережі з використанням соціального програмного забезпечення чи інших засобів підтримки колективної роботи...». Crowdsourcing – передача певних виробничих функцій колу осіб на підставі публічної оферти без укладання трудового договору. І далі з вікі «краудсорсинг виник з розрахунку на передбачуване бажання споживачів безкоштовно, або за не велику ціну поділитися своїми ідеями з компанією виключно через бажання побачити ці ідеї втіленими у виробництві» У нашому випадку місце абстрактного кола споживачів займає конкретний багатотисячний колектив підприємства. Працівники, природньо, зацікавлені в покращені умов праці, переймаються рівнем власної зарплатні і зовсім не уявно залежать від внутрішньої політики підприємства.Узагальнивши можна сказати, що в основі цих феноменів лежить можливість залучення широких мас до безпосередньої участі в колективній творчості та прийнятті рішень. Мотивація до участі та власне ініціатива по започаткуванню проектів спрямованих на оптимізацію виробництва за принципами краудсорсинга багато сильніша ніж альтруїзм чи задоволення. Вона заснована на самореалізації лідерстві, повазі з боку колег, бажанні покращити умови власної роботи та просто більше заробляти. Краще всього така форма пошуку та реалізації прихованих резервів буде працювати при дотриманні 6-ти умов: Об’єктом роботи є інформація, що зменшує витрати на учать. Завдання мають бути розбиті на окремі прості процедури підтримані дружнім інтерфейсом, має бути зручно працювати над ними не залежно від інших. Тут важливо зробити затрати часу та енергії мінімальними порівняно з перевагами, що учасник отримає натомість. Загальні витрати на керування учаcниками краудсорсингового проекту мають бути низькими. Спільна робота повинна передбачати дієву систему оцінки учасників, наявність лідерів, що здатні направляти обговорення теми та інтегрувати нерівнозначні вклади учасників. Повинні бути розроблені правила для співпраці, послідовності кроків в шаблонних ситуаціях, визначені способи мотивації колективних дій на протязі довгого періоду часу. Чітка, математично обґрунтована модель аналізу пропозиції чи проекту на предмет економічної доцільності та пріоритетності. Визначення отриманої вигоди від впроваджень з максимальною точністю, для подальшого задіяння отриманих сум у фінансуванні інших інновацій.Іншим напрямком краудсорсингу, що є логічним продовженням ідеї колективної мережевої діяльності це пошук талановитих людей в середині підприємства – краудстафінг.На мою думку, пані та панове, цей метод пошуку та реалізації прихованих резервів, може мати успіх, перераховані пункти повністю відповідають Делойтівським порадам для сучасних господарників з початку презентації. Дозволю собі їх нагадати: Загально прийняті для працівників цінності та культура Прозорі цілі та проекти Зворотній зв’язок та вільний потік інформації Заохочення людей на основі навиків та реального вкладу, а не виходячи лише з займаної посади.Також мудрість народу коротко і ємко підтверджує перевагу колективної діяльності. (в заголовку слайду).Послідовність етапів при реалізації проектів представлена на слайді. Формат та зміст цих етапів має бути розробленим з урахуванням особливостей нашого виробництва та урахуванням досвіду подібних проектів.Хоча краудсорсинг досить молодий метод організації колективної діяльності, прикладів застосування можна знайти багато, від банківської сфери до пошуку злочинців. Великий об’єм інформації у доступній (не англомовній) формі, в основному приклади та досвід організаторів, учасників таких проектів, можна знайти в книзі Дона Тапскота та Ентоні Уільямса «Як масова співпраця змінює все». Ця книга обов’язкова для читання для всіх хто цікавиться інформаційними технологіями і краудсорсингом зокрема. Є вже і нова книга цих авторів “Macrowikinomics: Rebooting Business and the World”. Також в публікаціях російських авторів можна знайти багато цікавого, корисного.Одна людина може дати обмежену кількість ідей, краудсорсинг як механізм, реалізації колективного розуму, може забезпечити підприємство необмеженою їх кількістю. Але слід пам’ятати, що Ідеї стають Рішеннями тільки якщо вони впроваджуються. Важливо не тільки згенерувати ідею, а реалізувати її отримавши від неї реальний зиск у вигляді економії робочого часу чи ресурсів. Тому особливо чітко мають бути розроблені, поряд з іншими, механізми відбору та впровадження.З урахуванням сучасного стану технологій генерації ідей можна прогнозувати, що використання краудсорсингу в найближчому часі стане справою звичайною для будь-якої організації. "},"Socіalniy-BPM.html":{"url":"Socіalniy-BPM.html","title":"7.1 Соціальний BPM","keywords":"","body":"Моделювання бізнес-процесів справа доволі складна, потребу вивчення нотацї BPM, володіння інструментаріє вибраної BPMS системи, володіння теоретичними основами сучасного процесу прийняття рішень, аналізувати та моделювати бізнес-процеси, тому в їх розробку повинні залучатися професіонали. Але це не означає, що залучати слід тільки професіоналів. Живий бізнес вимагає взаємодії між широким колом людей з різними навичками, і, отже, того ж вимагає розробка процесів. Це місце, де нове покоління спільних засобів розробки процесів буде якраз до речі. Не потрібно, щоб сотні і тисячі людей були залучені в процеси створення бізнесу, але буде добре, щоб кожен безпосередній учасник був залучений до створення процесу. Залучення безпосередніх учасників до розробки процесу не тільки поліпшить процес, але і поліпшить усвідомлення і прийняття процесу. Для підтримки цього підходу, середовище спільної розробки, як правило, повинна забезпечувати наступні можливості: дружній інтерфейс користувача, який будь-хто може використовувати з обмеженим навчанням або без навчання репозиторій, як гарантія єдиного джерела істини проста у використанні середовище розробки для людей, які цим займаються в основі повинні бути визнані процесні нотації та методології процеси повинні відповідати цілям можливість подання процесів в різних форматах, щоб задовольняти потреби різних користувачів простота коментування діаграм і ініціювання запитів на зміну проста аналітика, щоб люди могли запитати «що якщо» вбудовані керуючі процеси для управління змінами процесу, рішенням про готовність і випуском релізу вбудовані панелі управління, щоб люди могли бачити актуальну інформацію про поточний стан процесу засоби розробки процесу спільна соціальна робота, щоб люди могли обмінюватися думками і коментарями про процесі підтримка різних мобільних платформ (слідкуйте за вашими процесами у вашому iPad-е) "},"Elektronna-uchast.html":{"url":"Elektronna-uchast.html","title":"7.2 Електронна участь","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Планування, моделювання бізнес-прцесів на основі електронної участі, є важливою сферою застосування для онлайн-аргументації. У цих процесах колеги, котрих стосуєються майбутні рішення, запрошуються до участі в процесі їх прийняття, мають змогу пропонуваті зміни і обговорювати їх зі своїми колегами чі однодумцями. Результати обговорення, тобто, пропозиції та аргументи, буде врахоно в кінцевому рішені. Електронна участь є складною областю застосування онлайн-аргументації, оскільки учасники можуть бути експертами в проблемній області, але вони не завжди є експертами в аргументації. Крім того, вони часто можуть бути зацікавлені в резуьтатах обговорення. Тому, як правило, є бажання висловити свою точку зору, а не брати участь в доказовій дискусії. Крім того, число індивідуальних внесків може бути дуже великим у цьому процесі, в той час як наявні ресурси плтформи проведенн дискусій, часто, досить обмежені. Часто не є можливим залучити до процесу експертів з аргументації, з тим щоб вони могли прийняти пропозіції учасників і потім відповідним чином структурувати отриману інормацію. Водночас, результат онлайн-аргументації не є остаточним результатом процесу Електронної участі. Замість цього він приймається в якості суми ргументів тими, хто в кінцевому підсумку приймає рішення, наприклад обраними менеджерми віповіальними за виробничий процес, комнди оптимізації бізнес-процесів, тощо. Таким чином, є рівні вище онлайн аргументації, що здатний інтерпретувати і зважувати окремі пропозиції і аргументи. Тому немає необхідності в тому, щоб онлайн-аргументація в процесах електронної участі призводила до певного кінцеового висновку, такого як консенсус або будь-яка інша форма рішення. Замість цього добре структурований набір пропозицій і (взаємопов'язаних) аргументів є цілком прийнятним результатом. До цих пір онлайн-аргументація в процесі електронної участі в основному спирається на Форумні системи. Це призводить до добре відомих проблем, таких як обмежена масштабованість і відсутність структури. В результаті було зроблено кілька спроб забезпечити кращу підтримку онлайн-аргументації. Проте досі жодна з них не має дійсно істотного практичного впливу. Однією з важливих причин цього може бути те, що форумні системи пропонують те, чого не пропонують інші системи: вони допускають дуже складний обмін аргументами, і контраргументами з інтуїтивною схемою птання-відповіді. Інші підходи до онлайн-аргументації або не відображають всю складність аргументації (наприклад, списки pro/con), або вимагають, щоб користувач був навчений роботі з досить складним технічним інструментом (наприклад, спільне створення карти аргументів). "},"Suchasnі-pіdhodi.html":{"url":"Suchasnі-pіdhodi.html","title":"7.3 Сучасні підходи","keywords":"","body":"Сучасні підходи до онлайн-аргументації в процесі електроннї участі, можна умовно розділити на три основні групи: форуми, списки «за» і «проти» і карти аргументації. Перша група, форуми, що також називають асинхронними потоковими обговореннями, дозволяє учасникам обмінюватися аргументами за допомогою послідовності текстових публікацій. Цей підхід зустрічалв багато критики в минулому, тому що він, як вважають, призводить до високого ступеня надмірності [4] і поляризації [5,6], погано масштабуючись з числом залучених учасників і не підтримуює коллаборативність [7]. Однак на практиці він, безумовно, є найбільш часто використовуваним підходом, що підтримує онлайн-аргументацію. Було запропоновано, наприклад, ConsiderIt [8], використовувати онлайнові списки pro & contra для сприяння процесам колективного прийняття рішень. Ці списки дуже добре підходять для оцінки конкретної пропозиції. Однак вони не підходять для розгляду загальних позицій та альтернатив, оскільки не підтримують обмін аргументами, і контраргументами. Інтерактивні системи відображення аргументів дозволяють учасникам структурувати свої аргументи і відносини між ними в карті аргументів. Прикладами є Карнеади [9] і Дорадчий орган [10]. Хоча ці системи дійсно уникають недоліків форумів, вони вимагають від користувачів ознайомлення з семантикою формальної аргументації. Тому на практиці вони використовуються експертами чи студентами, які хочуть дізнатися про логіку аргументації, а не звичайними користувачами, які задіяні у процесі електронної участі. "},"Programne-rіshennya.html":{"url":"Programne-rіshennya.html","title":"7.4 Програмне рішення","keywords":"","body":""},"dm.html":{"url":"dm.html","title":"8 Data Mining","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Термін Data Mining отримав свою назву з двох понять: пошуку цінної інформації у великій базі даних (data) та видобування руди (mining). Обидва процеси вимагають або просіювання величезної кількості сирого матеріалу, або розумного дослідження і пошуку шуканих цінностей. Термін Data Mining часто перекладається як видобуток даних, добування інформації, розкопка даних, інтелектуальний аналіз даних, засоби пошуку закономірностей, витяг знань, аналіз шаблонів, \"витяг зерен знань з гір даних\", розкопка знань в базах даних, інформаційна проходка даних, \"промивання\" даних. Поняття \"виявлення знань у базах даних\" (Knowledge Discovery in Databases, KDD) можна вважати синонімом Data Mining. Отже якщо створити інструмент для автоматизованого збору даних та параметрів системи, зокрема данні про небажані явища, об’єднавши в їх в єдину базу даних можна застосувавши технологію Data Mining знаходити обмеження системи та швидко реагувати на зміни. Нехай на початковому етапі наша система буде не складною, можна з невеликими затратами часу розробити web-форми ідентичні паперовим, застосувати алгоритми, що зараз використовувються, Data Mining, порівняти результати старого та нового підходів. Якщо отримаємо позитивний ефект, рухатись далі до створення вартість проектів з залученням сторонніх IT компанії та технічна складність рекомендаційної інформаційної системи. Звичайно існують \"готові рішення\", інструменти автоматизованого аналізу виробничого процесу, сприяння прийнятю рішень, але якщо їх досі не впроваджено, мабуть, є причини, наприклад складність адаптації готових програмних пакетів до потреб нашого виробництва. Адаптація та налаштуванн можуть бути не менш складним процесом ніж, власне, розробка. В цій роботі я пропоную підходи що дозволять на декілька порядків зменшити суму витрат завдяки використанню моделі розробки програмних засобів «програмування без програмістів», краудсорсингу, графічної мови моделювання Дракон, апаратної платформи на основі недорогих мікро комп’ютерів з ARM архітектурою процесора. "},"Teorіya-priynyattya-rіshen.html":{"url":"Teorіya-priynyattya-rіshen.html","title":"9 Теорія прийняття рішень","keywords":"","body":"Теорія прийняття рішень (ТПР) - це сукупність методів і моделей, призначених для обгрунтування рішень, що приймаються на етапах аналізу, розробки та експлуатації автоматизованих систем різної природи: інформаційних, технічних, виробничих, орrанізаційно-економічних та ін. Особливість використовуваних методів полягає в тому, що вони застосовуються для формалізації певного виду діяльності, орієнтованого на встановлення найкращого варіанту дій. Вибір методів залежить від класу аналізованих проблем, серед яких виділяються структурований н и е і · слабкий про структур і р про ван - н и е. З огляду на характер завдань, що вирішуються аналітиками, конструкторами і кін сультант в процесі створення перерахованих предметно-орієнтованих систем, то в посібнику, в основному, розглядаються про б ь е кт і в 11 и е моделі, необхідні для дослідження структурованих проблем і дозволяють знайти коли: чес'tвепние залежності між параметра Основними кроками прийняття рішень, виконуваними в процесі аналізу виробничого процесу, є: Постановка проблеми, включаючи побудову якісної моделі процесу або системи. Конструювання концептуальної моделі з використанням ТОС та її методів. Вибір критерію ефективності. В нашому випадку - ним є час виконання виробничих завдань по робочій станцї. Матеріальну вигоду можна розрахувати вже за цим критерієм. Побудова математичної моделі. Вибір алгоритму оптімізаціі. Чисельна реалізація алгоритму. Збір даних і перевірка моделі. Аналіз отриманих результатів та конструювання остаточного рішення. Отже формування проблеми передбачає детальний аналіз досліджуваної системи, що виконується, встановленням функціональних, інформаційних і керуючих зв'язків між ними, а також включає докладний опис її функціонування. На основі аналізу виділяються проблема, яка повинна бути вирішена, і причини, що викликали цю проблему. Якісна модель, отримана в результаті аналізу, характеризується: складом локальних моделей; рівнем деталізації; розмірністю; переліком керованих, некерованих і технологічних параметрів. Саме в цьому найкраще допоможе СУЗ та інструменти її підтримки. "},"md.html":{"url":"md.html","title":"10 Markdown","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Markdown Markdown - це проста мова розмітки текстів, який дозволяє створювати фактично повністю оформлену веб-публікацію одночасно з написанням самого матеріалу. «Оформлену» - це означає з гіперпосиланнями, виділенням тексту в потрібних місцях (жирний або курсив), цитатами і списками. У більшості випадків цього досить, а для хардкорних блогерів є ще й розширена версія Markdown з підтримкою таблиць та інших хитрих штук. Але тут вже потрібен особливий софт і подібна функціональність буде потрібно швидше могутнім фахівцям, ніж «простим смертним». В такі нетрі лізти не будемо. Формат файлу - звичайний текст, він же TXT. Деякі редактори ще присвоюють розширення «.md», але це лише для зручності та асоціації такого контенту з певним додатком до OS X (Windows, можливо, теж, але в цій ОС справ з MD-редакторами не мав, так що гадати не буду). Наприклад, так робить iA Writer, хоча всередині хитрого файлу з розширенням «.md» все той же звичайний неформатований текст. Ідея ж Markdown полягає в наборі простих команд або позначень, які MD-конвертер зможе перетворити у стандартний HTML-код. Простий приклад такого позначення - це виділення тексту зірочками: *курсив* - конвертер перетворює такий текст курсив **жирний** - а такий текст буде перетворений в жирний А ось так він виглядає у форматі HTML, у який перетворюється Markdown-конвертером. Саме в такому вигляді матеріал додається в адмінку (в режимі HTML-редактора, звичайно ж, забудьте про візуальному редакторі - він живе своїм особливим життям): текст текст Таким чином, у Markdown можна писати в принципі в будь-якому текстовому редакторі, навіть в самому простому, той же TextEdit. Але в спеціалізованому все ж зручніше з цілого ряду причин, починаючи від вбудованого конвертера і режиму попереднього перегляду результату і закінчуючи автоматизацією введення потрібних команд. Заголовки: # Заголовок 1 ## Заголовок 2 ### Заголовок 3 Результат: Заголовок 1 Заголовок 2 Заголовок 3 Перед заголовком ставите ґрати, за нею пробіл і далі за аналогією. Списки: * Markdown це добре * Markdown дуже крутий * Markdown треба знати Результат: Markdown це добре Markdown дуже крутий Markdown треба знати Тут є важливий нюанс - щоб конвертер вірно зрозумів команду, над списком повинна бути порожній рядок, а після зірочки - пробіл. Також можна створювати і нумеровані списки, але тоді замість зірочки ставиться цифра з комою, а після - пробіл. Для того, щоб створити вкладений список усередині основного списку, треба під потрібним пунктом вставити порожній рядок, після чого один клік на «Tab» і далі за аналогією - зірочка→пробіл→пункт списку. Цитати > Цитата >> Вкладена цитата Результат: Цитата Вкладена цитата Всередині цитати можна додавати заголовки, списки і т. п. В HTML за додавання цитат відповідає команда , у неї й перетворюється поставлений перед текстом символ «>» Також можна ще додавати зображення, будувати таблиці Таблиці | Header1 | Header2 | Header3 | |:--------|:-------:|--------:| | cell1 | cell2 | cell3 | | cell4 | cell5 | cell6 | |---- | cell1 | cell2 | cell3 | | cell4 | cell5 | cell6 | |===== | Foot1 | Foot2 | Foot3 {: rules=\"groups\"} Результат: Header1 Header2 Header3 cell1 cell2 cell3 cell4 cell5 cell6 ---- cell1 cell2 cell3 cell4 cell5 cell6 ===== Foot1 Foot2 Foot3 {: rules=\"groups\"} Вставки програмного коду З підсвіткою операторів: #container { float: left; margin: 0 -240px 0 0; width: 100%; } #container { float: left; margin: 0 -240px 0 0; width: 100%; } та без такої: This is great isn't it? "},"drakon.html":{"url":"drakon.html","title":"11 Візуальна мова DRAKON","keywords":"","body":"Мова DRAKON Що таке дракон? DRAKON-це візуальна мова аерокосмічної промисловості для представлення алгоритмів, процесів і процедур. Мета DRAKON -зробити процеси простими для розуміння. Хто використовує DRAKON ? DRAKON був створений для врахування вимог до програмного забезпечення систем управління космічними апаратами. Поступово DRAKON отримав визнання за межами аерокосмічної галузі. Розробники та керівники проектів використовують DRAKON для документування програмного забезпечення різних типів. Крім інформаційних технологій, DRAKON використовується і в інших місцях, де важливо точне знання \"як\". Яскравим прикладом є медичні алгоритми. Ще одна область, яка виграє від DRAKON, - це бізнес-процеси. DRAKON допомагає бізнесменам організовувати процеси в своїх компаніях. Що робить DRAKON могутнім? Перш за все, DRAKON заснований на кращих практиках малювання блок-схем. Ось деякі з них: * Перетину ліній заборонені; * Допускаються тільки прямі лінії і прямі кути; * Стрілки замінюються простими лініями; * Час на діаграмі тече вниз; розгалуження йде вправо. Ці та інші методи забезпечують узгодженість і візуальну простоту блок-схем. Крім того, DRAKON володіє деякими унікальними функціями, яких немає в інших візуальних мовах: * *Шампур* виділяє щасливий шлях через діаграму; * *Силует* розбиває діаграму на логічні частини і допомагає управляти складністю; * *Загальна доля* показує неявні зв'язки між елементами на різних шляхах. Все це разом узяте робить DRAKON дійсно неперевершеним в порівнянні з іншими візуальними мовами. Візуальна мова дракон Як намалювати блок-схему в DrakonHub Це допомагає використовувати спеціалізований інструмент Безумовно, можна намалювати блок-схеми DRAKON в редакторі діаграм загального призначення. Однак це вимагатиме багато дратівливої роботи, такої як\" полювання за пікселями \" і боротьба з розмірами і вирівнюванням. DrakonHub забезпечує швидке і плавне редагування, так як він спеціально оптимізований для DRAKON. Наше програмне забезпечення для діаграм гарантує, що ваш малюнок є дійсною блок-схемою DRAKON в будь-який момент часу. Вам навіть не потрібно знати мову драконів, щоб почати створювати діаграми драконів. "},"servisy.html":{"url":"servisy.html","title":"12 Сервіси","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Сервіси Всі сервіси, що задіяні в проекті, мають відкритий код, встановлені на домашніх мікросерверах, що працюють на ARM процесорах з малим споживанням електроенергії та компактним розміром. Сервіси працюють кожен у власному контейнері та адмініструються через web-інтерфейс, що контролює кожен окремий сервер. Для використання на виробництві сервіси будуть працювати в середовищі Kubernetes. Element Web/Desktop Element is a glossy web client with an emphasis on performance and usability Language - JavaScript License - Apache-2.0 Homepage : nhttps://element.io/ Matrix Room #element-web:matrix.org Element is a glossy Matrix client for the web built on top of matrix-react-sdk with an emphasis on performance and usability. You can use it at https://app.element.io, read more at https://riot.im and get the source from GitHub! There is also a desktop version. Piwigo Програмне забезпечення фотогалереї для Інтернету, створене активним співтовариством користувачів та розробників. (Demo, Source Code) GPL-2.0 PHP Intergram Безкоштовний віджет чату, який можна легко додати на веб-сайт. Це дозволить спілкуватися з відвідувачами вашого веб-сайту за допомогою месенджера Telegram. Навіщо використовувати бота Telegram для реалізації віджета чату? Використовуючи бота Telegram, я делегую всю роботу з маршрутизації повідомлень та управління станом чату на Telegram. Мені не потрібно створювати вишукані мобільні та настільні програми для кількох платформ, оскільки Telegram вже має чудовий мультиплатформенний чат-клієнт. І я легко впораюся з величезним навантаженням, оскільки мій додаток просто служить каналом між користувачами Telegram та віджетами чату. Papermerge Система управління документами з відкритим кодом орієнтована на скановані документи (електронні архіви). Можливості перегляду файлів подібним чином до dropbox/google drive. OCR, повнотекстовий пошук, накладання/виділення тексту. (Source Code) Apache-2.0 Python NGINX proxy manager Це система управління проксі-сервером, яка базується на NGINX з приємним і чистим веб-інтерфейсом. Також можна отримати надійні сертифікати SSL, керувати кількома проксі-серверами за допомогою індивідуальних конфігурацій, налаштувань та захисту від вторгнень. Це відкритий код і підтримується GitHub. Він ідеально підходить для невеликих серверих середовищ. Ви можете легко відкрити будь-який веб-сервіс. Він включає в себе безкоштовне управління сертифікатами SSL за допомогою letsencrypt, яке також можна використовувати для отримання сертифікатів. Neo Це matrix клієнт створений з нуля за допомогою react.js Розроблений схожим на Telegram і швидшийм за Riot, залишаючись при цьому повнофункціональним. Matrix Це відкритий стандарт для захищеного децентралізованого спілкування. Element-web Це веб-клієнт Matrix, побудований поверх matrix-response-sdk з акцентом на продуктивності та зручності використання. Існує також настільна версія. Argüman Це платформа для аналізу аргументів. arguman.org - це проект з відкритим кодом, який розробляється спільнотою. Користувачі додають твердження, що повинні бути обговорені, підтримані, доведені або спростовані, і сперечаються один з одним, використовуючи кон'юнкції «тому що», «але» або «як би там не було». Критичне мислення - це інтелектуально-дисциплінований процес активного та вмілого осмислення, застосування, аналізу, синтезу та/або оцінки інформації, зібраної на основі спостережень, досвіду, роздумів, міркувань чи спілкування . У своїй зразковій формі він базується на загальнолюдських інтелектуальних цінностях, які виходять за межі предметних розділів: чіткість, точність, точність, послідовність, актуальність, вагомі докази, вагомі причини, глибина, широта та справедливість. Основою критичного мислення є аргументи. Можна думати про відображення аргументів як про відображення візуальної ієрархії. Gogs Це сервіс Git, написаний на Go. (Demo, Source Code) MIT Go KodExplorer Це файловий менеджер, редактор веб-коду, що дозволяє розробляти веб-сайти безпосередньо у веб-браузері. Ви можете запускати KodExplorer в Інтернеті або локально, на платформах Linux, Windows або Mac. Єдина вимога - наявність PHP 5. Source code GPL-2.0 PHP Cotoami У Cotoami ви публікуєте свої ідеї та думки, як у чаті. На хронології є функція спілкування в чаті, за допомогою якої ви можете спілкуватися з іншими користувачами, що мають спільний інтерес. Можна сміливо писати все, що спадає на думку. Ваші дописи просто відходять в минуле, якщо їх не закріпити: Потім ви встановлюєте з'єднання, щоб. Основні будівельні блоки Окремі публікації називаються \"Котос\", що є японським словом, що означає \"річ\", і існує особливий тип Кото, який називається \"Котонома\" (Кото-но-ма означає \"простір Котоса\"). Котонома - це Кото, з яким пов’язана виділена часова шкала чату. Ці дві концепції є основними будівельними елементами бази знань у Котоамі. As you can see in the image above, Cotonomas are posted to a timeline like Cotos. Actually, you can treat Cotonomas as Cotos. They can be pinned to another Cotonoma or connected to other Cotos. Separation of writing and connecting In many cases of note-taking, writing and connecting things are happening at the same time. You put things into categories, which are represented as, for example, sections in a notebook, folders/directories on an operating system or nodes in outliner. You almost connect things unconsciously just following Vertical Relationships, which will be explained later, to make a tree structure. Cotoami also supports this way of organizing things, but its main aim is to separate writing and connecting to make the latter a more conscious step. For example, Cotoami has a random/shuffle feature to encourage you to observe a variety of Cotos to discover new connections. Cotoami's concept of knowledge generation Collect random ideas by posting Cotos to a timeline. Look for connections between Cotos and make them as they are found. Cotonomatize: Convert a hub Coto that has many outbound connections and looks worth discussing into a Cotonoma. Repeat the same thing in the new Cotonoma. Cotonomatizing During a process of chatting, posting random ideas and creating structured content by connecting Cotos, some Cotos would collect more connections than others. Those Cotos are possibly important to you or your team and worth discussing as independent topics. Cotonomatizing allows you to convert them into Cotonomas to create new dedicated places to discuss and research the topics in a spontaneous way. Linking Phrases Since the version 0.21.0, you can annotate connections. The term \"Linking Phrases\" is borrowed from Concept Maps. Actually you can create concept maps with this feature as introduced in the Concept Mapping section. Cotonomas (Cotonomatizing) and Linking Phrases are the most two important features so far in Cotoami. Why is the Linking Phrases feature so important? Concept mapping is a good way to demonstrate this feature, but an important difference is that Cotoami's linking phrases are optional. That means you should annotate only connections whose relationships are obscure to you. These obscure relationships are possibly valuable knowledge for you (since you didn't know them well before), and should be highlighted in your knowledge-base (that's why annotated connections are rendered so that they stand out). I personally call them Horizontal Relationships. On the other hand, Vertical Relationships generally means inclusive or deductive relationships like \"includes\", \"results in\", or \"is determined by\". Simple arrow lines would be enough to express these relationships and you wouldn't feel the need for annotations in most cases. So whether a connection is vertical or horizontal depends on your context in the same way as Cotonomas are concepts emerged in the context of your knowledge creation. The optional linking phrases are helpful especially when your knowledge graph grows larger. When a graph is relatively simple with fewer nodes and connections, it works like a mind map. You can grasp the tree structure even if there are some crosslinks. However, when a graph grows larger and becomes more complex, it'll become difficult to follow the structure. In that phase, annotated connections become more important than plain ones because they work as highlights in the connections. You just need to focus on blue connections in a graph to grasp what you've learned so far. Concept Mapping What is a Concept Map? The screenshot above is an example of a concept map explaining why we have seasons (originally presented in the article at Concept Maps official website: http://cmap.ihmc.us/docs/theory-of-concept-maps). If you are interested in how this concept map was created with Cotoami, here is a youtube video to demonstrate the process: \"Making a concept map with Cotoami\" - https://www.youtube.com/watch?v=YYQrsGnSoLU Cotoami Scraper To discover interesting connections, you should collect as many varieties of Cotos as possible. But how? Cotoami Scraper helps you generate Cotos from various sources. Cotoami Scraper is a Chrome Extension that scrapes web content to generate inputs for Cotoami. Currently, it supports the three types of content in web pages: Page link, Selection and Kindle highlights. The screenshot below shows scraping Kindle highlights. Heimdall Heimdall is an elegant solution to organise all your web applications. (Source Code) MIT PHP Synapse Server for Matrix, an open standard for decentralized persistent communication. (Source Code) Apache-2.0 Python Next.js GitPitch Це ідеальне слайд-шоу рішення для технічних конференцій, тренінгів, розробників та викладачів. Доступний в MacOS, Linux та Windows 10. Працюйте та презентуйте в автономному режимі. Експорт у PDF, PPTX та HTML, можна ділитися загальнодоступними, приватними та захищеними паролем слайдами в Інтернеті. GitPitch - це інструмент презентації для MacOS, Linux та Windows 10. GitPitch Desktop дозволяє розробляти, попередньо переглядати та представляти презентації зі в режимі офлайн. Експорт презентації в PDF, PPTX та HTML. А також публікуйте та діліться презентаціями знижки в Інтернеті. Щоб опублікувати будь-яку колоду, просто git-push з будь-якого репозиторію на GitHub, GitLab або Gogs. Calibre Web Веб-додаток, що забезпечує зручний інтерфейс для перегляду, читання та завантаження електронних книг. GPL-3.0 Python [GitBook] matrix-static Це статичний клієнт Matrix, доступний лише для читання, корисний для перегляду загальнодоступних кімнат та розроблений для контролю/індексації. Джерело можна знайти на GitHub. "},"baza-znan.html":{"url":"baza-znan.html","title":"12.1 База знань","keywords":"","body":" !INCLUDE \"htm/intergram.html\" База знань \"ТребаТак\" Поєднавши два застосунки з відкритим кодом Cotoami та Gitbook отримуємо потужний інструмент опису об'єктного середовища, що поєднує можливості системи створення електронної документації з можливостями структурування та візуалізації карт концепцій. Спочатку додаємо опис об'єкту в gitbook-сервіс просто з інтерфейсу користувача KroschuExplorer. Потім за допомогою розширення для браузера Chrome - Cotoami Scraper, додаємо об'єкт, його опис в компонент Cotoami для подальшої побудови концепт-карти. Далі будуємо дерево поточної реальності групуючи проблеми, групи таких роблем, можна розглядати як небажані явища. Вивчаємо отриманий результат, та розробляємо зміни спрямовані на усунення небажаних явищ. "},"avtoryzatciya.html":{"url":"avtoryzatciya.html","title":"12.1.1 Авторизація","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" 1 Перейдіть за посиланням km.treba.ml 2 Введіть Вашу електронну пошту у вікні запиту, та перейдіть за отриманим посиланням. Приклад: "},"Programniy-іnstrumentarіy.html":{"url":"Programniy-іnstrumentarіy.html","title":"13 Програмний інструментарій","keywords":"","body":"При явному інтересі до онтологічного інжинірингу на сьогодні не існує промислових систем проектування онтологій. Але саме побудова онтології, інакше візуальний онтологічний інжиніринг є потужним когнітивним інструментом, що дозволяє зробити видимими структури корпоративного знання. Тому сервіси, що я пропоную використовувати для цього - для опису об'єктів реальносі gitbook та cotoami project для їх структурування. "},"reshoryng.html":{"url":"reshoryng.html","title":"Роботизація замість глобалізації","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Роботизація замість глобалізації Робоча сила більше нікому не цікава — на зміну аутсорсингу йде решоринг: міжнародні концерни повертають виробництва в Європу і США. Країни, що розвиваються, втрачають тисяч робочих місць, а в розвинених відкриваються підприємства, на яких працюють роботи. Економічна глобалізація, плодами якої світові еліти насолоджувалися протягом останніх 20 років, відбулася багато в чому завдяки усуненню торговельних бар’єрів (вступ до СОТ Китаю на початку століття) і впливу нових інформаційних технологій. Комп’ютерна революція і інтернет призвели до інформаційної прозорості, необхідної для вибудовування надскладних логістичних ланцюжків міжнародної системи виробництва й торгівлі, дозволяючи відстежувати і контролювати всі стадії виробництва і транспортування товарів, в якій би точці земної кулі вони не відбувалися. Земля стала «плоскою», за висловом відомого апологета глобалізації соціолога Томаса Фрідмана. Це означає, що дистанція між сировиною, виробництвом, товарами і їх кінцевими споживачами не настільки істотна, набагато важливіші не географічні, а чисто економічні фактори, наприклад відносна вартість робочої сили і курси національних валют. Звичайно, в реальності ніякого «плоского» світу по Фрідману ніколи не було, у кращому випадку ми спостерігали процес напівглобалізації (semiglobalization), за висловом економіста Панкая Гемавата. Тобто процес, в якому глобалізація частково компенсувалися нейтральними або навіть противонаправленными трендами. Наприклад, висока ступінь свободи переміщення капіталу та товарів не збігається зі свободою переміщення робочої сили з країни в країну (отримати робочу візу в деяких державах часто майже так само складно, як і 20 років тому). Зате капітал легко переміщався в пошуках цієї найдешевшої робочої сили, переводячи підприємства з “дорогих” країн в “дешеві”. Однак навіть цей глобалізаційний процес останнім часом видихався і, можливо, зовсім згортається. Напівглобалізація зміняться деглобалізациею. За даними американської Reshoring Initiative, епоха аутсорсингу виробництва з США (і з інших розвинених країн) в юрисдикції з дешевою робочою силою добігає кінця. Той же процес фіксується і в інших дослідженнях, наприклад «Homeward bound: nearshoring continues, labor becomes a limiting factor, and automation takes root» від AlixPartners, а також у свіжому листопадовому доповіді MGI «Making it in America: Revitalizing US manufacturing». Падіння зайнятості в останні 30-40 років у виробничому секторі — процес не унікальний. Вона знижувалася через автоматизацію і аутсорсинг не тільки в США, але практично у всіх індустріально розвинених країнах. Стабілізувати цей процес в останні 20 років вдалося лише Німеччині. Однак в останні роки щось змінилося. У 2014-2015 роках у США було досягнуто паритет між розміщенням американськими компаніями робочих місць у промисловому секторі за кордоном (аутсорсингом) і створенням і поверненням (ноушорингом і решорингом) робочих місць в США (в решоринг записується рішення американської або будь-якої іншої компанії відкрити виробництво в США при наявності інших альтернатив). У 2016-му, вперше з 1970-х, багаторічний процес аутсорсингу розвернувся. Замість нетто-втрати близько 220 тис. робочих місць в промисловості в середньому за рік на початку 2000-х за рахунок аутсорсингу нетто-створення робочих місць в 2016 році стало позитивним: плюс близько 25 тис. Чому це відбувається? Важливими факторами решоринга є субсидії і податкові преференції з боку влади США (найчастіше на рівні штатів), очікування зниження корпоративних податків у результаті податкової реформи і зростання оплати праці в деяких традиційних країнах аутсорсингу, насамперед у Китаї. У галузевому розрізі решоринг найбільш популярний там, де нове американське виробництво має значні конкурентні переваги. По-перше, це виробництво товарів з великим відношенням ваги до вартості (автомобілі, важка і об’ємна побутова техніка). Для таких товарів відсутність витрат на морське транспортування найбільш актуально. По-друге, виробництво, що передбачає надточну логістику за часом (виробництво з коротким циклом, just-in-time) або схильне до частих змін в споживчому попиті і/або дизайні (перш за все автокомплектуючі і автозапчастини). По-третє, це різні пластики і продукти нафтопереробки. Тут решорінг пояснюється бумом сланцевого видобутку нафти і газу в США. З метану, етану, пропану, бутану, ізобутану, пентану виготовляються різні пластики. По-четверте, виробництво, в якому необхідний високий рівень контролю менеджменту для дотримання норм якості (наприклад, медичне обладнання). По-п’яте, виробництво, орієнтоване на клієнтів, обмежених у можливості купувати товари, не вироблені в США (наприклад, ВПК). По-шосте, виробництво товарів, для яких дуже важливо дотримання і захист авторського права і патентів. Нарешті, по-сьоме, решоринг відбувається в галузях, найбільш чутливих до технологій автоматизації і роботизації виробництва. Перш за все це виробництво текстилю та одягу, побутових електроприладів, автомобілів і автокомплектуючих. Саме останній фактор, автоматизація і роботизація виробництва, виводить решоринг на новий рівень міжнародного тренда в усьому промисловому виробництві. Причому не тільки в США, але і в інших розвинених країнах, перш за все в Європі (де фактор дешевої енергії поки не актуальний). Для маленьких і дорогих товарів (смартфони наприклад) дистанція (і вартість перевезення) дійсно має мало значення, для них світ і справді «плоский». А ось виробництво автомобілів і автозапчастин (A&A) щосили повертається на рідні береги вже зараз. Аналітики Міжнародної організації праці (МОП), відзначають, що даний сектор має великі перспективи як в області роботизації, так і решоринга. Роботизація / автоматизація в секторі йде фактично з запуску першого конвеєра Генрі Форда в 1913-му, і зараз галузь є лідером по використанню промислових роботів. Завдяки автоматизації випуск автозаводів в США за останні 20 років збільшився на 53%, в той час як зайнятість скоротилася на 28%. Технології постійно вдосконалюються, і ручна праця продовжує вибувати із галузі. З точки зору решоринга автогалузь теж перспективна, так як на відміну від електроніки для її продукції характерно велике відношення ваги і/або об’єму до вартості (порівняно великі транспортні та логістичні витрати). Зі свіжих прикладів — Volvo інвестує $1 млрд у будівництво заводу в Чарльстоні (США, Південна Кароліна), потужність — 150 тис. автомобілів в рік, робоча сила — 3,9 тис. осіб. В галузі А&A аутсорсинг в останні 30-40 років часто набував форму ниашоринга (nearshoring), перенесення виробництва в країни, що розвиваються, географічно близькі до ринків збуту. Наприклад, в Мексику для ринку США або в Туреччину і Східну Європу для ринку Західної Європи (яскравий приклад — створення автокластера у Словаччині). Найбільший приклад ніашорингу-Мексика. У 1994 році (до набрання чинності NAFTA — договору про безмитну торгівлю США, Мексики і Канади) дефіцит Мексики в торгівлі з США становив 1,3млрд.до2016−говінзмінивсянапрофіцитв 63 млрд. Зростання відбулося за рахунок електроніки, телекомунікаційної техніки і у величезній мірі — автомобілів. У 2016 році в Мексиці було вироблено 3,6 млн автомобілів (7-е місце в світі) проти 1,9 млн в 2000-му (9-е місце в світі). 2,7 млн з них експортуються (левова частка, 2,1 млн, в США), що робить Мексику четвертим експортером автомобілів у світі. У 2016-му Мексика експортувала в США автокомплектуючих на 46млрдіавтомашинна 49,3 млрд, відповідний імпорт з США в Мексику склав 19,8 млрді 4 млрд, разом профіцит Мексики в автоторгівлі з США - $ 71,5 млрд. Однак, незважаючи на всі успіхи, деякі компанії, що працюють у найбільших промислових кластерах Мексики на кордоні з США, гострить лижі, тобто заявляють про намір перекладу та/або розвитку нових потужностей в США. Якщо решоринг виробництва в розвинені країни набере обертів, бідним країнам на кшталт Бангладеш доведеться шукати нову модель економічного зростання. Перспективи роботизації і решоринга описують так: «Конфігурація індустрії виробництва одягу може бути змінена через впровадження sewbots (робошвей). У 2015-му Softwear Automation випустила LOWRY, робота, оснащеного машинним зором і технологіями автоматичних маніпуляцій з тканинами. Технології дозволяють досягти того, що здавалося раніше неможливим: робошвеї автоматизують найскладніші і трудомісткі процеси у виробництві одягу. Якщо повна ціна використання робошвеи виявиться менше, ніж виробництво на аутсорсингу, включаючи пряму економію від морського транспортування, митних зборів і знижений репутаційний ризик, решоринг виробництва одягу куди-небудь в Каліфорнії може виявитися більш привабливим, ніж аутсорсинг у В’єтнам. З огляду на додаткові плюси робошвей, які включають зниження допустимого людьми браку, більш високий рівень безпеки виробництва, стабільну якість продукції, інсайдери індустрії вважають, що робошвеї зможуть залишити робочих галузі в країнах з дешевою працею без роботи”. Роботизація робить виробництво в США конкурентоспроможним по відношенню до найдешевшої ручної праці. Вартість ручної праці, для виробництва однієї футболки на новій роботизованою фабриці складе $0,33 за штуку. Виробництво одягу до останнього часу відставало від процесів автоматизації в автомобільній промисловості і електроніки, так як ручна праця в галузі часто вимагав дуже тонкої і точної моторики. Однак нові технології з проблемою успішно справляються. Тонкої і точної моторики потребує і виробництво на нашому заводі, що працює як ніашорингове (nearshoring), і нема ніяких гарантій що рано чи пізно виникнуть аналогічні системи, що автоматизують також виробництво бортових електромереж. За однойменним матеріалом з мережі інтернет "},"sten.html":{"url":"sten.html","title":"  ","keywords":"","body":" window.intergramId = \"550915569\"; window.intergramCustomizations = { mainColor: \"#474747\", // Can be any css supported color 'red', 'rgb(255,87,34)', etc alwaysUseFloatingButton: true // Use the mobile floating button also on large screens }; window.intergramServer = \"https://blog.treba.ml\" Стенограма аудіо-ряду відео про жінок заводу. Жінкам працювати на технічному підприємстві у Луцьку реально - доказом є завод Кромберг and Шуберт Луцьк. Оксана Ткачук прийшла на підприємство працівницею лінії а сьогодні начальник технічного відділу. Говорить Оксана Ткачук: «Звичайно освіта потрібна, вона допомагає розуміти що таке техніка як з нею працювати, а далі всі навички приходять в процесі роботи, тому що моя спеціальність і те що виконую зараз, вони не пов’язані, все пройшло з досвідом, розумінням.» Вікторії Пазічук просто філолог. 12 років тому, просто завітала на підприємство, щоб підзаробити грошей влітку після 4-го курсу філологічного факультету. Робота так сподобалося що жінка залишила навчання заряди Кромберг and Шуберт, зараз керує чоловіками технарями. Говорить Вікторія пазічук: «Для того щоб працювати з чоловіками потрібно переймати частково поведінку чоловіків, тобто бути чіткою ховати трохи свої емоці ну і бути жорсткою у деяких моментах.» На заводі Кромберг and Шуберт працює 6000 осіб 65 відсотків - жінки. Більшість керівних посад обіймають панянки. Говорить Віра Редькович, керівник відділу якості заводу: «Жінки всеж таки емоційні, але нічого, в нас є команда і ми працюємо, все добре.» Кромберг and Шуберт зробив ставку на реалізованих жінок. Говорить начальник зміни Віра Матерецька: «Дуже дружні, дуже тримаємось разом, в купці, один одному допомагаємо.» Говорить Марьяна Саржан, майстер зміни: «Треба просто мати підхід до кожної з людей. Не важливо, чоловік це чи жінка. Кожен любить, щоб до нього була увага, окремий підхід.» Європейський підхід до питань гендерної рівності, завдяки цьому працівниці Кромберг and Шуберт реалізовуються і у карьєрі і в родині, руйнуючи стереотип, що в сучасному світі жінка не може встигнути все. "}}